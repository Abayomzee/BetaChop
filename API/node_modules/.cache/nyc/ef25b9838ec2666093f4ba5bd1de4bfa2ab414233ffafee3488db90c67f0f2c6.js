"use strict";var cov_2g6uq2zib=function(){var path="/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js";var hash="528e7ded820be550d21764b4ce443147d78f0ef2";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:12},end:{line:8,column:71}},"3":{start:{line:10,column:25},end:{line:10,column:86}},"4":{start:{line:12,column:39},end:{line:12,column:93}},"5":{start:{line:21,column:15},end:{line:21,column:47}},"6":{start:{line:22,column:21},end:{line:155,column:1}},"7":{start:{line:30,column:19},end:{line:30,column:48}},"8":{start:{line:32,column:4},end:{line:32,column:43}},"9":{start:{line:33,column:4},end:{line:33,column:30}},"10":{start:{line:43,column:4},end:{line:46,column:5}},"11":{start:{line:44,column:6},end:{line:44,column:66}},"12":{start:{line:45,column:6},end:{line:45,column:32}},"13":{start:{line:48,column:18},end:{line:48,column:26}},"14":{start:{line:50,column:22},end:{line:50,column:53}},"15":{start:{line:52,column:4},end:{line:56,column:19}},"16":{start:{line:66,column:18},end:{line:66,column:26}},"17":{start:{line:67,column:13},end:{line:67,column:26}},"18":{start:{line:69,column:4},end:{line:74,column:5}},"19":{start:{line:70,column:6},end:{line:73,column:9}},"20":{start:{line:76,column:21},end:{line:76,column:59}},"21":{start:{line:78,column:4},end:{line:83,column:5}},"22":{start:{line:79,column:6},end:{line:82,column:9}},"23":{start:{line:85,column:4},end:{line:89,column:19}},"24":{start:{line:99,column:13},end:{line:99,column:26}},"25":{start:{line:101,column:4},end:{line:106,column:5}},"26":{start:{line:102,column:6},end:{line:105,column:9}},"27":{start:{line:108,column:20},end:{line:108,column:46}},"28":{start:{line:110,column:24},end:{line:110,column:46}},"29":{start:{line:112,column:4},end:{line:117,column:5}},"30":{start:{line:113,column:6},end:{line:116,column:9}},"31":{start:{line:119,column:4},end:{line:122,column:7}},"32":{start:{line:132,column:13},end:{line:132,column:26}},"33":{start:{line:134,column:4},end:{line:139,column:5}},"34":{start:{line:135,column:6},end:{line:138,column:9}},"35":{start:{line:141,column:22},end:{line:141,column:51}},"36":{start:{line:143,column:4},end:{line:148,column:5}},"37":{start:{line:144,column:6},end:{line:147,column:21}},"38":{start:{line:150,column:4},end:{line:153,column:19}},"39":{start:{line:156,column:15},end:{line:156,column:29}},"40":{start:{line:157,column:0},end:{line:157,column:27}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:12,column:9},end:{line:12,column:31}},loc:{start:{line:12,column:37},end:{line:12,column:95}},line:12},"1":{name:"fetchAllMeals",decl:{start:{line:29,column:26},end:{line:29,column:39}},loc:{start:{line:29,column:50},end:{line:34,column:3}},line:29},"2":{name:"addAMeal",decl:{start:{line:42,column:21},end:{line:42,column:29}},loc:{start:{line:42,column:40},end:{line:57,column:3}},line:42},"3":{name:"updateAMeal",decl:{start:{line:65,column:24},end:{line:65,column:35}},loc:{start:{line:65,column:46},end:{line:90,column:3}},line:65},"4":{name:"getAMeal",decl:{start:{line:98,column:21},end:{line:98,column:29}},loc:{start:{line:98,column:40},end:{line:123,column:3}},line:98},"5":{name:"deleteAMeal",decl:{start:{line:131,column:24},end:{line:131,column:35}},loc:{start:{line:131,column:46},end:{line:154,column:3}},line:131}},branchMap:{"0":{loc:{start:{line:12,column:46},end:{line:12,column:92}},type:"cond-expr",locations:[{start:{line:12,column:70},end:{line:12,column:73}},{start:{line:12,column:76},end:{line:12,column:92}}],line:12},"1":{loc:{start:{line:12,column:46},end:{line:12,column:67}},type:"binary-expr",locations:[{start:{line:12,column:46},end:{line:12,column:49}},{start:{line:12,column:53},end:{line:12,column:67}}],line:12},"2":{loc:{start:{line:43,column:4},end:{line:46,column:5}},type:"if",locations:[{start:{line:43,column:4},end:{line:46,column:5}},{start:{line:43,column:4},end:{line:46,column:5}}],line:43},"3":{loc:{start:{line:43,column:8},end:{line:43,column:59}},type:"binary-expr",locations:[{start:{line:43,column:8},end:{line:43,column:22}},{start:{line:43,column:26},end:{line:43,column:41}},{start:{line:43,column:45},end:{line:43,column:59}}],line:43},"4":{loc:{start:{line:69,column:4},end:{line:74,column:5}},type:"if",locations:[{start:{line:69,column:4},end:{line:74,column:5}},{start:{line:69,column:4},end:{line:74,column:5}}],line:69},"5":{loc:{start:{line:78,column:4},end:{line:83,column:5}},type:"if",locations:[{start:{line:78,column:4},end:{line:83,column:5}},{start:{line:78,column:4},end:{line:83,column:5}}],line:78},"6":{loc:{start:{line:101,column:4},end:{line:106,column:5}},type:"if",locations:[{start:{line:101,column:4},end:{line:106,column:5}},{start:{line:101,column:4},end:{line:106,column:5}}],line:101},"7":{loc:{start:{line:112,column:4},end:{line:117,column:5}},type:"if",locations:[{start:{line:112,column:4},end:{line:117,column:5}},{start:{line:112,column:4},end:{line:117,column:5}}],line:112},"8":{loc:{start:{line:134,column:4},end:{line:139,column:5}},type:"if",locations:[{start:{line:134,column:4},end:{line:139,column:5}},{start:{line:134,column:4},end:{line:139,column:5}}],line:134},"9":{loc:{start:{line:143,column:4},end:{line:148,column:5}},type:"if",locations:[{start:{line:143,column:4},end:{line:148,column:5}},{start:{line:143,column:4},end:{line:148,column:5}}],line:143}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2g6uq2zib.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2g6uq2zib.s[1]++;exports.default=void 0;var _meal=(cov_2g6uq2zib.s[2]++,_interopRequireDefault(require("../services/meal.service")));var _ResponseGenerator=(cov_2g6uq2zib.s[3]++,_interopRequireDefault(require("../utils/ResponseGenerator")));function _interopRequireDefault(obj){cov_2g6uq2zib.f[0]++;cov_2g6uq2zib.s[4]++;return(cov_2g6uq2zib.b[1][0]++,obj)&&(cov_2g6uq2zib.b[1][1]++,obj.__esModule)?(cov_2g6uq2zib.b[0][0]++,obj):(cov_2g6uq2zib.b[0][1]++,{default:obj});}/**
 * meal controller performs controls  request and response -
 * fetching all meal,
 * adding a new meal,
 * updating an existing meal and
 * getting a particular meal
 */var response=(cov_2g6uq2zib.s[5]++,new _ResponseGenerator.default());var MealController=(cov_2g6uq2zib.s[6]++,{/**
   * @description retrieve and return all meals from our data
   * @param {object} req
   * @param {object} res
   * @returns {Array} meal object array
   */fetchAllMeals:function fetchAllMeals(req,res){cov_2g6uq2zib.f[1]++;var allMeals=(cov_2g6uq2zib.s[7]++,_meal.default.fetchAllMeals());cov_2g6uq2zib.s[8]++;response.setSuccess(200,'',allMeals);cov_2g6uq2zib.s[9]++;return response.send(res);},/**
   * @description create a meal record
   * @param {object} req
   * @param {object} res
   * @returns {object} apiResponse
   */addAMeal:function addAMeal(req,res){cov_2g6uq2zib.f[2]++;cov_2g6uq2zib.s[10]++;if((cov_2g6uq2zib.b[3][0]++,!req.body.name)||(cov_2g6uq2zib.b[3][1]++,!req.body.price)||(cov_2g6uq2zib.b[3][2]++,!req.body.size)){cov_2g6uq2zib.b[2][0]++;cov_2g6uq2zib.s[11]++;response.setError(400,'All parameters are required',null);cov_2g6uq2zib.s[12]++;return response.send(res);}else{cov_2g6uq2zib.b[2][1]++;}var newMeal=(cov_2g6uq2zib.s[13]++,req.body);var createdMeal=(cov_2g6uq2zib.s[14]++,_meal.default.addAMeal(newMeal));cov_2g6uq2zib.s[15]++;return res.json({status:'success',message:'Meal successfully added!',data:createdMeal}).status(201);},/**
   * @description update a meal record
   * @param {object} req
   * @param {object} res
   * @returns {object} apiResponse
   */updateAMeal:function updateAMeal(req,res){cov_2g6uq2zib.f[3]++;var newMeal=(cov_2g6uq2zib.s[16]++,req.body);var id=(cov_2g6uq2zib.s[17]++,req.params.id);cov_2g6uq2zib.s[18]++;if(Number.isNaN(Number(id))){cov_2g6uq2zib.b[4][0]++;cov_2g6uq2zib.s[19]++;return res.status(400).json({status:'error',message:'Invalid ID. ID must be a number'});}else{cov_2g6uq2zib.b[4][1]++;}var updateMeal=(cov_2g6uq2zib.s[20]++,_meal.default.updateAMeal(id,newMeal));cov_2g6uq2zib.s[21]++;if(updateMeal==null){cov_2g6uq2zib.b[5][0]++;cov_2g6uq2zib.s[22]++;return res.status(400).json({status:'error',message:"Meal with id ".concat(id," cannot be found")});}else{cov_2g6uq2zib.b[5][1]++;}cov_2g6uq2zib.s[23]++;return res.json({status:'success',message:'Meal was successfully updated',data:updateMeal}).status(201);},/**
   * @description get a specific meal
   * @param {object} req
   * @param {object} res
   * @returns {object} found meal
   */getAMeal:function getAMeal(req,res){cov_2g6uq2zib.f[4]++;var id=(cov_2g6uq2zib.s[24]++,req.params.id);cov_2g6uq2zib.s[25]++;if(Number.isNaN(Number(id))){cov_2g6uq2zib.b[6][0]++;cov_2g6uq2zib.s[26]++;return res.status(400).json({status:'error',message:'Invalid ID. ID must be a number'});}else{cov_2g6uq2zib.b[6][1]++;}var foundMeal=(cov_2g6uq2zib.s[27]++,_meal.default.getAMeal(id));var foundMealKeys=(cov_2g6uq2zib.s[28]++,Object.keys(foundMeal));cov_2g6uq2zib.s[29]++;if(foundMealKeys.length===0){cov_2g6uq2zib.b[7][0]++;cov_2g6uq2zib.s[30]++;return res.status(404).json({status:'error',message:'Meal cannot be found'});}else{cov_2g6uq2zib.b[7][1]++;}cov_2g6uq2zib.s[31]++;return res.status(200).json({status:'success',data:foundMeal});},/**
   * @description get a specific meal
   * @param {object} req
   * @param {object} res
   * @returns {object} response
   */deleteAMeal:function deleteAMeal(req,res){cov_2g6uq2zib.f[5]++;var id=(cov_2g6uq2zib.s[32]++,req.params.id);cov_2g6uq2zib.s[33]++;if(Number.isNaN(Number(id))){cov_2g6uq2zib.b[8][0]++;cov_2g6uq2zib.s[34]++;return res.status(400).json({status:'error',message:'Invalid ID. ID must be a number'});}else{cov_2g6uq2zib.b[8][1]++;}var deletedMeal=(cov_2g6uq2zib.s[35]++,_meal.default.deleteAMeal(id));cov_2g6uq2zib.s[36]++;if(deletedMeal==null){cov_2g6uq2zib.b[9][0]++;cov_2g6uq2zib.s[37]++;return res.json({status:'error',message:"Meal with id ".concat(id," cannot be found")}).status(404);}else{cov_2g6uq2zib.b[9][1]++;}cov_2g6uq2zib.s[38]++;return res.json({status:'success',message:'Meal was successfully deleted'}).status(200);}});var _default=(cov_2g6uq2zib.s[39]++,MealController);cov_2g6uq2zib.s[40]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,