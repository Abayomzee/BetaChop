{"version":3,"sources":["ResponseGenerator.js"],"names":["ResponseGenerator","statusCode","type","data","message","res","status","json"],"mappings":";;;;;;;;;;;;;AAAA;;;IAGMA,iB;;;AACJ,+BAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,MAAM,EAAlB;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;AAED;;;;;;;;;+BAMWH,U,EAAYG,O,EAASD,I,EAAM;AACpC,WAAKF,UAAL,GAAkBA,UAAlB;;AACA,UAAIG,OAAO,IAAI,IAAf,EAAqB;AACnB,aAAKA,OAAL,GAAeA,OAAf;AACD;;AACD,UAAID,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAKA,IAAL,GAAYA,IAAZ;AACD;;AACD,WAAKD,IAAL,GAAY,SAAZ;AACD;AAED;;;;;;;;6BAMSD,U,EAAYG,O,EAAS;AAC5B,WAAKH,UAAL,GAAkBA,UAAlB;AACA,WAAKG,OAAL,GAAeA,OAAf;AACA,WAAKF,IAAL,GAAY,OAAZ;AACD;AAED;;;;;;;;yBAKKG,G,EAAK;AACR,UAAI,KAAKH,IAAL,KAAc,SAAlB,EAA6B;AAC3B,eAAOG,GAAG,CAACC,MAAJ,CAAW,KAAKL,UAAhB,EAA4BM,IAA5B,CAAiC;AACtCD,UAAAA,MAAM,EAAE,KAAKJ,IADyB;AAEtCE,UAAAA,OAAO,EAAE,KAAKA,OAFwB;AAGtCD,UAAAA,IAAI,EAAE,KAAKA;AAH2B,SAAjC,CAAP;AAKD,OAPO,CAQR;;;AACA,aAAOE,GAAG,CAACC,MAAJ,CAAW,KAAKL,UAAhB,EAA4BM,IAA5B,CAAiC;AACtCD,QAAAA,MAAM,EAAE,KAAKJ,IADyB;AAEtCE,QAAAA,OAAO,EAAE,KAAKA;AAFwB,OAAjC,CAAP;AAID;;;;;;eAGYJ,iB","sourceRoot":"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils","sourcesContent":["/**\n * a class for api response\n */\nclass ResponseGenerator {\n  constructor() {\n    this.statusCode = null;\n    this.type = null;\n    this.data = [] || {};\n    this.message = null;\n  }\n\n  /**\n   * @description set Api response for 200 & 201\n   *  @param{int} statusCode\n   * @param {object} data\n   */\n\n  setSuccess(statusCode, message, data) {\n    this.statusCode = statusCode;\n    if (message != null) {\n      this.message = message;\n    }\n    if (data != null) {\n      this.data = data;\n    }\n    this.type = 'success';\n  }\n\n  /**\n   * @description set Api response for 400, 401, 403, 404, 503\n   *  @param{int} statusCode\n   * @param {object} data\n   */\n\n  setError(statusCode, message) {\n    this.statusCode = statusCode;\n    this.message = message;\n    this.type = 'error';\n  }\n\n  /**\n   * Sends response\n   * @param {object} res\n   * @returns {object} responseObject\n   */\n  send(res) {\n    if (this.type === 'success') {\n      return res.status(this.statusCode).json({\n        status: this.type,\n        message: this.message,\n        data: this.data,\n      });\n    }\n    // Here this.type === 'failure'\n    return res.status(this.statusCode).json({\n      status: this.type,\n      message: this.message,\n    });\n  }\n}\n\nexport default ResponseGenerator;\n"]}