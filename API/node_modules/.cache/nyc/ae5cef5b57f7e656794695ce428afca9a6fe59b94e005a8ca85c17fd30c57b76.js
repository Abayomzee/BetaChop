"use strict";var cov_2g6uq2zib=function(){var path="/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js";var hash="a2c6a8f3f4a162cf56963e830ab293da6760317a";var Function=function(){}.constructor;var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",statementMap:{"0":{start:{line:3,column:0},end:{line:5,column:3}},"1":{start:{line:6,column:0},end:{line:6,column:25}},"2":{start:{line:8,column:12},end:{line:8,column:71}},"3":{start:{line:10,column:25},end:{line:10,column:86}},"4":{start:{line:12,column:39},end:{line:12,column:93}},"5":{start:{line:21,column:15},end:{line:21,column:47}},"6":{start:{line:22,column:21},end:{line:163,column:1}},"7":{start:{line:30,column:19},end:{line:30,column:48}},"8":{start:{line:38,column:4},end:{line:38,column:45}},"9":{start:{line:39,column:4},end:{line:39,column:30}},"10":{start:{line:49,column:4},end:{line:54,column:5}},"11":{start:{line:50,column:6},end:{line:53,column:9}},"12":{start:{line:56,column:18},end:{line:56,column:26}},"13":{start:{line:58,column:22},end:{line:58,column:53}},"14":{start:{line:60,column:4},end:{line:64,column:19}},"15":{start:{line:74,column:18},end:{line:74,column:26}},"16":{start:{line:75,column:13},end:{line:75,column:26}},"17":{start:{line:77,column:4},end:{line:82,column:5}},"18":{start:{line:78,column:6},end:{line:81,column:9}},"19":{start:{line:84,column:21},end:{line:84,column:59}},"20":{start:{line:86,column:4},end:{line:91,column:5}},"21":{start:{line:87,column:6},end:{line:90,column:9}},"22":{start:{line:93,column:4},end:{line:97,column:19}},"23":{start:{line:107,column:13},end:{line:107,column:26}},"24":{start:{line:109,column:4},end:{line:114,column:5}},"25":{start:{line:110,column:6},end:{line:113,column:9}},"26":{start:{line:116,column:20},end:{line:116,column:46}},"27":{start:{line:118,column:24},end:{line:118,column:46}},"28":{start:{line:120,column:4},end:{line:125,column:5}},"29":{start:{line:121,column:6},end:{line:124,column:9}},"30":{start:{line:127,column:4},end:{line:130,column:7}},"31":{start:{line:140,column:13},end:{line:140,column:26}},"32":{start:{line:142,column:4},end:{line:147,column:5}},"33":{start:{line:143,column:6},end:{line:146,column:9}},"34":{start:{line:149,column:22},end:{line:149,column:51}},"35":{start:{line:151,column:4},end:{line:156,column:5}},"36":{start:{line:152,column:6},end:{line:155,column:21}},"37":{start:{line:158,column:4},end:{line:161,column:19}},"38":{start:{line:164,column:15},end:{line:164,column:29}},"39":{start:{line:165,column:0},end:{line:165,column:27}}},fnMap:{"0":{name:"_interopRequireDefault",decl:{start:{line:12,column:9},end:{line:12,column:31}},loc:{start:{line:12,column:37},end:{line:12,column:95}},line:12},"1":{name:"fetchAllMeals",decl:{start:{line:29,column:26},end:{line:29,column:39}},loc:{start:{line:29,column:50},end:{line:40,column:3}},line:29},"2":{name:"addAMeal",decl:{start:{line:48,column:21},end:{line:48,column:29}},loc:{start:{line:48,column:40},end:{line:65,column:3}},line:48},"3":{name:"updateAMeal",decl:{start:{line:73,column:24},end:{line:73,column:35}},loc:{start:{line:73,column:46},end:{line:98,column:3}},line:73},"4":{name:"getAMeal",decl:{start:{line:106,column:21},end:{line:106,column:29}},loc:{start:{line:106,column:40},end:{line:131,column:3}},line:106},"5":{name:"deleteAMeal",decl:{start:{line:139,column:24},end:{line:139,column:35}},loc:{start:{line:139,column:46},end:{line:162,column:3}},line:139}},branchMap:{"0":{loc:{start:{line:12,column:46},end:{line:12,column:92}},type:"cond-expr",locations:[{start:{line:12,column:70},end:{line:12,column:73}},{start:{line:12,column:76},end:{line:12,column:92}}],line:12},"1":{loc:{start:{line:12,column:46},end:{line:12,column:67}},type:"binary-expr",locations:[{start:{line:12,column:46},end:{line:12,column:49}},{start:{line:12,column:53},end:{line:12,column:67}}],line:12},"2":{loc:{start:{line:49,column:4},end:{line:54,column:5}},type:"if",locations:[{start:{line:49,column:4},end:{line:54,column:5}},{start:{line:49,column:4},end:{line:54,column:5}}],line:49},"3":{loc:{start:{line:49,column:8},end:{line:49,column:59}},type:"binary-expr",locations:[{start:{line:49,column:8},end:{line:49,column:22}},{start:{line:49,column:26},end:{line:49,column:41}},{start:{line:49,column:45},end:{line:49,column:59}}],line:49},"4":{loc:{start:{line:77,column:4},end:{line:82,column:5}},type:"if",locations:[{start:{line:77,column:4},end:{line:82,column:5}},{start:{line:77,column:4},end:{line:82,column:5}}],line:77},"5":{loc:{start:{line:86,column:4},end:{line:91,column:5}},type:"if",locations:[{start:{line:86,column:4},end:{line:91,column:5}},{start:{line:86,column:4},end:{line:91,column:5}}],line:86},"6":{loc:{start:{line:109,column:4},end:{line:114,column:5}},type:"if",locations:[{start:{line:109,column:4},end:{line:114,column:5}},{start:{line:109,column:4},end:{line:114,column:5}}],line:109},"7":{loc:{start:{line:120,column:4},end:{line:125,column:5}},type:"if",locations:[{start:{line:120,column:4},end:{line:125,column:5}},{start:{line:120,column:4},end:{line:125,column:5}}],line:120},"8":{loc:{start:{line:142,column:4},end:{line:147,column:5}},type:"if",locations:[{start:{line:142,column:4},end:{line:147,column:5}},{start:{line:142,column:4},end:{line:147,column:5}}],line:142},"9":{loc:{start:{line:151,column:4},end:{line:156,column:5}},type:"if",locations:[{start:{line:151,column:4},end:{line:156,column:5}},{start:{line:151,column:4},end:{line:156,column:5}}],line:151}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_2g6uq2zib.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_2g6uq2zib.s[1]++;exports.default=void 0;var _meal=(cov_2g6uq2zib.s[2]++,_interopRequireDefault(require("../services/meal.service")));var _ResponseGenerator=(cov_2g6uq2zib.s[3]++,_interopRequireDefault(require("../utils/ResponseGenerator")));function _interopRequireDefault(obj){cov_2g6uq2zib.f[0]++;cov_2g6uq2zib.s[4]++;return(cov_2g6uq2zib.b[1][0]++,obj)&&(cov_2g6uq2zib.b[1][1]++,obj.__esModule)?(cov_2g6uq2zib.b[0][0]++,obj):(cov_2g6uq2zib.b[0][1]++,{default:obj});}/**
 * meal controller performs controls  request and response -
 * fetching all meal,
 * adding a new meal,
 * updating an existing meal and
 * getting a particular meal
 */var response=(cov_2g6uq2zib.s[5]++,new _ResponseGenerator.default());var MealController=(cov_2g6uq2zib.s[6]++,{/**
   * @description retrieve and return all meals from our data
   * @param {object} req
   * @param {object} res
   * @returns {Array} meal object array
   */fetchAllMeals:function fetchAllMeals(req,res){cov_2g6uq2zib.f[1]++;var allMeals=(cov_2g6uq2zib.s[7]++,_meal.default.fetchAllMeals());// return res
//   .json({
//     status: 'success',
//     data: allMeals,
//   })
//   .status(200);
cov_2g6uq2zib.s[8]++;response.setSuccess(200,null,allMeals);cov_2g6uq2zib.s[9]++;return response.send(res);},/**
   * @description create a meal record
   * @param {object} req
   * @param {object} res
   * @returns {object} apiResponse
   */addAMeal:function addAMeal(req,res){cov_2g6uq2zib.f[2]++;cov_2g6uq2zib.s[10]++;if((cov_2g6uq2zib.b[3][0]++,!req.body.name)||(cov_2g6uq2zib.b[3][1]++,!req.body.price)||(cov_2g6uq2zib.b[3][2]++,!req.body.size)){cov_2g6uq2zib.b[2][0]++;cov_2g6uq2zib.s[11]++;return res.status(400).send({status:'error',message:'All parameters are required'});}else{cov_2g6uq2zib.b[2][1]++;}var newMeal=(cov_2g6uq2zib.s[12]++,req.body);var createdMeal=(cov_2g6uq2zib.s[13]++,_meal.default.addAMeal(newMeal));cov_2g6uq2zib.s[14]++;return res.json({status:'success',message:'Meal successfully added!',data:createdMeal}).status(201);},/**
   * @description update a meal record
   * @param {object} req
   * @param {object} res
   * @returns {object} apiResponse
   */updateAMeal:function updateAMeal(req,res){cov_2g6uq2zib.f[3]++;var newMeal=(cov_2g6uq2zib.s[15]++,req.body);var id=(cov_2g6uq2zib.s[16]++,req.params.id);cov_2g6uq2zib.s[17]++;if(Number.isNaN(Number(id))){cov_2g6uq2zib.b[4][0]++;cov_2g6uq2zib.s[18]++;return res.status(400).json({status:'error',message:'Invalid ID. ID must be a number'});}else{cov_2g6uq2zib.b[4][1]++;}var updateMeal=(cov_2g6uq2zib.s[19]++,_meal.default.updateAMeal(id,newMeal));cov_2g6uq2zib.s[20]++;if(updateMeal==null){cov_2g6uq2zib.b[5][0]++;cov_2g6uq2zib.s[21]++;return res.status(400).json({status:'error',message:"Meal with id ".concat(id," cannot be found")});}else{cov_2g6uq2zib.b[5][1]++;}cov_2g6uq2zib.s[22]++;return res.json({status:'success',message:'Meal was successfully updated',data:updateMeal}).status(201);},/**
   * @description get a specific meal
   * @param {object} req
   * @param {object} res
   * @returns {object} found meal
   */getAMeal:function getAMeal(req,res){cov_2g6uq2zib.f[4]++;var id=(cov_2g6uq2zib.s[23]++,req.params.id);cov_2g6uq2zib.s[24]++;if(Number.isNaN(Number(id))){cov_2g6uq2zib.b[6][0]++;cov_2g6uq2zib.s[25]++;return res.status(400).json({status:'error',message:'Invalid ID. ID must be a number'});}else{cov_2g6uq2zib.b[6][1]++;}var foundMeal=(cov_2g6uq2zib.s[26]++,_meal.default.getAMeal(id));var foundMealKeys=(cov_2g6uq2zib.s[27]++,Object.keys(foundMeal));cov_2g6uq2zib.s[28]++;if(foundMealKeys.length===0){cov_2g6uq2zib.b[7][0]++;cov_2g6uq2zib.s[29]++;return res.status(404).json({status:'error',message:'Meal cannot be found'});}else{cov_2g6uq2zib.b[7][1]++;}cov_2g6uq2zib.s[30]++;return res.status(200).json({status:'success',data:foundMeal});},/**
   * @description get a specific meal
   * @param {object} req
   * @param {object} res
   * @returns {object} response
   */deleteAMeal:function deleteAMeal(req,res){cov_2g6uq2zib.f[5]++;var id=(cov_2g6uq2zib.s[31]++,req.params.id);cov_2g6uq2zib.s[32]++;if(Number.isNaN(Number(id))){cov_2g6uq2zib.b[8][0]++;cov_2g6uq2zib.s[33]++;return res.status(400).json({status:'error',message:'Invalid ID. ID must be a number'});}else{cov_2g6uq2zib.b[8][1]++;}var deletedMeal=(cov_2g6uq2zib.s[34]++,_meal.default.deleteAMeal(id));cov_2g6uq2zib.s[35]++;if(deletedMeal==null){cov_2g6uq2zib.b[9][0]++;cov_2g6uq2zib.s[36]++;return res.json({status:'error',message:"Meal with id ".concat(id," cannot be found")}).status(404);}else{cov_2g6uq2zib.b[9][1]++;}cov_2g6uq2zib.s[37]++;return res.json({status:'success',message:'Meal was successfully deleted'}).status(200);}});var _default=(cov_2g6uq2zib.s[38]++,MealController);cov_2g6uq2zib.s[39]++;exports.default=_default;//# sourceMappingURL=data:application/json;charset=utf-8;base64,