{
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _meal = _interopRequireDefault(require(\"./routes/meal.route\"));\n\nvar _order = _interopRequireDefault(require(\"./routes/order.route\"));\n\nvar _menu = _interopRequireDefault(require(\"./routes/menu.route\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express.default)();\nvar port = process.env.PORT || 7778;\nvar API_VERSION = '/api/v1';\napp.use(_bodyParser.default.json());\napp.use(\"\".concat(API_VERSION, \"/meals\"), _meal.default);\napp.use(\"\".concat(API_VERSION, \"/orders\"), _order.default);\napp.use(\"\".concat(API_VERSION, \"/menu\"), _menu.default);\n\nif (!module.parent) {\n  app.listen(port, function () {\n    console.log(\"Server is running on port \".concat(port));\n  });\n}\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsIkFQSV9WRVJTSU9OIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJtZWFsUm91dGVzIiwib3JkZXJSb3V0ZXMiLCJtZW51Um91dGVzIiwibW9kdWxlIiwicGFyZW50IiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsdUJBQVo7QUFDQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWpDO0FBQ0EsSUFBTUMsV0FBVyxHQUFHLFNBQXBCO0FBRUFMLEdBQUcsQ0FBQ00sR0FBSixDQUFRQyxvQkFBV0MsSUFBWCxFQUFSO0FBRUFSLEdBQUcsQ0FBQ00sR0FBSixXQUFXRCxXQUFYLGFBQWdDSSxhQUFoQztBQUNBVCxHQUFHLENBQUNNLEdBQUosV0FBV0QsV0FBWCxjQUFpQ0ssY0FBakM7QUFDQVYsR0FBRyxDQUFDTSxHQUFKLFdBQVdELFdBQVgsWUFBK0JNLGFBQS9COztBQUVBLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxNQUFaLEVBQW9CO0FBQ2xCYixFQUFBQSxHQUFHLENBQUNjLE1BQUosQ0FBV2IsSUFBWCxFQUFpQixZQUFNO0FBQ3JCYyxJQUFBQSxPQUFPLENBQUNDLEdBQVIscUNBQXlDZixJQUF6QztBQUNELEdBRkQ7QUFHRDs7QUFDRFcsTUFBTSxDQUFDSyxPQUFQLEdBQWlCakIsR0FBakIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NvZGVwcmVuZXVyL1dlYnN0b3JtUHJvamVjdHMvQmV0YUNob3AvQVBJL3YxIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgbWVhbFJvdXRlcyBmcm9tICcuL3JvdXRlcy9tZWFsLnJvdXRlJztcbmltcG9ydCBvcmRlclJvdXRlcyBmcm9tICcuL3JvdXRlcy9vcmRlci5yb3V0ZSc7XG5pbXBvcnQgbWVudVJvdXRlcyBmcm9tICcuL3JvdXRlcy9tZW51LnJvdXRlJztcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNzc3ODtcbmNvbnN0IEFQSV9WRVJTSU9OID0gJy9hcGkvdjEnO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLnVzZShgJHtBUElfVkVSU0lPTn0vbWVhbHNgLCBtZWFsUm91dGVzKTtcbmFwcC51c2UoYCR7QVBJX1ZFUlNJT059L29yZGVyc2AsIG9yZGVyUm91dGVzKTtcbmFwcC51c2UoYCR7QVBJX1ZFUlNJT059L21lbnVgLCBtZW51Um91dGVzKTtcblxuaWYgKCFtb2R1bGUucGFyZW50KSB7XG4gIGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGBTZXJ2ZXIgaXMgcnVubmluZyBvbiBwb3J0ICR7cG9ydH1gKTtcbiAgfSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "API_VERSION",
        "use",
        "bodyParser",
        "json",
        "mealRoutes",
        "orderRoutes",
        "menuRoutes",
        "module",
        "parent",
        "listen",
        "console",
        "log",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,WAAW,GAAG,SAApB;AAEAL,GAAG,CAACM,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AAEAR,GAAG,CAACM,GAAJ,WAAWD,WAAX,aAAgCI,aAAhC;AACAT,GAAG,CAACM,GAAJ,WAAWD,WAAX,cAAiCK,cAAjC;AACAV,GAAG,CAACM,GAAJ,WAAWD,WAAX,YAA+BM,aAA/B;;AAEA,IAAI,CAACC,MAAM,CAACC,MAAZ,EAAoB;AAClBb,EAAAA,GAAG,CAACc,MAAJ,CAAWb,IAAX,EAAiB,YAAM;AACrBc,IAAAA,OAAO,CAACC,GAAR,qCAAyCf,IAAzC;AACD,GAFD;AAGD;;AACDW,MAAM,CAACK,OAAP,GAAiBjB,GAAjB",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport mealRoutes from './routes/meal.route';\nimport orderRoutes from './routes/order.route';\nimport menuRoutes from './routes/menu.route';\n\nconst app = express();\nconst port = process.env.PORT || 7778;\nconst API_VERSION = '/api/v1';\n\napp.use(bodyParser.json());\n\napp.use(`${API_VERSION}/meals`, mealRoutes);\napp.use(`${API_VERSION}/orders`, orderRoutes);\napp.use(`${API_VERSION}/menu`, menuRoutes);\n\nif (!module.parent) {\n  app.listen(port, () => {\n    console.log(`Server is running on port ${port}`);\n  });\n}\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550788137791
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
        "sourceFileName": "meal.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _meal = _interopRequireDefault(require(\"../controllers/meal.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _meal.default.fetchAllMeals);\nrouter.post('/', _meal.default.addAMeal);\nrouter.get('/:id', _meal.default.getAMeal);\nrouter.put('/:id', _meal.default.updateAMeal);\nrouter.delete('/:id', _meal.default.deleteAMeal);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lYWwucm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiTWVhbENvbnRyb2xsZXIiLCJmZXRjaEFsbE1lYWxzIiwicG9zdCIsImFkZEFNZWFsIiwiZ2V0QU1lYWwiLCJwdXQiLCJ1cGRhdGVBTWVhbCIsImRlbGV0ZSIsImRlbGV0ZUFNZWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsY0FBZUMsYUFBL0I7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQkYsY0FBZUcsUUFBaEM7QUFDQUwsTUFBTSxDQUFDQyxHQUFQLENBQVcsTUFBWCxFQUFtQkMsY0FBZUksUUFBbEM7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFtQkwsY0FBZU0sV0FBbEM7QUFDQVIsTUFBTSxDQUFDUyxNQUFQLENBQWMsTUFBZCxFQUFzQlAsY0FBZVEsV0FBckM7ZUFFZVYsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgTWVhbENvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvbWVhbC5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBNZWFsQ29udHJvbGxlci5mZXRjaEFsbE1lYWxzKTtcbnJvdXRlci5wb3N0KCcvJywgTWVhbENvbnRyb2xsZXIuYWRkQU1lYWwpO1xucm91dGVyLmdldCgnLzppZCcsIE1lYWxDb250cm9sbGVyLmdldEFNZWFsKTtcbnJvdXRlci5wdXQoJy86aWQnLCBNZWFsQ29udHJvbGxlci51cGRhdGVBTWVhbCk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgTWVhbENvbnRyb2xsZXIuZGVsZXRlQU1lYWwpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "meal.route.js"
      ],
      "names": [
        "router",
        "get",
        "MealController",
        "fetchAllMeals",
        "post",
        "addAMeal",
        "getAMeal",
        "put",
        "updateAMeal",
        "delete",
        "deleteAMeal"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,cAAeC,aAA/B;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBF,cAAeG,QAAhC;AACAL,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,cAAeI,QAAlC;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBL,cAAeM,WAAlC;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBP,cAAeQ,WAArC;eAEeV,M",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "sourcesContent": [
        "import { Router } from 'express';\nimport MealController from '../controllers/meal.controller';\n\nconst router = Router();\n\nrouter.get('/', MealController.fetchAllMeals);\nrouter.post('/', MealController.addAMeal);\nrouter.get('/:id', MealController.getAMeal);\nrouter.put('/:id', MealController.updateAMeal);\nrouter.delete('/:id', MealController.deleteAMeal);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550427837722
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
        "sourceFileName": "meal.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _meal = _interopRequireDefault(require(\"../services/meal.service\"));\n\nvar _ResponseGenerator = _interopRequireDefault(require(\"../utils/ResponseGenerator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar response = new _ResponseGenerator.default();\n/**\n * meal controller performs controls  request and response -\n * fetching all meal,\n * adding a new meal,\n * updating an existing meal and\n * getting a particular meal\n */\n\nvar MealController = {\n  /**\n   * @description retrieve and return all meals from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals: function fetchAllMeals(req, res) {\n    var allMeals = _meal.default.fetchAllMeals();\n\n    response.setSuccess(200, '', allMeals);\n    return response.send(res);\n  },\n\n  /**\n   * @description create a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  addAMeal: function addAMeal(req, res) {\n    if (!req.body.name || !req.body.price || !req.body.size) {\n      response.setError(400, 'All parameters are required');\n      return response.send(res);\n    }\n\n    var newMeal = req.body;\n\n    var createdMeal = _meal.default.addAMeal(newMeal);\n\n    response.setSuccess(201, 'Meal successfully added!', createdMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description update a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAMeal: function updateAMeal(req, res) {\n    var newMeal = req.body;\n    var id = req.params.id;\n\n    if (Number.isNaN(Number(id))) {\n      response.setSuccess(400, 'Invalid ID. ID must be a number', null);\n      return response.send(res);\n    }\n\n    var updateMeal = _meal.default.updateAMeal(id, newMeal);\n\n    if (updateMeal == null) {\n      response.setError(400, \"Meal with id \".concat(id, \" cannot be found\"));\n      return response.send(res);\n    }\n\n    response.setSuccess(200, 'Meal was successfully updated', updateMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} found meal\n   */\n  getAMeal: function getAMeal(req, res) {\n    var id = req.params.id;\n\n    if (Number.isNaN(Number(id))) {\n      response.setError(400, 'Invalid ID. ID must be a number');\n      return response.send(res);\n    }\n\n    var foundMeal = _meal.default.getAMeal(id);\n\n    var foundMealKeys = Object.keys(foundMeal);\n\n    if (foundMealKeys.length === 0) {\n      response.setError(404, 'Meal cannot be found');\n      return response.send(res);\n    }\n\n    response.setSuccess(200, null, foundMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} response\n   */\n  deleteAMeal: function deleteAMeal(req, res) {\n    var id = req.params.id;\n\n    var deletedMeal = _meal.default.deleteAMeal(id);\n\n    if (Number.isNaN(Number(id))) {\n      response.setError(400, 'Invalid ID. ID must be a number');\n    } else if (deletedMeal == null) {\n      response.setError(404, \"Meal with id \".concat(id, \" cannot be found\"));\n    } else {\n      response.setSuccess(200, 'Meal was successfully deleted', null);\n    }\n\n    return response.send(res);\n  }\n};\nvar _default = MealController;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "meal.controller.js"
      ],
      "names": [
        "response",
        "ResponseGenerator",
        "MealController",
        "fetchAllMeals",
        "req",
        "res",
        "allMeals",
        "MealService",
        "setSuccess",
        "send",
        "addAMeal",
        "body",
        "name",
        "price",
        "size",
        "setError",
        "newMeal",
        "createdMeal",
        "updateAMeal",
        "id",
        "params",
        "Number",
        "isNaN",
        "updateMeal",
        "getAMeal",
        "foundMeal",
        "foundMealKeys",
        "Object",
        "keys",
        "length",
        "deleteAMeal",
        "deletedMeal"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAG,IAAIC,0BAAJ,EAAjB;AAEA;;;;;;;;AAOA,IAAMC,cAAc,GAAG;AACrB;;;;;;AAMAC,EAAAA,aAPqB,yBAOPC,GAPO,EAOFC,GAPE,EAOG;AACtB,QAAMC,QAAQ,GAAGC,cAAYJ,aAAZ,EAAjB;;AACAH,IAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,EAAzB,EAA6BF,QAA7B;AACA,WAAON,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD,GAXoB;;AAarB;;;;;;AAMAK,EAAAA,QAnBqB,oBAmBZN,GAnBY,EAmBPC,GAnBO,EAmBF;AACjB,QAAI,CAACD,GAAG,CAACO,IAAJ,CAASC,IAAV,IAAkB,CAACR,GAAG,CAACO,IAAJ,CAASE,KAA5B,IAAqC,CAACT,GAAG,CAACO,IAAJ,CAASG,IAAnD,EAAyD;AACvDd,MAAAA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,EAAuB,6BAAvB;AACA,aAAOf,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAED,QAAMW,OAAO,GAAGZ,GAAG,CAACO,IAApB;;AACA,QAAMM,WAAW,GAAGV,cAAYG,QAAZ,CAAqBM,OAArB,CAApB;;AACAhB,IAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,0BAAzB,EAAqDS,WAArD;AACA,WAAOjB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD,GA7BoB;;AA+BrB;;;;;;AAMAa,EAAAA,WArCqB,uBAqCTd,GArCS,EAqCJC,GArCI,EAqCC;AACpB,QAAMW,OAAO,GAAGZ,GAAG,CAACO,IAApB;AADoB,QAEZQ,EAFY,GAELf,GAAG,CAACgB,MAFC,CAEZD,EAFY;;AAIpB,QAAIE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,EAAD,CAAnB,CAAJ,EAA8B;AAC5BnB,MAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,iCAAzB,EAA4D,IAA5D;AACA,aAAOR,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAED,QAAMkB,UAAU,GAAGhB,cAAYW,WAAZ,CAAwBC,EAAxB,EAA4BH,OAA5B,CAAnB;;AAEA,QAAIO,UAAU,IAAI,IAAlB,EAAwB;AACtBvB,MAAAA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,yBAAuCI,EAAvC;AACA,aAAOnB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAEDL,IAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,+BAAzB,EAA0De,UAA1D;AACA,WAAOvB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD,GAvDoB;;AAyDrB;;;;;;AAMAmB,EAAAA,QA/DqB,oBA+DZpB,GA/DY,EA+DPC,GA/DO,EA+DF;AAAA,QACTc,EADS,GACFf,GAAG,CAACgB,MADF,CACTD,EADS;;AAGjB,QAAIE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,EAAD,CAAnB,CAAJ,EAA8B;AAC5BnB,MAAAA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,EAAuB,iCAAvB;AACA,aAAOf,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAED,QAAMoB,SAAS,GAAGlB,cAAYiB,QAAZ,CAAqBL,EAArB,CAAlB;;AACA,QAAMO,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,CAAtB;;AAEA,QAAIC,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;AAC9B7B,MAAAA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,EAAuB,sBAAvB;AACA,aAAOf,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAEDL,IAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,IAAzB,EAA+BiB,SAA/B;AACA,WAAOzB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD,GAjFoB;;AAmFrB;;;;;;AAMAyB,EAAAA,WAzFqB,uBAyFT1B,GAzFS,EAyFJC,GAzFI,EAyFC;AAAA,QACZc,EADY,GACLf,GAAG,CAACgB,MADC,CACZD,EADY;;AAGpB,QAAMY,WAAW,GAAGxB,cAAYuB,WAAZ,CAAwBX,EAAxB,CAApB;;AAEA,QAAIE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,EAAD,CAAnB,CAAJ,EAA8B;AAC5BnB,MAAAA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,EAAuB,iCAAvB;AACD,KAFD,MAEO,IAAIgB,WAAW,IAAI,IAAnB,EAAyB;AAC9B/B,MAAAA,QAAQ,CAACe,QAAT,CAAkB,GAAlB,yBAAuCI,EAAvC;AACD,KAFM,MAEA;AACLnB,MAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,+BAAzB,EAA0D,IAA1D;AACD;;AACD,WAAOR,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;AAtGoB,CAAvB;eAyGeH,c",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "sourcesContent": [
        "import MealService from '../services/meal.service';\nimport ResponseGenerator from '../utils/ResponseGenerator';\n\nconst response = new ResponseGenerator();\n\n/**\n * meal controller performs controls  request and response -\n * fetching all meal,\n * adding a new meal,\n * updating an existing meal and\n * getting a particular meal\n */\nconst MealController = {\n  /**\n   * @description retrieve and return all meals from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals(req, res) {\n    const allMeals = MealService.fetchAllMeals();\n    response.setSuccess(200, '', allMeals);\n    return response.send(res);\n  },\n\n  /**\n   * @description create a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  addAMeal(req, res) {\n    if (!req.body.name || !req.body.price || !req.body.size) {\n      response.setError(400, 'All parameters are required');\n      return response.send(res);\n    }\n\n    const newMeal = req.body;\n    const createdMeal = MealService.addAMeal(newMeal);\n    response.setSuccess(201, 'Meal successfully added!', createdMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description update a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAMeal(req, res) {\n    const newMeal = req.body;\n    const { id } = req.params;\n\n    if (Number.isNaN(Number(id))) {\n      response.setSuccess(400, 'Invalid ID. ID must be a number', null);\n      return response.send(res);\n    }\n\n    const updateMeal = MealService.updateAMeal(id, newMeal);\n\n    if (updateMeal == null) {\n      response.setError(400, `Meal with id ${id} cannot be found`);\n      return response.send(res);\n    }\n\n    response.setSuccess(200, 'Meal was successfully updated', updateMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} found meal\n   */\n  getAMeal(req, res) {\n    const { id } = req.params;\n\n    if (Number.isNaN(Number(id))) {\n      response.setError(400, 'Invalid ID. ID must be a number');\n      return response.send(res);\n    }\n\n    const foundMeal = MealService.getAMeal(id);\n    const foundMealKeys = Object.keys(foundMeal);\n\n    if (foundMealKeys.length === 0) {\n      response.setError(404, 'Meal cannot be found');\n      return response.send(res);\n    }\n\n    response.setSuccess(200, null, foundMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} response\n   */\n  deleteAMeal(req, res) {\n    const { id } = req.params;\n\n    const deletedMeal = MealService.deleteAMeal(id);\n\n    if (Number.isNaN(Number(id))) {\n      response.setError(400, 'Invalid ID. ID must be a number');\n    } else if (deletedMeal == null) {\n      response.setError(404, `Meal with id ${id} cannot be found`);\n    } else {\n      response.setSuccess(200, 'Meal was successfully deleted', null);\n    }\n    return response.send(res);\n  },\n};\n\nexport default MealController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550788137780
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
        "sourceFileName": "meal.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dummyData = _interopRequireDefault(require(\"../utils/dummyData\"));\n\nvar _meal = _interopRequireDefault(require(\"../models/meal.model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * meal services performs all action related to meal - fetching all meal, adding a new meal,\n *  updating an existing meal and getting a particular meal\n */\nvar MealService = {\n  /**\n   * @description Retrieve and return all meals from our dunny data\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals: function fetchAllMeals() {\n    return _dummyData.default.meals.map(function (meal) {\n      var newMeal = new _meal.default();\n      newMeal.id = meal.id;\n      newMeal.name = meal.name;\n      newMeal.size = meal.size;\n      newMeal.price = meal.price;\n      return newMeal;\n    });\n  },\n\n  /**\n   * @description Takes a new meal object and adds it our dummy data\n   * @param {object} meal\n   * @returns {object} meal\n   */\n  addAMeal: function addAMeal(meal) {\n    var mealLength = _dummyData.default.meals.length;\n    var lastId = _dummyData.default.meals[mealLength - 1].id;\n    var newId = lastId + 1;\n    var newMeal = meal;\n    newMeal.id = newId;\n\n    _dummyData.default.meals.push(newMeal);\n\n    return meal;\n  },\n\n  /**\n   * @description Updates an existing meal with a new meal object\n   * @param { int } id\n   * @param {object} updatedMeal\n   * @returns {object} updated meal\n   */\n  updateAMeal: function updateAMeal(id, updatedMeal) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      foundMeal.name = updatedMeal.name;\n      foundMeal.price = updatedMeal.price;\n      foundMeal.size = updatedMeal.size;\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Finds a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  getAMeal: function getAMeal(id) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    return foundMeal || {};\n  },\n\n  /**\n   * @description Delete a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  deleteAMeal: function deleteAMeal(id) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      var index = _dummyData.default.meals.indexOf(foundMeal);\n\n      if (index > -1) {\n        _dummyData.default.meals.splice(index, 1);\n      }\n    }\n\n    return foundMeal;\n  }\n};\nvar _default = MealService;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lYWwuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZWFsU2VydmljZSIsImZldGNoQWxsTWVhbHMiLCJkdW1teURhdGEiLCJtZWFscyIsIm1hcCIsIm1lYWwiLCJuZXdNZWFsIiwiTWVhbCIsImlkIiwibmFtZSIsInNpemUiLCJwcmljZSIsImFkZEFNZWFsIiwibWVhbExlbmd0aCIsImxlbmd0aCIsImxhc3RJZCIsIm5ld0lkIiwicHVzaCIsInVwZGF0ZUFNZWFsIiwidXBkYXRlZE1lYWwiLCJmb3VuZE1lYWwiLCJmaW5kIiwiTnVtYmVyIiwiZ2V0QU1lYWwiLCJkZWxldGVBTWVhbCIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUE7Ozs7QUFJQSxJQUFNQSxXQUFXLEdBQUc7QUFDbEI7Ozs7QUFJQUMsRUFBQUEsYUFMa0IsMkJBS0Y7QUFDZCxXQUFPQyxtQkFBVUMsS0FBVixDQUFnQkMsR0FBaEIsQ0FBb0IsVUFBQ0MsSUFBRCxFQUFVO0FBQ25DLFVBQU1DLE9BQU8sR0FBRyxJQUFJQyxhQUFKLEVBQWhCO0FBQ0FELE1BQUFBLE9BQU8sQ0FBQ0UsRUFBUixHQUFhSCxJQUFJLENBQUNHLEVBQWxCO0FBQ0FGLE1BQUFBLE9BQU8sQ0FBQ0csSUFBUixHQUFlSixJQUFJLENBQUNJLElBQXBCO0FBQ0FILE1BQUFBLE9BQU8sQ0FBQ0ksSUFBUixHQUFlTCxJQUFJLENBQUNLLElBQXBCO0FBQ0FKLE1BQUFBLE9BQU8sQ0FBQ0ssS0FBUixHQUFnQk4sSUFBSSxDQUFDTSxLQUFyQjtBQUVBLGFBQU9MLE9BQVA7QUFDRCxLQVJNLENBQVA7QUFTRCxHQWZpQjs7QUFpQmxCOzs7OztBQUtBTSxFQUFBQSxRQXRCa0Isb0JBc0JUUCxJQXRCUyxFQXNCSDtBQUNiLFFBQU1RLFVBQVUsR0FBR1gsbUJBQVVDLEtBQVYsQ0FBZ0JXLE1BQW5DO0FBQ0EsUUFBTUMsTUFBTSxHQUFHYixtQkFBVUMsS0FBVixDQUFnQlUsVUFBVSxHQUFHLENBQTdCLEVBQWdDTCxFQUEvQztBQUNBLFFBQU1RLEtBQUssR0FBR0QsTUFBTSxHQUFHLENBQXZCO0FBRUEsUUFBTVQsT0FBTyxHQUFHRCxJQUFoQjtBQUNBQyxJQUFBQSxPQUFPLENBQUNFLEVBQVIsR0FBYVEsS0FBYjs7QUFFQWQsdUJBQVVDLEtBQVYsQ0FBZ0JjLElBQWhCLENBQXFCWCxPQUFyQjs7QUFDQSxXQUFPRCxJQUFQO0FBQ0QsR0FoQ2lCOztBQWtDbEI7Ozs7OztBQU1BYSxFQUFBQSxXQXhDa0IsdUJBd0NOVixFQXhDTSxFQXdDRlcsV0F4Q0UsRUF3Q1c7QUFDM0IsUUFBTUMsU0FBUyxHQUFHbEIsbUJBQVVDLEtBQVYsQ0FBZ0JrQixJQUFoQixDQUFxQixVQUFBaEIsSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0csRUFBTCxLQUFZYyxNQUFNLENBQUNkLEVBQUQsQ0FBdEI7QUFBQSxLQUF6QixDQUFsQjs7QUFFQSxRQUFJWSxTQUFKLEVBQWU7QUFDYkEsTUFBQUEsU0FBUyxDQUFDWCxJQUFWLEdBQWlCVSxXQUFXLENBQUNWLElBQTdCO0FBQ0FXLE1BQUFBLFNBQVMsQ0FBQ1QsS0FBVixHQUFrQlEsV0FBVyxDQUFDUixLQUE5QjtBQUNBUyxNQUFBQSxTQUFTLENBQUNWLElBQVYsR0FBaUJTLFdBQVcsQ0FBQ1QsSUFBN0I7QUFDRDs7QUFDRCxXQUFPVSxTQUFQO0FBQ0QsR0FqRGlCOztBQW1EbEI7Ozs7O0FBS0FHLEVBQUFBLFFBeERrQixvQkF3RFRmLEVBeERTLEVBd0RMO0FBQ1gsUUFBTVksU0FBUyxHQUFHbEIsbUJBQVVDLEtBQVYsQ0FBZ0JrQixJQUFoQixDQUFxQixVQUFBaEIsSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0csRUFBTCxLQUFZYyxNQUFNLENBQUNkLEVBQUQsQ0FBdEI7QUFBQSxLQUF6QixDQUFsQjs7QUFDQSxXQUFPWSxTQUFTLElBQUksRUFBcEI7QUFDRCxHQTNEaUI7O0FBNkRsQjs7Ozs7QUFLQUksRUFBQUEsV0FsRWtCLHVCQWtFTmhCLEVBbEVNLEVBa0VGO0FBQ2QsUUFBTVksU0FBUyxHQUFHbEIsbUJBQVVDLEtBQVYsQ0FBZ0JrQixJQUFoQixDQUFxQixVQUFBaEIsSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0csRUFBTCxLQUFZYyxNQUFNLENBQUNkLEVBQUQsQ0FBdEI7QUFBQSxLQUF6QixDQUFsQjs7QUFDQSxRQUFJWSxTQUFKLEVBQWU7QUFDYixVQUFNSyxLQUFLLEdBQUd2QixtQkFBVUMsS0FBVixDQUFnQnVCLE9BQWhCLENBQXdCTixTQUF4QixDQUFkOztBQUNBLFVBQUlLLEtBQUssR0FBRyxDQUFDLENBQWIsRUFBZ0I7QUFDZHZCLDJCQUFVQyxLQUFWLENBQWdCd0IsTUFBaEIsQ0FBdUJGLEtBQXZCLEVBQThCLENBQTlCO0FBQ0Q7QUFDRjs7QUFDRCxXQUFPTCxTQUFQO0FBQ0Q7QUEzRWlCLENBQXBCO2VBNkVlcEIsVyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZHVtbXlEYXRhIGZyb20gJy4uL3V0aWxzL2R1bW15RGF0YSc7XG5pbXBvcnQgTWVhbCBmcm9tICcuLi9tb2RlbHMvbWVhbC5tb2RlbCc7XG5cbi8qKlxuICogbWVhbCBzZXJ2aWNlcyBwZXJmb3JtcyBhbGwgYWN0aW9uIHJlbGF0ZWQgdG8gbWVhbCAtIGZldGNoaW5nIGFsbCBtZWFsLCBhZGRpbmcgYSBuZXcgbWVhbCxcbiAqICB1cGRhdGluZyBhbiBleGlzdGluZyBtZWFsIGFuZCBnZXR0aW5nIGEgcGFydGljdWxhciBtZWFsXG4gKi9cbmNvbnN0IE1lYWxTZXJ2aWNlID0ge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFJldHJpZXZlIGFuZCByZXR1cm4gYWxsIG1lYWxzIGZyb20gb3VyIGR1bm55IGRhdGFcbiAgICogQHJldHVybnMge0FycmF5fSBtZWFsIG9iamVjdCBhcnJheVxuICAgKi9cbiAgZmV0Y2hBbGxNZWFscygpIHtcbiAgICByZXR1cm4gZHVtbXlEYXRhLm1lYWxzLm1hcCgobWVhbCkgPT4ge1xuICAgICAgY29uc3QgbmV3TWVhbCA9IG5ldyBNZWFsKCk7XG4gICAgICBuZXdNZWFsLmlkID0gbWVhbC5pZDtcbiAgICAgIG5ld01lYWwubmFtZSA9IG1lYWwubmFtZTtcbiAgICAgIG5ld01lYWwuc2l6ZSA9IG1lYWwuc2l6ZTtcbiAgICAgIG5ld01lYWwucHJpY2UgPSBtZWFsLnByaWNlO1xuXG4gICAgICByZXR1cm4gbmV3TWVhbDtcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRha2VzIGEgbmV3IG1lYWwgb2JqZWN0IGFuZCBhZGRzIGl0IG91ciBkdW1teSBkYXRhXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBtZWFsXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IG1lYWxcbiAgICovXG4gIGFkZEFNZWFsKG1lYWwpIHtcbiAgICBjb25zdCBtZWFsTGVuZ3RoID0gZHVtbXlEYXRhLm1lYWxzLmxlbmd0aDtcbiAgICBjb25zdCBsYXN0SWQgPSBkdW1teURhdGEubWVhbHNbbWVhbExlbmd0aCAtIDFdLmlkO1xuICAgIGNvbnN0IG5ld0lkID0gbGFzdElkICsgMTtcblxuICAgIGNvbnN0IG5ld01lYWwgPSBtZWFsO1xuICAgIG5ld01lYWwuaWQgPSBuZXdJZDtcblxuICAgIGR1bW15RGF0YS5tZWFscy5wdXNoKG5ld01lYWwpO1xuICAgIHJldHVybiBtZWFsO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gVXBkYXRlcyBhbiBleGlzdGluZyBtZWFsIHdpdGggYSBuZXcgbWVhbCBvYmplY3RcbiAgICogQHBhcmFtIHsgaW50IH0gaWRcbiAgICogQHBhcmFtIHtvYmplY3R9IHVwZGF0ZWRNZWFsXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IHVwZGF0ZWQgbWVhbFxuICAgKi9cbiAgdXBkYXRlQU1lYWwoaWQsIHVwZGF0ZWRNZWFsKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lYWxzLmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIoaWQpKTtcblxuICAgIGlmIChmb3VuZE1lYWwpIHtcbiAgICAgIGZvdW5kTWVhbC5uYW1lID0gdXBkYXRlZE1lYWwubmFtZTtcbiAgICAgIGZvdW5kTWVhbC5wcmljZSA9IHVwZGF0ZWRNZWFsLnByaWNlO1xuICAgICAgZm91bmRNZWFsLnNpemUgPSB1cGRhdGVkTWVhbC5zaXplO1xuICAgIH1cbiAgICByZXR1cm4gZm91bmRNZWFsO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gRmluZHMgYSBtZWFsIHJlY29yZCBmcm9tIG1lYWwgRHVtbXkgRGF0YVxuICAgKiBAcGFyYW0geyBpbnQgfSBpZFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBtZWFsXG4gICAqL1xuICBnZXRBTWVhbChpZCkge1xuICAgIGNvbnN0IGZvdW5kTWVhbCA9IGR1bW15RGF0YS5tZWFscy5maW5kKG1lYWwgPT4gbWVhbC5pZCA9PT0gTnVtYmVyKGlkKSk7XG4gICAgcmV0dXJuIGZvdW5kTWVhbCB8fCB7fTtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIERlbGV0ZSBhIG1lYWwgcmVjb3JkIGZyb20gbWVhbCBEdW1teSBEYXRhXG4gICAqIEBwYXJhbSB7IGludCB9IGlkXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IG1lYWxcbiAgICovXG4gIGRlbGV0ZUFNZWFsKGlkKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lYWxzLmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIoaWQpKTtcbiAgICBpZiAoZm91bmRNZWFsKSB7XG4gICAgICBjb25zdCBpbmRleCA9IGR1bW15RGF0YS5tZWFscy5pbmRleE9mKGZvdW5kTWVhbCk7XG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICBkdW1teURhdGEubWVhbHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvdW5kTWVhbDtcbiAgfSxcbn07XG5leHBvcnQgZGVmYXVsdCBNZWFsU2VydmljZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "meal.service.js"
      ],
      "names": [
        "MealService",
        "fetchAllMeals",
        "dummyData",
        "meals",
        "map",
        "meal",
        "newMeal",
        "Meal",
        "id",
        "name",
        "size",
        "price",
        "addAMeal",
        "mealLength",
        "length",
        "lastId",
        "newId",
        "push",
        "updateAMeal",
        "updatedMeal",
        "foundMeal",
        "find",
        "Number",
        "getAMeal",
        "deleteAMeal",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;;AAIA,IAAMA,WAAW,GAAG;AAClB;;;;AAIAC,EAAAA,aALkB,2BAKF;AACd,WAAOC,mBAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAU;AACnC,UAAMC,OAAO,GAAG,IAAIC,aAAJ,EAAhB;AACAD,MAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAeJ,IAAI,CAACI,IAApB;AACAH,MAAAA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAApB;AACAJ,MAAAA,OAAO,CAACK,KAAR,GAAgBN,IAAI,CAACM,KAArB;AAEA,aAAOL,OAAP;AACD,KARM,CAAP;AASD,GAfiB;;AAiBlB;;;;;AAKAM,EAAAA,QAtBkB,oBAsBTP,IAtBS,EAsBH;AACb,QAAMQ,UAAU,GAAGX,mBAAUC,KAAV,CAAgBW,MAAnC;AACA,QAAMC,MAAM,GAAGb,mBAAUC,KAAV,CAAgBU,UAAU,GAAG,CAA7B,EAAgCL,EAA/C;AACA,QAAMQ,KAAK,GAAGD,MAAM,GAAG,CAAvB;AAEA,QAAMT,OAAO,GAAGD,IAAhB;AACAC,IAAAA,OAAO,CAACE,EAAR,GAAaQ,KAAb;;AAEAd,uBAAUC,KAAV,CAAgBc,IAAhB,CAAqBX,OAArB;;AACA,WAAOD,IAAP;AACD,GAhCiB;;AAkClB;;;;;;AAMAa,EAAAA,WAxCkB,uBAwCNV,EAxCM,EAwCFW,WAxCE,EAwCW;AAC3B,QAAMC,SAAS,GAAGlB,mBAAUC,KAAV,CAAgBkB,IAAhB,CAAqB,UAAAhB,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,KAAYc,MAAM,CAACd,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AAEA,QAAIY,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACX,IAAV,GAAiBU,WAAW,CAACV,IAA7B;AACAW,MAAAA,SAAS,CAACT,KAAV,GAAkBQ,WAAW,CAACR,KAA9B;AACAS,MAAAA,SAAS,CAACV,IAAV,GAAiBS,WAAW,CAACT,IAA7B;AACD;;AACD,WAAOU,SAAP;AACD,GAjDiB;;AAmDlB;;;;;AAKAG,EAAAA,QAxDkB,oBAwDTf,EAxDS,EAwDL;AACX,QAAMY,SAAS,GAAGlB,mBAAUC,KAAV,CAAgBkB,IAAhB,CAAqB,UAAAhB,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,KAAYc,MAAM,CAACd,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AACA,WAAOY,SAAS,IAAI,EAApB;AACD,GA3DiB;;AA6DlB;;;;;AAKAI,EAAAA,WAlEkB,uBAkENhB,EAlEM,EAkEF;AACd,QAAMY,SAAS,GAAGlB,mBAAUC,KAAV,CAAgBkB,IAAhB,CAAqB,UAAAhB,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,KAAYc,MAAM,CAACd,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AACA,QAAIY,SAAJ,EAAe;AACb,UAAMK,KAAK,GAAGvB,mBAAUC,KAAV,CAAgBuB,OAAhB,CAAwBN,SAAxB,CAAd;;AACA,UAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdvB,2BAAUC,KAAV,CAAgBwB,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACD;AACF;;AACD,WAAOL,SAAP;AACD;AA3EiB,CAApB;eA6EepB,W",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "sourcesContent": [
        "import dummyData from '../utils/dummyData';\nimport Meal from '../models/meal.model';\n\n/**\n * meal services performs all action related to meal - fetching all meal, adding a new meal,\n *  updating an existing meal and getting a particular meal\n */\nconst MealService = {\n  /**\n   * @description Retrieve and return all meals from our dunny data\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals() {\n    return dummyData.meals.map((meal) => {\n      const newMeal = new Meal();\n      newMeal.id = meal.id;\n      newMeal.name = meal.name;\n      newMeal.size = meal.size;\n      newMeal.price = meal.price;\n\n      return newMeal;\n    });\n  },\n\n  /**\n   * @description Takes a new meal object and adds it our dummy data\n   * @param {object} meal\n   * @returns {object} meal\n   */\n  addAMeal(meal) {\n    const mealLength = dummyData.meals.length;\n    const lastId = dummyData.meals[mealLength - 1].id;\n    const newId = lastId + 1;\n\n    const newMeal = meal;\n    newMeal.id = newId;\n\n    dummyData.meals.push(newMeal);\n    return meal;\n  },\n\n  /**\n   * @description Updates an existing meal with a new meal object\n   * @param { int } id\n   * @param {object} updatedMeal\n   * @returns {object} updated meal\n   */\n  updateAMeal(id, updatedMeal) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n\n    if (foundMeal) {\n      foundMeal.name = updatedMeal.name;\n      foundMeal.price = updatedMeal.price;\n      foundMeal.size = updatedMeal.size;\n    }\n    return foundMeal;\n  },\n\n  /**\n   * @description Finds a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  getAMeal(id) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n    return foundMeal || {};\n  },\n\n  /**\n   * @description Delete a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  deleteAMeal(id) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n    if (foundMeal) {\n      const index = dummyData.meals.indexOf(foundMeal);\n      if (index > -1) {\n        dummyData.meals.splice(index, 1);\n      }\n    }\n    return foundMeal;\n  },\n};\nexport default MealService;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550535729568
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
        "sourceFileName": "dummyData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  meals: [{\n    id: 1,\n    name: 'Jollof Rice',\n    size: 'Medium',\n    price: '500',\n    available: false\n  }, {\n    id: 2,\n    name: 'Fried Rice',\n    size: 'Medium',\n    price: '200',\n    available: false\n  }, {\n    id: 3,\n    name: 'Chicken & Chips',\n    size: 'Large',\n    price: '1500',\n    available: false\n  }, {\n    id: 4,\n    name: 'Eba',\n    size: 'Medium',\n    price: '300',\n    available: false\n  }, {\n    id: 5,\n    name: 'Semo',\n    size: 'Small',\n    price: '300',\n    available: false\n  }, {\n    id: 6,\n    name: 'Poridge',\n    size: 'Small',\n    price: '200',\n    available: false\n  }],\n  orders: [{\n    id: 1,\n    type: 'lunch',\n    meal: {\n      id: 5,\n      name: 'Eba',\n      size: 'Medium',\n      price: '400'\n    }\n  }, {\n    id: 2,\n    type: 'dinner',\n    meal: {\n      id: 2,\n      name: 'Semo',\n      size: 'Small',\n      price: '300'\n    }\n  }],\n  menu: [{\n    id: 1,\n    name: 'Jollof Rice',\n    size: 'Medium',\n    price: '500',\n    available: true\n  }, {\n    id: 5,\n    name: 'Semo',\n    size: 'Small',\n    price: '300',\n    available: true\n  }, {\n    id: 4,\n    name: 'Eba',\n    size: 'Medium',\n    price: '300',\n    available: true\n  }]\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR1bW15RGF0YS5qcyJdLCJuYW1lcyI6WyJtZWFscyIsImlkIiwibmFtZSIsInNpemUiLCJwcmljZSIsImF2YWlsYWJsZSIsIm9yZGVycyIsInR5cGUiLCJtZWFsIiwibWVudSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsS0FBSyxFQUFFLENBQ0w7QUFDRUMsSUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsSUFBQUEsSUFBSSxFQUFFLGFBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLFFBSFI7QUFJRUMsSUFBQUEsS0FBSyxFQUFFLEtBSlQ7QUFLRUMsSUFBQUEsU0FBUyxFQUFFO0FBTGIsR0FESyxFQVFMO0FBQ0VKLElBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLElBQUFBLElBQUksRUFBRSxZQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRSxRQUhSO0FBSUVDLElBQUFBLEtBQUssRUFBRSxLQUpUO0FBS0VDLElBQUFBLFNBQVMsRUFBRTtBQUxiLEdBUkssRUFlTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsaUJBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLE9BSFI7QUFJRUMsSUFBQUEsS0FBSyxFQUFFLE1BSlQ7QUFLRUMsSUFBQUEsU0FBUyxFQUFFO0FBTGIsR0FmSyxFQXNCTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsS0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsUUFIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQXRCSyxFQTZCTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsTUFGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsT0FIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQTdCSyxFQXFDTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsU0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsT0FIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQXJDSyxDQURNO0FBK0NiQyxFQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFTCxJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFTSxJQUFBQSxJQUFJLEVBQUUsT0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUU7QUFDSlAsTUFBQUEsRUFBRSxFQUFFLENBREE7QUFFSkMsTUFBQUEsSUFBSSxFQUFFLEtBRkY7QUFHSkMsTUFBQUEsSUFBSSxFQUFFLFFBSEY7QUFJSkMsTUFBQUEsS0FBSyxFQUFFO0FBSkg7QUFIUixHQURNLEVBV047QUFDRUgsSUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRU0sSUFBQUEsSUFBSSxFQUFFLFFBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFO0FBQ0pQLE1BQUFBLEVBQUUsRUFBRSxDQURBO0FBRUpDLE1BQUFBLElBQUksRUFBRSxNQUZGO0FBR0pDLE1BQUFBLElBQUksRUFBRSxPQUhGO0FBSUpDLE1BQUFBLEtBQUssRUFBRTtBQUpIO0FBSFIsR0FYTSxDQS9DSztBQXNFYkssRUFBQUEsSUFBSSxFQUFFLENBQ0o7QUFDRVIsSUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsSUFBQUEsSUFBSSxFQUFFLGFBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLFFBSFI7QUFJRUMsSUFBQUEsS0FBSyxFQUFFLEtBSlQ7QUFLRUMsSUFBQUEsU0FBUyxFQUFFO0FBTGIsR0FESSxFQVFKO0FBQ0VKLElBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLElBQUFBLElBQUksRUFBRSxNQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRSxPQUhSO0FBSUVDLElBQUFBLEtBQUssRUFBRSxLQUpUO0FBS0VDLElBQUFBLFNBQVMsRUFBRTtBQUxiLEdBUkksRUFlSjtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsS0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsUUFIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQWZJO0FBdEVPLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NvZGVwcmVuZXVyL1dlYnN0b3JtUHJvamVjdHMvQmV0YUNob3AvQVBJL3YxL3V0aWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBtZWFsczogW1xuICAgIHtcbiAgICAgIGlkOiAxLFxuICAgICAgbmFtZTogJ0pvbGxvZiBSaWNlJyxcbiAgICAgIHNpemU6ICdNZWRpdW0nLFxuICAgICAgcHJpY2U6ICc1MDAnLFxuICAgICAgYXZhaWxhYmxlOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAyLFxuICAgICAgbmFtZTogJ0ZyaWVkIFJpY2UnLFxuICAgICAgc2l6ZTogJ01lZGl1bScsXG4gICAgICBwcmljZTogJzIwMCcsXG4gICAgICBhdmFpbGFibGU6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6IDMsXG4gICAgICBuYW1lOiAnQ2hpY2tlbiAmIENoaXBzJyxcbiAgICAgIHNpemU6ICdMYXJnZScsXG4gICAgICBwcmljZTogJzE1MDAnLFxuICAgICAgYXZhaWxhYmxlOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiA0LFxuICAgICAgbmFtZTogJ0ViYScsXG4gICAgICBzaXplOiAnTWVkaXVtJyxcbiAgICAgIHByaWNlOiAnMzAwJyxcbiAgICAgIGF2YWlsYWJsZTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogNSxcbiAgICAgIG5hbWU6ICdTZW1vJyxcbiAgICAgIHNpemU6ICdTbWFsbCcsXG4gICAgICBwcmljZTogJzMwMCcsXG4gICAgICBhdmFpbGFibGU6IGZhbHNlLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICBpZDogNixcbiAgICAgIG5hbWU6ICdQb3JpZGdlJyxcbiAgICAgIHNpemU6ICdTbWFsbCcsXG4gICAgICBwcmljZTogJzIwMCcsXG4gICAgICBhdmFpbGFibGU6IGZhbHNlLFxuICAgIH0sXG4gIF0sXG5cbiAgb3JkZXJzOiBbXG4gICAge1xuICAgICAgaWQ6IDEsXG4gICAgICB0eXBlOiAnbHVuY2gnLFxuICAgICAgbWVhbDoge1xuICAgICAgICBpZDogNSxcbiAgICAgICAgbmFtZTogJ0ViYScsXG4gICAgICAgIHNpemU6ICdNZWRpdW0nLFxuICAgICAgICBwcmljZTogJzQwMCcsXG4gICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6IDIsXG4gICAgICB0eXBlOiAnZGlubmVyJyxcbiAgICAgIG1lYWw6IHtcbiAgICAgICAgaWQ6IDIsXG4gICAgICAgIG5hbWU6ICdTZW1vJyxcbiAgICAgICAgc2l6ZTogJ1NtYWxsJyxcbiAgICAgICAgcHJpY2U6ICczMDAnLFxuICAgICAgfSxcbiAgICB9LFxuICBdLFxuXG4gIG1lbnU6IFtcbiAgICB7XG4gICAgICBpZDogMSxcbiAgICAgIG5hbWU6ICdKb2xsb2YgUmljZScsXG4gICAgICBzaXplOiAnTWVkaXVtJyxcbiAgICAgIHByaWNlOiAnNTAwJyxcbiAgICAgIGF2YWlsYWJsZTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiA1LFxuICAgICAgbmFtZTogJ1NlbW8nLFxuICAgICAgc2l6ZTogJ1NtYWxsJyxcbiAgICAgIHByaWNlOiAnMzAwJyxcbiAgICAgIGF2YWlsYWJsZTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiA0LFxuICAgICAgbmFtZTogJ0ViYScsXG4gICAgICBzaXplOiAnTWVkaXVtJyxcbiAgICAgIHByaWNlOiAnMzAwJyxcbiAgICAgIGF2YWlsYWJsZTogdHJ1ZSxcbiAgICB9LFxuICBdLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dummyData.js"
      ],
      "names": [
        "meals",
        "id",
        "name",
        "size",
        "price",
        "available",
        "orders",
        "type",
        "meal",
        "menu"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GADK,EAQL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GARK,EAeL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,MAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GAfK,EAsBL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GAtBK,EA6BL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GA7BK,EAqCL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GArCK,CADM;AA+CbC,EAAAA,MAAM,EAAE,CACN;AACEL,IAAAA,EAAE,EAAE,CADN;AAEEM,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,IAAI,EAAE;AACJP,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,IAAI,EAAE,QAHF;AAIJC,MAAAA,KAAK,EAAE;AAJH;AAHR,GADM,EAWN;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEM,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,IAAI,EAAE;AACJP,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,IAAI,EAAE,MAFF;AAGJC,MAAAA,IAAI,EAAE,OAHF;AAIJC,MAAAA,KAAK,EAAE;AAJH;AAHR,GAXM,CA/CK;AAsEbK,EAAAA,IAAI,EAAE,CACJ;AACER,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GADI,EAQJ;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GARI,EAeJ;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GAfI;AAtEO,C",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
      "sourcesContent": [
        "export default {\n  meals: [\n    {\n      id: 1,\n      name: 'Jollof Rice',\n      size: 'Medium',\n      price: '500',\n      available: false,\n    },\n    {\n      id: 2,\n      name: 'Fried Rice',\n      size: 'Medium',\n      price: '200',\n      available: false,\n    },\n    {\n      id: 3,\n      name: 'Chicken & Chips',\n      size: 'Large',\n      price: '1500',\n      available: false,\n    },\n    {\n      id: 4,\n      name: 'Eba',\n      size: 'Medium',\n      price: '300',\n      available: false,\n    },\n    {\n      id: 5,\n      name: 'Semo',\n      size: 'Small',\n      price: '300',\n      available: false,\n    },\n\n    {\n      id: 6,\n      name: 'Poridge',\n      size: 'Small',\n      price: '200',\n      available: false,\n    },\n  ],\n\n  orders: [\n    {\n      id: 1,\n      type: 'lunch',\n      meal: {\n        id: 5,\n        name: 'Eba',\n        size: 'Medium',\n        price: '400',\n      },\n    },\n    {\n      id: 2,\n      type: 'dinner',\n      meal: {\n        id: 2,\n        name: 'Semo',\n        size: 'Small',\n        price: '300',\n      },\n    },\n  ],\n\n  menu: [\n    {\n      id: 1,\n      name: 'Jollof Rice',\n      size: 'Medium',\n      price: '500',\n      available: true,\n    },\n    {\n      id: 5,\n      name: 'Semo',\n      size: 'Small',\n      price: '300',\n      available: true,\n    },\n    {\n      id: 4,\n      name: 'Eba',\n      size: 'Medium',\n      price: '300',\n      available: true,\n    },\n  ],\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550597326536
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
        "sourceFileName": "meal.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Meal = function Meal() {\n  _classCallCheck(this, Meal);\n\n  this.id = null;\n  this.name = null;\n  this.size = null;\n  this.price = null;\n  this.available = null;\n};\n\nexports.default = Meal;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lYWwubW9kZWwuanMiXSwibmFtZXMiOlsiTWVhbCIsImlkIiwibmFtZSIsInNpemUiLCJwcmljZSIsImF2YWlsYWJsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQXFCQSxJLEdBQ25CLGdCQUFjO0FBQUE7O0FBQ1osT0FBS0MsRUFBTCxHQUFVLElBQVY7QUFDQSxPQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNBLE9BQUtDLElBQUwsR0FBWSxJQUFaO0FBQ0EsT0FBS0MsS0FBTCxHQUFhLElBQWI7QUFDQSxPQUFLQyxTQUFMLEdBQWlCLElBQWpCO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVhbCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaWQgPSBudWxsO1xuICAgIHRoaXMubmFtZSA9IG51bGw7XG4gICAgdGhpcy5zaXplID0gbnVsbDtcbiAgICB0aGlzLnByaWNlID0gbnVsbDtcbiAgICB0aGlzLmF2YWlsYWJsZSA9IG51bGw7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "meal.model.js"
      ],
      "names": [
        "Meal",
        "id",
        "name",
        "size",
        "price",
        "available"
      ],
      "mappings": ";;;;;;;;;IAAqBA,I,GACnB,gBAAc;AAAA;;AACZ,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,SAAL,GAAiB,IAAjB;AACD,C",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "sourcesContent": [
        "export default class Meal {\n  constructor() {\n    this.id = null;\n    this.name = null;\n    this.size = null;\n    this.price = null;\n    this.available = null;\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550491061936
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/test/meal.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/meal.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/meal.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/meal.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
        "sourceFileName": "meal.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nrequire(\"chai/register-should\");\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _index = _interopRequireDefault(require(\"../v1/index\"));\n\nvar _dummyData = _interopRequireDefault(require(\"../v1/utils/dummyData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_chai.default.use(_chaiHttp.default); // This runs before each test\n\n\ndescribe('Meal', function () {\n  beforeEach(function (done) {\n    done();\n  });\n  /**\n   * Test the GET /meals/ route\n   */\n\n  describe('GET /meals', function () {\n    it('it should get all the meals', function (done) {\n      _chai.default.request(_index.default).get('/api/v1/meals').end(function (err, res) {\n        res.should.have.status(200);\n        res.body.data.should.be.a('array');\n        done();\n      });\n    });\n  });\n  /**\n   * Test the POST /meals/ route\n   */\n\n  describe('POST /meals', function () {\n    it('it should not POST a meal without name field', function (done) {\n      var meal = {\n        size: 'Small',\n        price: '300'\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/meals').send(meal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('status').eql('error');\n        res.body.should.have.property('message').eql('All parameters are required');\n        done();\n      });\n    });\n    it('it should post a meal', function (done) {\n      var meal = {\n        name: 'Porridge',\n        size: 'Small',\n        price: '300'\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/meals').send(meal).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Meal successfully added!');\n        res.body.data.should.have.property('id');\n        res.body.data.should.have.property('name');\n        res.body.data.should.have.property('size');\n        res.body.data.should.have.property('price');\n        done();\n      });\n    });\n  });\n  /**\n   * Test the GET /meals/:id route\n   */\n\n  describe('GET /meals/:id', function () {\n    it('it should GET a meal by the given id', function (done) {\n      var mealId = Number(_dummyData.default.meals[0].id);\n\n      _chai.default.request(_index.default).get(\"/api/v1/meals/\".concat(mealId)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.data.should.have.property('id').eql(mealId);\n        res.body.data.should.have.property('name');\n        res.body.data.should.have.property('size');\n        res.body.data.should.have.property('price');\n        done();\n      });\n    });\n    it('it should not GET a meal that is not available', function (done) {\n      var mealId = 10000;\n\n      _chai.default.request(_index.default).get(\"/api/v1/meals/\".concat(mealId)).end(function (err, res) {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Meal cannot be found');\n        done();\n      });\n    });\n    it('it should throw an error when a number is not passed as id', function (done) {\n      var mealId = 'o';\n\n      _chai.default.request(_index.default).get(\"/api/v1/meals/\".concat(mealId)).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n        done();\n      });\n    });\n  });\n  /**\n   * Test  PUT /meals/:id route\n   */\n\n  describe('PUT /meals/:id', function () {\n    it('it should update a book given the id', function (done) {\n      var mealId = Number(_dummyData.default.meals[0].id);\n      var updateMeal = {\n        name: 'Coconut Rice',\n        price: '300'\n      };\n\n      _chai.default.request(_index.default).put(\"/api/v1/meals/\".concat(mealId)).send(updateMeal).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Meal was successfully updated');\n        res.body.data.should.have.property('name').eql('Coconut Rice');\n        res.body.data.should.have.property('price').eql('300');\n        done();\n      });\n    });\n    it('it should not PUT a meal that is not available', function (done) {\n      var mealId = 10000;\n      var updateMeal = {\n        name: 'Coconut Rice',\n        price: '300'\n      };\n\n      _chai.default.request(_index.default).put(\"/api/v1/meals/\".concat(mealId)).send(updateMeal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql(\"Meal with id \".concat(mealId, \" cannot be found\"));\n        done();\n      });\n    });\n    it('it should throw an error when a number is not passed as id', function (done) {\n      var mealId = 'o';\n      var updateMeal = {\n        name: 'Coconut Rice',\n        price: '300'\n      };\n\n      _chai.default.request(_index.default).put(\"/api/v1/meals/\".concat(mealId)).send(updateMeal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n        done();\n      });\n    });\n  });\n  /**\n   * Test  DELETE /meals/:id route\n   */\n\n  describe('DELETE /meal/:id', function () {\n    it('it should delete a meal given the id', function (done) {\n      var mealId = Number(_dummyData.default.meals[0].id);\n\n      _chai.default.request(_index.default).delete(\"/api/v1/meals/\".concat(mealId)).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Meal was successfully deleted');\n        done();\n      });\n    });\n    it('it should not DELETE a meal that is not available', function (done) {\n      var mealId = 10000;\n\n      _chai.default.request(_index.default).put(\"/api/v1/meals/\".concat(mealId)).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql(\"Meal with id \".concat(mealId, \" cannot be found\"));\n        done();\n      });\n    });\n    it('it should throw an error when a number is not passed as id', function (done) {\n      var mealId = 'o';\n\n      _chai.default.request(_index.default).put(\"/api/v1/meals/\".concat(mealId)).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "meal.test.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHttp",
        "describe",
        "beforeEach",
        "done",
        "it",
        "request",
        "app",
        "get",
        "end",
        "err",
        "res",
        "should",
        "have",
        "status",
        "body",
        "data",
        "be",
        "a",
        "meal",
        "size",
        "price",
        "post",
        "send",
        "property",
        "eql",
        "name",
        "mealId",
        "Number",
        "dummyData",
        "meals",
        "id",
        "updateMeal",
        "put",
        "delete"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,cAAKC,GAAL,CAASC,iBAAT,E,CAEA;;;AACAC,QAAQ,CAAC,MAAD,EAAS,YAAM;AACrBC,EAAAA,UAAU,CAAC,UAACC,IAAD,EAAU;AACnBA,IAAAA,IAAI;AACL,GAFS,CAAV;AAIA;;;;AAGAF,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BG,IAAAA,EAAE,CAAC,6BAAD,EAAgC,UAACD,IAAD,EAAU;AAC1CL,oBACGO,OADH,CACWC,cADX,EAEGC,GAFH,CAEO,eAFP,EAGGC,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBK,EAArB,CAAwBC,CAAxB,CAA0B,OAA1B;AACAd,QAAAA,IAAI;AACL,OAPH;AAQD,KATC,CAAF;AAUD,GAXO,CAAR;AAaA;;;;AAGAF,EAAAA,QAAQ,CAAC,aAAD,EAAgB,YAAM;AAC5BG,IAAAA,EAAE,CAAC,8CAAD,EAAiD,UAACD,IAAD,EAAU;AAC3D,UAAMe,IAAI,GAAG;AACXC,QAAAA,IAAI,EAAE,OADK;AAEXC,QAAAA,KAAK,EAAE;AAFI,OAAb;;AAIAtB,oBACGO,OADH,CACWC,cADX,EAEGe,IAFH,CAEQ,eAFR,EAGGC,IAHH,CAGQJ,IAHR,EAIGV,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,QAA9B,EAAwCC,GAAxC,CAA4C,OAA5C;AACAd,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,6BAA7C;AACArB,QAAAA,IAAI;AACL,OAVH;AAWD,KAhBC,CAAF;AAkBAC,IAAAA,EAAE,CAAC,uBAAD,EAA0B,UAACD,IAAD,EAAU;AACpC,UAAMe,IAAI,GAAG;AACXO,QAAAA,IAAI,EAAE,UADK;AAEXN,QAAAA,IAAI,EAAE,OAFK;AAGXC,QAAAA,KAAK,EAAE;AAHI,OAAb;;AAKAtB,oBACGO,OADH,CACWC,cADX,EAEGe,IAFH,CAEQ,eAFR,EAGGC,IAHH,CAGQJ,IAHR,EAIGV,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,0BAA7C;AACAd,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,IAAnC;AACAb,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,MAAnC;AACAb,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,MAAnC;AACAb,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,OAAnC;AACApB,QAAAA,IAAI;AACL,OAbH;AAcD,KApBC,CAAF;AAqBD,GAxCO,CAAR;AA0CA;;;;AAGAF,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BG,IAAAA,EAAE,CAAC,sCAAD,EAAyC,UAACD,IAAD,EAAU;AACnD,UAAMuB,MAAM,GAAGC,MAAM,CAACC,mBAAUC,KAAV,CAAgB,CAAhB,EAAmBC,EAApB,CAArB;;AACAhC,oBACGO,OADH,CACWC,cADX,EAEGC,GAFH,yBAEwBmB,MAFxB,GAGGlB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,IAAnC,EAAyCC,GAAzC,CAA6CE,MAA7C;AACAhB,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,MAAnC;AACAb,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,MAAnC;AACAb,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,OAAnC;AACApB,QAAAA,IAAI;AACL,OAXH;AAYD,KAdC,CAAF;AAgBAC,IAAAA,EAAE,CAAC,gDAAD,EAAmD,UAACD,IAAD,EAAU;AAC7D,UAAMuB,MAAM,GAAG,KAAf;;AACA5B,oBACGO,OADH,CACWC,cADX,EAEGC,GAFH,yBAEwBmB,MAFxB,GAGGlB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,sBAA7C;AACArB,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAaAC,IAAAA,EAAE,CAAC,4DAAD,EAA+D,UAACD,IAAD,EAAU;AACzE,UAAMuB,MAAM,GAAG,GAAf;;AACA5B,oBACGO,OADH,CACWC,cADX,EAEGC,GAFH,yBAEwBmB,MAFxB,GAGGlB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,iCAA7C;AACArB,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAYD,GA1CO,CAAR;AA4CA;;;;AAGAF,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BG,IAAAA,EAAE,CAAC,sCAAD,EAAyC,UAACD,IAAD,EAAU;AACnD,UAAMuB,MAAM,GAAGC,MAAM,CAACC,mBAAUC,KAAV,CAAgB,CAAhB,EAAmBC,EAApB,CAArB;AACA,UAAMC,UAAU,GAAG;AAAEN,QAAAA,IAAI,EAAE,cAAR;AAAwBL,QAAAA,KAAK,EAAE;AAA/B,OAAnB;;AACAtB,oBACGO,OADH,CACWC,cADX,EAEG0B,GAFH,yBAEwBN,MAFxB,GAGGJ,IAHH,CAGQS,UAHR,EAIGvB,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,+BAA7C;AACAd,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,MAAnC,EAA2CC,GAA3C,CAA+C,cAA/C;AACAd,QAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcJ,MAAd,CAAqBC,IAArB,CAA0BW,QAA1B,CAAmC,OAAnC,EAA4CC,GAA5C,CAAgD,KAAhD;AACArB,QAAAA,IAAI;AACL,OAXH;AAYD,KAfC,CAAF;AAiBAC,IAAAA,EAAE,CAAC,gDAAD,EAAmD,UAACD,IAAD,EAAU;AAC7D,UAAMuB,MAAM,GAAG,KAAf;AACA,UAAMK,UAAU,GAAG;AAAEN,QAAAA,IAAI,EAAE,cAAR;AAAwBL,QAAAA,KAAK,EAAE;AAA/B,OAAnB;;AACAtB,oBACGO,OADH,CACWC,cADX,EAEG0B,GAFH,yBAEwBN,MAFxB,GAGGJ,IAHH,CAGQS,UAHR,EAIGvB,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,wBAA6DE,MAA7D;AACAvB,QAAAA,IAAI;AACL,OATH;AAUD,KAbC,CAAF;AAeAC,IAAAA,EAAE,CAAC,4DAAD,EAA+D,UAACD,IAAD,EAAU;AACzE,UAAMuB,MAAM,GAAG,GAAf;AACA,UAAMK,UAAU,GAAG;AAAEN,QAAAA,IAAI,EAAE,cAAR;AAAwBL,QAAAA,KAAK,EAAE;AAA/B,OAAnB;;AACAtB,oBACGO,OADH,CACWC,cADX,EAEG0B,GAFH,yBAEwBN,MAFxB,GAGGJ,IAHH,CAGQS,UAHR,EAIGvB,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,iCAA7C;AACArB,QAAAA,IAAI;AACL,OATH;AAUD,KAbC,CAAF;AAcD,GA/CO,CAAR;AAiDA;;;;AAGAF,EAAAA,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjCG,IAAAA,EAAE,CAAC,sCAAD,EAAyC,UAACD,IAAD,EAAU;AACnD,UAAMuB,MAAM,GAAGC,MAAM,CAACC,mBAAUC,KAAV,CAAgB,CAAhB,EAAmBC,EAApB,CAArB;;AAEAhC,oBACGO,OADH,CACWC,cADX,EAEG2B,MAFH,yBAE2BP,MAF3B,GAGGlB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,+BAA7C;AACArB,QAAAA,IAAI;AACL,OARH;AASD,KAZC,CAAF;AAcAC,IAAAA,EAAE,CAAC,mDAAD,EAAsD,UAACD,IAAD,EAAU;AAChE,UAAMuB,MAAM,GAAG,KAAf;;AACA5B,oBACGO,OADH,CACWC,cADX,EAEG0B,GAFH,yBAEwBN,MAFxB,GAGGlB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,wBAA6DE,MAA7D;AACAvB,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAaAC,IAAAA,EAAE,CAAC,4DAAD,EAA+D,UAACD,IAAD,EAAU;AACzE,UAAMuB,MAAM,GAAG,GAAf;;AACA5B,oBACGO,OADH,CACWC,cADX,EAEG0B,GAFH,yBAEwBN,MAFxB,GAGGlB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBK,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAP,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBW,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,iCAA7C;AACArB,QAAAA,IAAI;AACL,OARH;AASD,KAXC,CAAF;AAYD,GAxCO,CAAR;AAyCD,CAjNO,CAAR",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
      "sourcesContent": [
        "import chai from 'chai';\nimport 'chai/register-should';\nimport chaiHttp from 'chai-http';\nimport app from '../v1/index';\nimport dummyData from '../v1/utils/dummyData';\n\nchai.use(chaiHttp);\n\n// This runs before each test\ndescribe('Meal', () => {\n  beforeEach((done) => {\n    done();\n  });\n\n  /**\n   * Test the GET /meals/ route\n   */\n  describe('GET /meals', () => {\n    it('it should get all the meals', (done) => {\n      chai\n        .request(app)\n        .get('/api/v1/meals')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.data.should.be.a('array');\n          done();\n        });\n    });\n  });\n\n  /**\n   * Test the POST /meals/ route\n   */\n  describe('POST /meals', () => {\n    it('it should not POST a meal without name field', (done) => {\n      const meal = {\n        size: 'Small',\n        price: '300',\n      };\n      chai\n        .request(app)\n        .post('/api/v1/meals')\n        .send(meal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('status').eql('error');\n          res.body.should.have.property('message').eql('All parameters are required');\n          done();\n        });\n    });\n\n    it('it should post a meal', (done) => {\n      const meal = {\n        name: 'Porridge',\n        size: 'Small',\n        price: '300',\n      };\n      chai\n        .request(app)\n        .post('/api/v1/meals')\n        .send(meal)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Meal successfully added!');\n          res.body.data.should.have.property('id');\n          res.body.data.should.have.property('name');\n          res.body.data.should.have.property('size');\n          res.body.data.should.have.property('price');\n          done();\n        });\n    });\n  });\n\n  /**\n   * Test the GET /meals/:id route\n   */\n  describe('GET /meals/:id', () => {\n    it('it should GET a meal by the given id', (done) => {\n      const mealId = Number(dummyData.meals[0].id);\n      chai\n        .request(app)\n        .get(`/api/v1/meals/${mealId}`)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.data.should.have.property('id').eql(mealId);\n          res.body.data.should.have.property('name');\n          res.body.data.should.have.property('size');\n          res.body.data.should.have.property('price');\n          done();\n        });\n    });\n\n    it('it should not GET a meal that is not available', (done) => {\n      const mealId = 10000;\n      chai\n        .request(app)\n        .get(`/api/v1/meals/${mealId}`)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Meal cannot be found');\n          done();\n        });\n    });\n\n    it('it should throw an error when a number is not passed as id', (done) => {\n      const mealId = 'o';\n      chai\n        .request(app)\n        .get(`/api/v1/meals/${mealId}`)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n          done();\n        });\n    });\n  });\n\n  /**\n   * Test  PUT /meals/:id route\n   */\n  describe('PUT /meals/:id', () => {\n    it('it should update a book given the id', (done) => {\n      const mealId = Number(dummyData.meals[0].id);\n      const updateMeal = { name: 'Coconut Rice', price: '300' };\n      chai\n        .request(app)\n        .put(`/api/v1/meals/${mealId}`)\n        .send(updateMeal)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Meal was successfully updated');\n          res.body.data.should.have.property('name').eql('Coconut Rice');\n          res.body.data.should.have.property('price').eql('300');\n          done();\n        });\n    });\n\n    it('it should not PUT a meal that is not available', (done) => {\n      const mealId = 10000;\n      const updateMeal = { name: 'Coconut Rice', price: '300' };\n      chai\n        .request(app)\n        .put(`/api/v1/meals/${mealId}`)\n        .send(updateMeal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql(`Meal with id ${mealId} cannot be found`);\n          done();\n        });\n    });\n\n    it('it should throw an error when a number is not passed as id', (done) => {\n      const mealId = 'o';\n      const updateMeal = { name: 'Coconut Rice', price: '300' };\n      chai\n        .request(app)\n        .put(`/api/v1/meals/${mealId}`)\n        .send(updateMeal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n          done();\n        });\n    });\n  });\n\n  /**\n   * Test  DELETE /meals/:id route\n   */\n  describe('DELETE /meal/:id', () => {\n    it('it should delete a meal given the id', (done) => {\n      const mealId = Number(dummyData.meals[0].id);\n\n      chai\n        .request(app)\n        .delete(`/api/v1/meals/${mealId}`)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Meal was successfully deleted');\n          done();\n        });\n    });\n\n    it('it should not DELETE a meal that is not available', (done) => {\n      const mealId = 10000;\n      chai\n        .request(app)\n        .put(`/api/v1/meals/${mealId}`)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql(`Meal with id ${mealId} cannot be found`);\n          done();\n        });\n    });\n\n    it('it should throw an error when a number is not passed as id', (done) => {\n      const mealId = 'o';\n      chai\n        .request(app)\n        .put(`/api/v1/meals/${mealId}`)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n          done();\n        });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550423510375
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _meal = _interopRequireDefault(require(\"./routes/meal.route\"));\n\nvar _order = _interopRequireDefault(require(\"./routes/order.route\"));\n\nvar _menu = _interopRequireDefault(require(\"./routes/menu.route\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express.default)();\nvar port = process.env.PORT || 7778;\nvar API_VERSION = '/api/v1';\napp.use(_bodyParser.default.json());\napp.get('/', function (req, res) {\n  res.send('Api is working');\n});\napp.use(\"\".concat(API_VERSION, \"/meals\"), _meal.default);\napp.use(\"\".concat(API_VERSION, \"/orders\"), _order.default);\napp.use(\"\".concat(API_VERSION, \"/menu\"), _menu.default);\n\nif (!module.parent) {\n  app.listen(port, function () {\n    // eslint-disable-next-line no-console\n    console.log(\"Server is running on port \".concat(port));\n  });\n} // Expose espress server for testing\n\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsIkFQSV9WRVJTSU9OIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kIiwibWVhbFJvdXRlcyIsIm9yZGVyUm91dGVzIiwibWVudVJvdXRlcyIsIm1vZHVsZSIsInBhcmVudCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLHVCQUFaO0FBQ0EsSUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBLElBQU1DLFdBQVcsR0FBRyxTQUFwQjtBQUVBTCxHQUFHLENBQUNNLEdBQUosQ0FBUUMsb0JBQVdDLElBQVgsRUFBUjtBQUVBUixHQUFHLENBQUNTLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDekJBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLGdCQUFUO0FBQ0QsQ0FGRDtBQUlBWixHQUFHLENBQUNNLEdBQUosV0FBV0QsV0FBWCxhQUFnQ1EsYUFBaEM7QUFDQWIsR0FBRyxDQUFDTSxHQUFKLFdBQVdELFdBQVgsY0FBaUNTLGNBQWpDO0FBQ0FkLEdBQUcsQ0FBQ00sR0FBSixXQUFXRCxXQUFYLFlBQStCVSxhQUEvQjs7QUFFQSxJQUFJLENBQUNDLE1BQU0sQ0FBQ0MsTUFBWixFQUFvQjtBQUNsQmpCLEVBQUFBLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBV2pCLElBQVgsRUFBaUIsWUFBTTtBQUNyQjtBQUNBa0IsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLHFDQUF5Q25CLElBQXpDO0FBQ0QsR0FIRDtBQUlELEMsQ0FFRDs7O0FBQ0FlLE1BQU0sQ0FBQ0ssT0FBUCxHQUFpQnJCLEdBQWpCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jb2RlcHJlbmV1ci9XZWJzdG9ybVByb2plY3RzL0JldGFDaG9wL0FQSS92MSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IG1lYWxSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvbWVhbC5yb3V0ZSc7XG5pbXBvcnQgb3JkZXJSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvb3JkZXIucm91dGUnO1xuaW1wb3J0IG1lbnVSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvbWVudS5yb3V0ZSc7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDc3Nzg7XG5jb25zdCBBUElfVkVSU0lPTiA9ICcvYXBpL3YxJztcblxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoJ0FwaSBpcyB3b3JraW5nJyk7XG59KTtcblxuYXBwLnVzZShgJHtBUElfVkVSU0lPTn0vbWVhbHNgLCBtZWFsUm91dGVzKTtcbmFwcC51c2UoYCR7QVBJX1ZFUlNJT059L29yZGVyc2AsIG9yZGVyUm91dGVzKTtcbmFwcC51c2UoYCR7QVBJX1ZFUlNJT059L21lbnVgLCBtZW51Um91dGVzKTtcblxuaWYgKCFtb2R1bGUucGFyZW50KSB7XG4gIGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS5sb2coYFNlcnZlciBpcyBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApO1xuICB9KTtcbn1cblxuLy8gRXhwb3NlIGVzcHJlc3Mgc2VydmVyIGZvciB0ZXN0aW5nXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "API_VERSION",
        "use",
        "bodyParser",
        "json",
        "get",
        "req",
        "res",
        "send",
        "mealRoutes",
        "orderRoutes",
        "menuRoutes",
        "module",
        "parent",
        "listen",
        "console",
        "log",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,uBAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,WAAW,GAAG,SAApB;AAEAL,GAAG,CAACM,GAAJ,CAAQC,oBAAWC,IAAX,EAAR;AAEAR,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,gBAAT;AACD,CAFD;AAIAZ,GAAG,CAACM,GAAJ,WAAWD,WAAX,aAAgCQ,aAAhC;AACAb,GAAG,CAACM,GAAJ,WAAWD,WAAX,cAAiCS,cAAjC;AACAd,GAAG,CAACM,GAAJ,WAAWD,WAAX,YAA+BU,aAA/B;;AAEA,IAAI,CAACC,MAAM,CAACC,MAAZ,EAAoB;AAClBjB,EAAAA,GAAG,CAACkB,MAAJ,CAAWjB,IAAX,EAAiB,YAAM;AACrB;AACAkB,IAAAA,OAAO,CAACC,GAAR,qCAAyCnB,IAAzC;AACD,GAHD;AAID,C,CAED;;;AACAe,MAAM,CAACK,OAAP,GAAiBrB,GAAjB",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport mealRoutes from './routes/meal.route';\nimport orderRoutes from './routes/order.route';\nimport menuRoutes from './routes/menu.route';\n\nconst app = express();\nconst port = process.env.PORT || 7778;\nconst API_VERSION = '/api/v1';\n\napp.use(bodyParser.json());\n\napp.get('/', (req, res) => {\n  res.send('Api is working');\n});\n\napp.use(`${API_VERSION}/meals`, mealRoutes);\napp.use(`${API_VERSION}/orders`, orderRoutes);\napp.use(`${API_VERSION}/menu`, menuRoutes);\n\nif (!module.parent) {\n  app.listen(port, () => {\n    // eslint-disable-next-line no-console\n    console.log(`Server is running on port ${port}`);\n  });\n}\n\n// Expose espress server for testing\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550491061935
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/meal.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
        "sourceFileName": "meal.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _meal = _interopRequireDefault(require(\"../controllers/meal.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _meal.default.fetchAllMeals);\nrouter.post('/', _meal.default.addAMeal);\nrouter.get('/:id', _meal.default.getAMeal);\nrouter.put('/:id', _meal.default.updateAMeal);\nrouter.delete('/:id', _meal.default.deleteAMeal);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lYWwucm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiTWVhbENvbnRyb2xsZXIiLCJmZXRjaEFsbE1lYWxzIiwicG9zdCIsImFkZEFNZWFsIiwiZ2V0QU1lYWwiLCJwdXQiLCJ1cGRhdGVBTWVhbCIsImRlbGV0ZSIsImRlbGV0ZUFNZWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsY0FBZUMsYUFBL0I7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQkYsY0FBZUcsUUFBaEM7QUFDQUwsTUFBTSxDQUFDQyxHQUFQLENBQVcsTUFBWCxFQUFtQkMsY0FBZUksUUFBbEM7QUFDQU4sTUFBTSxDQUFDTyxHQUFQLENBQVcsTUFBWCxFQUFtQkwsY0FBZU0sV0FBbEM7QUFDQVIsTUFBTSxDQUFDUyxNQUFQLENBQWMsTUFBZCxFQUFzQlAsY0FBZVEsV0FBckM7ZUFFZVYsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgTWVhbENvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvbWVhbC5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBNZWFsQ29udHJvbGxlci5mZXRjaEFsbE1lYWxzKTtcbnJvdXRlci5wb3N0KCcvJywgTWVhbENvbnRyb2xsZXIuYWRkQU1lYWwpO1xucm91dGVyLmdldCgnLzppZCcsIE1lYWxDb250cm9sbGVyLmdldEFNZWFsKTtcbnJvdXRlci5wdXQoJy86aWQnLCBNZWFsQ29udHJvbGxlci51cGRhdGVBTWVhbCk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJywgTWVhbENvbnRyb2xsZXIuZGVsZXRlQU1lYWwpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "meal.route.js"
      ],
      "names": [
        "router",
        "get",
        "MealController",
        "fetchAllMeals",
        "post",
        "addAMeal",
        "getAMeal",
        "put",
        "updateAMeal",
        "delete",
        "deleteAMeal"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,cAAeC,aAA/B;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBF,cAAeG,QAAhC;AACAL,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,cAAeI,QAAlC;AACAN,MAAM,CAACO,GAAP,CAAW,MAAX,EAAmBL,cAAeM,WAAlC;AACAR,MAAM,CAACS,MAAP,CAAc,MAAd,EAAsBP,cAAeQ,WAArC;eAEeV,M",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "sourcesContent": [
        "import { Router } from 'express';\nimport MealController from '../controllers/meal.controller';\n\nconst router = Router();\n\nrouter.get('/', MealController.fetchAllMeals);\nrouter.post('/', MealController.addAMeal);\nrouter.get('/:id', MealController.getAMeal);\nrouter.put('/:id', MealController.updateAMeal);\nrouter.delete('/:id', MealController.deleteAMeal);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550427837722
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/meal.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
        "sourceFileName": "meal.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _meal = _interopRequireDefault(require(\"../services/meal.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * meal controller performs controls  request and response -\n * fetching all meal,\n * adding a new meal,\n * updating an existing meal and\n * getting a particular meal\n */\nvar MealController = {\n  /**\n   * @description retrieve and return all meals from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals: function fetchAllMeals(req, res) {\n    var allMeals = _meal.default.fetchAllMeals();\n\n    return res.json({\n      status: 'success',\n      data: allMeals\n    }).status(200);\n  },\n\n  /**\n   * @description create a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  addAMeal: function addAMeal(req, res) {\n    if (!req.body.name || !req.body.price || !req.body.size) {\n      return res.status(400).send({\n        status: 'error',\n        message: 'All parameters are required'\n      });\n    }\n\n    var newMeal = req.body;\n\n    var createdMeal = _meal.default.addAMeal(newMeal);\n\n    return res.json({\n      status: 'success',\n      message: 'Meal successfully added!',\n      data: createdMeal\n    }).status(201);\n  },\n\n  /**\n   * @description update a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAMeal: function updateAMeal(req, res) {\n    var newMeal = req.body;\n    var id = req.params.id;\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number'\n      });\n    }\n\n    var updateMeal = _meal.default.updateAMeal(id, newMeal);\n\n    if (updateMeal == null) {\n      return res.status(400).json({\n        status: 'error',\n        message: \"Meal with id \".concat(id, \" cannot be found\")\n      });\n    }\n\n    return res.json({\n      status: 'success',\n      message: 'Meal was successfully updated',\n      data: updateMeal\n    }).status(201);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} found meal\n   */\n  getAMeal: function getAMeal(req, res) {\n    var id = req.params.id;\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number'\n      });\n    }\n\n    var foundMeal = _meal.default.getAMeal(id);\n\n    var foundMealKeys = Object.keys(foundMeal);\n\n    if (foundMealKeys.length === 0) {\n      return res.status(404).json({\n        status: 'error',\n        message: 'Meal cannot be found'\n      });\n    }\n\n    return res.json({\n      status: 'success',\n      data: foundMeal\n    }).status(200);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} response\n   */\n  deleteAMeal: function deleteAMeal(req, res) {\n    var id = req.params.id;\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number'\n      });\n    }\n\n    var deletedMeal = _meal.default.deleteAMeal(id);\n\n    if (deletedMeal == null) {\n      return res.json({\n        status: 'error',\n        message: \"Meal with id \".concat(id, \" cannot be found\")\n      }).status(404);\n    }\n\n    return res.json({\n      status: 'success',\n      message: 'Meal was successfully deleted'\n    }).status(200);\n  }\n};\nvar _default = MealController;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "meal.controller.js"
      ],
      "names": [
        "MealController",
        "fetchAllMeals",
        "req",
        "res",
        "allMeals",
        "MealService",
        "json",
        "status",
        "data",
        "addAMeal",
        "body",
        "name",
        "price",
        "size",
        "send",
        "message",
        "newMeal",
        "createdMeal",
        "updateAMeal",
        "id",
        "params",
        "Number",
        "isNaN",
        "updateMeal",
        "getAMeal",
        "foundMeal",
        "foundMealKeys",
        "Object",
        "keys",
        "length",
        "deleteAMeal",
        "deletedMeal"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;;;AAOA,IAAMA,cAAc,GAAG;AACrB;;;;;;AAMAC,EAAAA,aAPqB,yBAOPC,GAPO,EAOFC,GAPE,EAOG;AACtB,QAAMC,QAAQ,GAAGC,cAAYJ,aAAZ,EAAjB;;AACA,WAAOE,GAAG,CACPG,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJC,MAAAA,IAAI,EAAEJ;AAFF,KADD,EAKJG,MALI,CAKG,GALH,CAAP;AAMD,GAfoB;;AAiBrB;;;;;;AAMAE,EAAAA,QAvBqB,oBAuBZP,GAvBY,EAuBPC,GAvBO,EAuBF;AACjB,QAAI,CAACD,GAAG,CAACQ,IAAJ,CAASC,IAAV,IAAkB,CAACT,GAAG,CAACQ,IAAJ,CAASE,KAA5B,IAAqC,CAACV,GAAG,CAACQ,IAAJ,CAASG,IAAnD,EAAyD;AACvD,aAAOV,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AAC1BP,QAAAA,MAAM,EAAE,OADkB;AAE1BQ,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAMC,OAAO,GAAGd,GAAG,CAACQ,IAApB;;AACA,QAAMO,WAAW,GAAGZ,cAAYI,QAAZ,CAAqBO,OAArB,CAApB;;AACA,WAAOb,GAAG,CACPG,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJQ,MAAAA,OAAO,EAAE,0BAFL;AAGJP,MAAAA,IAAI,EAAES;AAHF,KADD,EAMJV,MANI,CAMG,GANH,CAAP;AAOD,GAxCoB;;AA0CrB;;;;;;AAMAW,EAAAA,WAhDqB,uBAgDThB,GAhDS,EAgDJC,GAhDI,EAgDC;AACpB,QAAMa,OAAO,GAAGd,GAAG,CAACQ,IAApB;AADoB,QAEZS,EAFY,GAELjB,GAAG,CAACkB,MAFC,CAEZD,EAFY;;AAIpB,QAAIE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,EAAD,CAAnB,CAAJ,EAA8B;AAC5B,aAAOhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BQ,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAMQ,UAAU,GAAGlB,cAAYa,WAAZ,CAAwBC,EAAxB,EAA4BH,OAA5B,CAAnB;;AAEA,QAAIO,UAAU,IAAI,IAAlB,EAAwB;AACtB,aAAOpB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BQ,QAAAA,OAAO,yBAAkBI,EAAlB;AAFmB,OAArB,CAAP;AAID;;AACD,WAAOhB,GAAG,CACPG,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJQ,MAAAA,OAAO,EAAE,+BAFL;AAGJP,MAAAA,IAAI,EAAEe;AAHF,KADD,EAMJhB,MANI,CAMG,GANH,CAAP;AAOD,GA1EoB;;AA4ErB;;;;;;AAMAiB,EAAAA,QAlFqB,oBAkFZtB,GAlFY,EAkFPC,GAlFO,EAkFF;AAAA,QACTgB,EADS,GACFjB,GAAG,CAACkB,MADF,CACTD,EADS;;AAGjB,QAAIE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,EAAD,CAAnB,CAAJ,EAA8B;AAC5B,aAAOhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BQ,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAMU,SAAS,GAAGpB,cAAYmB,QAAZ,CAAqBL,EAArB,CAAlB;;AACA,QAAMO,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,CAAtB;;AAEA,QAAIC,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,aAAO1B,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BQ,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,WAAOZ,GAAG,CACPG,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJC,MAAAA,IAAI,EAAEiB;AAFF,KADD,EAKJlB,MALI,CAKG,GALH,CAAP;AAMD,GA5GoB;;AA8GrB;;;;;;AAMAuB,EAAAA,WApHqB,uBAoHT5B,GApHS,EAoHJC,GApHI,EAoHC;AAAA,QACZgB,EADY,GACLjB,GAAG,CAACkB,MADC,CACZD,EADY;;AAGpB,QAAIE,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,EAAD,CAAnB,CAAJ,EAA8B;AAC5B,aAAOhB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BQ,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAMgB,WAAW,GAAG1B,cAAYyB,WAAZ,CAAwBX,EAAxB,CAApB;;AAEA,QAAIY,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAO5B,GAAG,CACPG,IADI,CACC;AACJC,QAAAA,MAAM,EAAE,OADJ;AAEJQ,QAAAA,OAAO,yBAAkBI,EAAlB;AAFH,OADD,EAKJZ,MALI,CAKG,GALH,CAAP;AAMD;;AAED,WAAOJ,GAAG,CACPG,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJQ,MAAAA,OAAO,EAAE;AAFL,KADD,EAKJR,MALI,CAKG,GALH,CAAP;AAMD;AA/IoB,CAAvB;eAkJeP,c",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "sourcesContent": [
        "import MealService from '../services/meal.service';\n\n/**\n * meal controller performs controls  request and response -\n * fetching all meal,\n * adding a new meal,\n * updating an existing meal and\n * getting a particular meal\n */\nconst MealController = {\n  /**\n   * @description retrieve and return all meals from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals(req, res) {\n    const allMeals = MealService.fetchAllMeals();\n    return res\n      .json({\n        status: 'success',\n        data: allMeals,\n      })\n      .status(200);\n  },\n\n  /**\n   * @description create a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  addAMeal(req, res) {\n    if (!req.body.name || !req.body.price || !req.body.size) {\n      return res.status(400).send({\n        status: 'error',\n        message: 'All parameters are required',\n      });\n    }\n\n    const newMeal = req.body;\n    const createdMeal = MealService.addAMeal(newMeal);\n    return res\n      .json({\n        status: 'success',\n        message: 'Meal successfully added!',\n        data: createdMeal,\n      })\n      .status(201);\n  },\n\n  /**\n   * @description update a meal record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAMeal(req, res) {\n    const newMeal = req.body;\n    const { id } = req.params;\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number',\n      });\n    }\n\n    const updateMeal = MealService.updateAMeal(id, newMeal);\n\n    if (updateMeal == null) {\n      return res.status(400).json({\n        status: 'error',\n        message: `Meal with id ${id} cannot be found`,\n      });\n    }\n    return res\n      .json({\n        status: 'success',\n        message: 'Meal was successfully updated',\n        data: updateMeal,\n      })\n      .status(201);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} found meal\n   */\n  getAMeal(req, res) {\n    const { id } = req.params;\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number',\n      });\n    }\n\n    const foundMeal = MealService.getAMeal(id);\n    const foundMealKeys = Object.keys(foundMeal);\n\n    if (foundMealKeys.length === 0) {\n      return res.status(404).json({\n        status: 'error',\n        message: 'Meal cannot be found',\n      });\n    }\n\n    return res\n      .json({\n        status: 'success',\n        data: foundMeal,\n      })\n      .status(200);\n  },\n\n  /**\n   * @description get a specific meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} response\n   */\n  deleteAMeal(req, res) {\n    const { id } = req.params;\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number',\n      });\n    }\n\n    const deletedMeal = MealService.deleteAMeal(id);\n\n    if (deletedMeal == null) {\n      return res\n        .json({\n          status: 'error',\n          message: `Meal with id ${id} cannot be found`,\n        })\n        .status(404);\n    }\n\n    return res\n      .json({\n        status: 'success',\n        message: 'Meal was successfully deleted',\n      })\n      .status(200);\n  },\n};\n\nexport default MealController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550423510376
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/meal.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
        "sourceFileName": "meal.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dummyData = _interopRequireDefault(require(\"../utils/dummyData\"));\n\nvar _meal = _interopRequireDefault(require(\"../models/meal.model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * meal services performs all action related to meal - fetching all meal, adding a new meal,\n *  updating an existing meal and getting a particular meal\n */\nvar MealService = {\n  /**\n   * @description Retrieve and return all meals from our dunny data\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals: function fetchAllMeals() {\n    return _dummyData.default.meals.map(function (meal) {\n      var newMeal = new _meal.default();\n      newMeal.id = meal.id;\n      newMeal.name = meal.name;\n      newMeal.size = meal.size;\n      newMeal.price = meal.price;\n      return newMeal;\n    });\n  },\n\n  /**\n   * @description Takes a new meal object and adds it our dummy data\n   * @param {object} meal\n   * @returns {object} meal\n   */\n  addAMeal: function addAMeal(meal) {\n    var mealLength = _dummyData.default.meals.length;\n    var lastId = _dummyData.default.meals[mealLength - 1].id;\n    var newId = lastId + 1;\n    var newMeal = meal;\n    newMeal.id = newId;\n\n    _dummyData.default.meals.push(newMeal);\n\n    return meal;\n  },\n\n  /**\n   * @description Updates an existing meal with a new meal object\n   * @param { int } id\n   * @param {object} updatedMeal\n   * @returns {object} updated meal\n   */\n  updateAMeal: function updateAMeal(id, updatedMeal) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      foundMeal.name = updatedMeal.name;\n      foundMeal.price = updatedMeal.price;\n      foundMeal.size = updatedMeal.size;\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Finds a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  getAMeal: function getAMeal(id) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    return foundMeal || {};\n  },\n\n  /**\n   * @description Delete a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  deleteAMeal: function deleteAMeal(id) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      var index = _dummyData.default.meals.indexOf(foundMeal);\n\n      if (index > -1) {\n        _dummyData.default.meals.splice(index, 1);\n      }\n    }\n\n    return foundMeal;\n  }\n};\nvar _default = MealService;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lYWwuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZWFsU2VydmljZSIsImZldGNoQWxsTWVhbHMiLCJkdW1teURhdGEiLCJtZWFscyIsIm1hcCIsIm1lYWwiLCJuZXdNZWFsIiwiTWVhbCIsImlkIiwibmFtZSIsInNpemUiLCJwcmljZSIsImFkZEFNZWFsIiwibWVhbExlbmd0aCIsImxlbmd0aCIsImxhc3RJZCIsIm5ld0lkIiwicHVzaCIsInVwZGF0ZUFNZWFsIiwidXBkYXRlZE1lYWwiLCJmb3VuZE1lYWwiLCJmaW5kIiwiTnVtYmVyIiwiZ2V0QU1lYWwiLCJkZWxldGVBTWVhbCIsImluZGV4IiwiaW5kZXhPZiIsInNwbGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUE7Ozs7QUFJQSxJQUFNQSxXQUFXLEdBQUc7QUFDbEI7Ozs7QUFJQUMsRUFBQUEsYUFMa0IsMkJBS0Y7QUFDZCxXQUFPQyxtQkFBVUMsS0FBVixDQUFnQkMsR0FBaEIsQ0FBb0IsVUFBQ0MsSUFBRCxFQUFVO0FBQ25DLFVBQU1DLE9BQU8sR0FBRyxJQUFJQyxhQUFKLEVBQWhCO0FBQ0FELE1BQUFBLE9BQU8sQ0FBQ0UsRUFBUixHQUFhSCxJQUFJLENBQUNHLEVBQWxCO0FBQ0FGLE1BQUFBLE9BQU8sQ0FBQ0csSUFBUixHQUFlSixJQUFJLENBQUNJLElBQXBCO0FBQ0FILE1BQUFBLE9BQU8sQ0FBQ0ksSUFBUixHQUFlTCxJQUFJLENBQUNLLElBQXBCO0FBQ0FKLE1BQUFBLE9BQU8sQ0FBQ0ssS0FBUixHQUFnQk4sSUFBSSxDQUFDTSxLQUFyQjtBQUVBLGFBQU9MLE9BQVA7QUFDRCxLQVJNLENBQVA7QUFTRCxHQWZpQjs7QUFpQmxCOzs7OztBQUtBTSxFQUFBQSxRQXRCa0Isb0JBc0JUUCxJQXRCUyxFQXNCSDtBQUNiLFFBQU1RLFVBQVUsR0FBR1gsbUJBQVVDLEtBQVYsQ0FBZ0JXLE1BQW5DO0FBQ0EsUUFBTUMsTUFBTSxHQUFHYixtQkFBVUMsS0FBVixDQUFnQlUsVUFBVSxHQUFHLENBQTdCLEVBQWdDTCxFQUEvQztBQUNBLFFBQU1RLEtBQUssR0FBR0QsTUFBTSxHQUFHLENBQXZCO0FBRUEsUUFBTVQsT0FBTyxHQUFHRCxJQUFoQjtBQUNBQyxJQUFBQSxPQUFPLENBQUNFLEVBQVIsR0FBYVEsS0FBYjs7QUFFQWQsdUJBQVVDLEtBQVYsQ0FBZ0JjLElBQWhCLENBQXFCWCxPQUFyQjs7QUFDQSxXQUFPRCxJQUFQO0FBQ0QsR0FoQ2lCOztBQWtDbEI7Ozs7OztBQU1BYSxFQUFBQSxXQXhDa0IsdUJBd0NOVixFQXhDTSxFQXdDRlcsV0F4Q0UsRUF3Q1c7QUFDM0IsUUFBTUMsU0FBUyxHQUFHbEIsbUJBQVVDLEtBQVYsQ0FBZ0JrQixJQUFoQixDQUFxQixVQUFBaEIsSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0csRUFBTCxLQUFZYyxNQUFNLENBQUNkLEVBQUQsQ0FBdEI7QUFBQSxLQUF6QixDQUFsQjs7QUFFQSxRQUFJWSxTQUFKLEVBQWU7QUFDYkEsTUFBQUEsU0FBUyxDQUFDWCxJQUFWLEdBQWlCVSxXQUFXLENBQUNWLElBQTdCO0FBQ0FXLE1BQUFBLFNBQVMsQ0FBQ1QsS0FBVixHQUFrQlEsV0FBVyxDQUFDUixLQUE5QjtBQUNBUyxNQUFBQSxTQUFTLENBQUNWLElBQVYsR0FBaUJTLFdBQVcsQ0FBQ1QsSUFBN0I7QUFDRDs7QUFDRCxXQUFPVSxTQUFQO0FBQ0QsR0FqRGlCOztBQW1EbEI7Ozs7O0FBS0FHLEVBQUFBLFFBeERrQixvQkF3RFRmLEVBeERTLEVBd0RMO0FBQ1gsUUFBTVksU0FBUyxHQUFHbEIsbUJBQVVDLEtBQVYsQ0FBZ0JrQixJQUFoQixDQUFxQixVQUFBaEIsSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0csRUFBTCxLQUFZYyxNQUFNLENBQUNkLEVBQUQsQ0FBdEI7QUFBQSxLQUF6QixDQUFsQjs7QUFDQSxXQUFPWSxTQUFTLElBQUksRUFBcEI7QUFDRCxHQTNEaUI7O0FBNkRsQjs7Ozs7QUFLQUksRUFBQUEsV0FsRWtCLHVCQWtFTmhCLEVBbEVNLEVBa0VGO0FBQ2QsUUFBTVksU0FBUyxHQUFHbEIsbUJBQVVDLEtBQVYsQ0FBZ0JrQixJQUFoQixDQUFxQixVQUFBaEIsSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0csRUFBTCxLQUFZYyxNQUFNLENBQUNkLEVBQUQsQ0FBdEI7QUFBQSxLQUF6QixDQUFsQjs7QUFDQSxRQUFJWSxTQUFKLEVBQWU7QUFDYixVQUFNSyxLQUFLLEdBQUd2QixtQkFBVUMsS0FBVixDQUFnQnVCLE9BQWhCLENBQXdCTixTQUF4QixDQUFkOztBQUNBLFVBQUlLLEtBQUssR0FBRyxDQUFDLENBQWIsRUFBZ0I7QUFDZHZCLDJCQUFVQyxLQUFWLENBQWdCd0IsTUFBaEIsQ0FBdUJGLEtBQXZCLEVBQThCLENBQTlCO0FBQ0Q7QUFDRjs7QUFDRCxXQUFPTCxTQUFQO0FBQ0Q7QUEzRWlCLENBQXBCO2VBNkVlcEIsVyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZHVtbXlEYXRhIGZyb20gJy4uL3V0aWxzL2R1bW15RGF0YSc7XG5pbXBvcnQgTWVhbCBmcm9tICcuLi9tb2RlbHMvbWVhbC5tb2RlbCc7XG5cbi8qKlxuICogbWVhbCBzZXJ2aWNlcyBwZXJmb3JtcyBhbGwgYWN0aW9uIHJlbGF0ZWQgdG8gbWVhbCAtIGZldGNoaW5nIGFsbCBtZWFsLCBhZGRpbmcgYSBuZXcgbWVhbCxcbiAqICB1cGRhdGluZyBhbiBleGlzdGluZyBtZWFsIGFuZCBnZXR0aW5nIGEgcGFydGljdWxhciBtZWFsXG4gKi9cbmNvbnN0IE1lYWxTZXJ2aWNlID0ge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFJldHJpZXZlIGFuZCByZXR1cm4gYWxsIG1lYWxzIGZyb20gb3VyIGR1bm55IGRhdGFcbiAgICogQHJldHVybnMge0FycmF5fSBtZWFsIG9iamVjdCBhcnJheVxuICAgKi9cbiAgZmV0Y2hBbGxNZWFscygpIHtcbiAgICByZXR1cm4gZHVtbXlEYXRhLm1lYWxzLm1hcCgobWVhbCkgPT4ge1xuICAgICAgY29uc3QgbmV3TWVhbCA9IG5ldyBNZWFsKCk7XG4gICAgICBuZXdNZWFsLmlkID0gbWVhbC5pZDtcbiAgICAgIG5ld01lYWwubmFtZSA9IG1lYWwubmFtZTtcbiAgICAgIG5ld01lYWwuc2l6ZSA9IG1lYWwuc2l6ZTtcbiAgICAgIG5ld01lYWwucHJpY2UgPSBtZWFsLnByaWNlO1xuXG4gICAgICByZXR1cm4gbmV3TWVhbDtcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRha2VzIGEgbmV3IG1lYWwgb2JqZWN0IGFuZCBhZGRzIGl0IG91ciBkdW1teSBkYXRhXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBtZWFsXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IG1lYWxcbiAgICovXG4gIGFkZEFNZWFsKG1lYWwpIHtcbiAgICBjb25zdCBtZWFsTGVuZ3RoID0gZHVtbXlEYXRhLm1lYWxzLmxlbmd0aDtcbiAgICBjb25zdCBsYXN0SWQgPSBkdW1teURhdGEubWVhbHNbbWVhbExlbmd0aCAtIDFdLmlkO1xuICAgIGNvbnN0IG5ld0lkID0gbGFzdElkICsgMTtcblxuICAgIGNvbnN0IG5ld01lYWwgPSBtZWFsO1xuICAgIG5ld01lYWwuaWQgPSBuZXdJZDtcblxuICAgIGR1bW15RGF0YS5tZWFscy5wdXNoKG5ld01lYWwpO1xuICAgIHJldHVybiBtZWFsO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gVXBkYXRlcyBhbiBleGlzdGluZyBtZWFsIHdpdGggYSBuZXcgbWVhbCBvYmplY3RcbiAgICogQHBhcmFtIHsgaW50IH0gaWRcbiAgICogQHBhcmFtIHtvYmplY3R9IHVwZGF0ZWRNZWFsXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IHVwZGF0ZWQgbWVhbFxuICAgKi9cbiAgdXBkYXRlQU1lYWwoaWQsIHVwZGF0ZWRNZWFsKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lYWxzLmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIoaWQpKTtcblxuICAgIGlmIChmb3VuZE1lYWwpIHtcbiAgICAgIGZvdW5kTWVhbC5uYW1lID0gdXBkYXRlZE1lYWwubmFtZTtcbiAgICAgIGZvdW5kTWVhbC5wcmljZSA9IHVwZGF0ZWRNZWFsLnByaWNlO1xuICAgICAgZm91bmRNZWFsLnNpemUgPSB1cGRhdGVkTWVhbC5zaXplO1xuICAgIH1cbiAgICByZXR1cm4gZm91bmRNZWFsO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gRmluZHMgYSBtZWFsIHJlY29yZCBmcm9tIG1lYWwgRHVtbXkgRGF0YVxuICAgKiBAcGFyYW0geyBpbnQgfSBpZFxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBtZWFsXG4gICAqL1xuICBnZXRBTWVhbChpZCkge1xuICAgIGNvbnN0IGZvdW5kTWVhbCA9IGR1bW15RGF0YS5tZWFscy5maW5kKG1lYWwgPT4gbWVhbC5pZCA9PT0gTnVtYmVyKGlkKSk7XG4gICAgcmV0dXJuIGZvdW5kTWVhbCB8fCB7fTtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIERlbGV0ZSBhIG1lYWwgcmVjb3JkIGZyb20gbWVhbCBEdW1teSBEYXRhXG4gICAqIEBwYXJhbSB7IGludCB9IGlkXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IG1lYWxcbiAgICovXG4gIGRlbGV0ZUFNZWFsKGlkKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lYWxzLmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIoaWQpKTtcbiAgICBpZiAoZm91bmRNZWFsKSB7XG4gICAgICBjb25zdCBpbmRleCA9IGR1bW15RGF0YS5tZWFscy5pbmRleE9mKGZvdW5kTWVhbCk7XG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICBkdW1teURhdGEubWVhbHMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZvdW5kTWVhbDtcbiAgfSxcbn07XG5leHBvcnQgZGVmYXVsdCBNZWFsU2VydmljZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "meal.service.js"
      ],
      "names": [
        "MealService",
        "fetchAllMeals",
        "dummyData",
        "meals",
        "map",
        "meal",
        "newMeal",
        "Meal",
        "id",
        "name",
        "size",
        "price",
        "addAMeal",
        "mealLength",
        "length",
        "lastId",
        "newId",
        "push",
        "updateAMeal",
        "updatedMeal",
        "foundMeal",
        "find",
        "Number",
        "getAMeal",
        "deleteAMeal",
        "index",
        "indexOf",
        "splice"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;;AAIA,IAAMA,WAAW,GAAG;AAClB;;;;AAIAC,EAAAA,aALkB,2BAKF;AACd,WAAOC,mBAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAU;AACnC,UAAMC,OAAO,GAAG,IAAIC,aAAJ,EAAhB;AACAD,MAAAA,OAAO,CAACE,EAAR,GAAaH,IAAI,CAACG,EAAlB;AACAF,MAAAA,OAAO,CAACG,IAAR,GAAeJ,IAAI,CAACI,IAApB;AACAH,MAAAA,OAAO,CAACI,IAAR,GAAeL,IAAI,CAACK,IAApB;AACAJ,MAAAA,OAAO,CAACK,KAAR,GAAgBN,IAAI,CAACM,KAArB;AAEA,aAAOL,OAAP;AACD,KARM,CAAP;AASD,GAfiB;;AAiBlB;;;;;AAKAM,EAAAA,QAtBkB,oBAsBTP,IAtBS,EAsBH;AACb,QAAMQ,UAAU,GAAGX,mBAAUC,KAAV,CAAgBW,MAAnC;AACA,QAAMC,MAAM,GAAGb,mBAAUC,KAAV,CAAgBU,UAAU,GAAG,CAA7B,EAAgCL,EAA/C;AACA,QAAMQ,KAAK,GAAGD,MAAM,GAAG,CAAvB;AAEA,QAAMT,OAAO,GAAGD,IAAhB;AACAC,IAAAA,OAAO,CAACE,EAAR,GAAaQ,KAAb;;AAEAd,uBAAUC,KAAV,CAAgBc,IAAhB,CAAqBX,OAArB;;AACA,WAAOD,IAAP;AACD,GAhCiB;;AAkClB;;;;;;AAMAa,EAAAA,WAxCkB,uBAwCNV,EAxCM,EAwCFW,WAxCE,EAwCW;AAC3B,QAAMC,SAAS,GAAGlB,mBAAUC,KAAV,CAAgBkB,IAAhB,CAAqB,UAAAhB,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,KAAYc,MAAM,CAACd,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AAEA,QAAIY,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACX,IAAV,GAAiBU,WAAW,CAACV,IAA7B;AACAW,MAAAA,SAAS,CAACT,KAAV,GAAkBQ,WAAW,CAACR,KAA9B;AACAS,MAAAA,SAAS,CAACV,IAAV,GAAiBS,WAAW,CAACT,IAA7B;AACD;;AACD,WAAOU,SAAP;AACD,GAjDiB;;AAmDlB;;;;;AAKAG,EAAAA,QAxDkB,oBAwDTf,EAxDS,EAwDL;AACX,QAAMY,SAAS,GAAGlB,mBAAUC,KAAV,CAAgBkB,IAAhB,CAAqB,UAAAhB,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,KAAYc,MAAM,CAACd,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AACA,WAAOY,SAAS,IAAI,EAApB;AACD,GA3DiB;;AA6DlB;;;;;AAKAI,EAAAA,WAlEkB,uBAkENhB,EAlEM,EAkEF;AACd,QAAMY,SAAS,GAAGlB,mBAAUC,KAAV,CAAgBkB,IAAhB,CAAqB,UAAAhB,IAAI;AAAA,aAAIA,IAAI,CAACG,EAAL,KAAYc,MAAM,CAACd,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AACA,QAAIY,SAAJ,EAAe;AACb,UAAMK,KAAK,GAAGvB,mBAAUC,KAAV,CAAgBuB,OAAhB,CAAwBN,SAAxB,CAAd;;AACA,UAAIK,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdvB,2BAAUC,KAAV,CAAgBwB,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACD;AACF;;AACD,WAAOL,SAAP;AACD;AA3EiB,CAApB;eA6EepB,W",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "sourcesContent": [
        "import dummyData from '../utils/dummyData';\nimport Meal from '../models/meal.model';\n\n/**\n * meal services performs all action related to meal - fetching all meal, adding a new meal,\n *  updating an existing meal and getting a particular meal\n */\nconst MealService = {\n  /**\n   * @description Retrieve and return all meals from our dunny data\n   * @returns {Array} meal object array\n   */\n  fetchAllMeals() {\n    return dummyData.meals.map((meal) => {\n      const newMeal = new Meal();\n      newMeal.id = meal.id;\n      newMeal.name = meal.name;\n      newMeal.size = meal.size;\n      newMeal.price = meal.price;\n\n      return newMeal;\n    });\n  },\n\n  /**\n   * @description Takes a new meal object and adds it our dummy data\n   * @param {object} meal\n   * @returns {object} meal\n   */\n  addAMeal(meal) {\n    const mealLength = dummyData.meals.length;\n    const lastId = dummyData.meals[mealLength - 1].id;\n    const newId = lastId + 1;\n\n    const newMeal = meal;\n    newMeal.id = newId;\n\n    dummyData.meals.push(newMeal);\n    return meal;\n  },\n\n  /**\n   * @description Updates an existing meal with a new meal object\n   * @param { int } id\n   * @param {object} updatedMeal\n   * @returns {object} updated meal\n   */\n  updateAMeal(id, updatedMeal) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n\n    if (foundMeal) {\n      foundMeal.name = updatedMeal.name;\n      foundMeal.price = updatedMeal.price;\n      foundMeal.size = updatedMeal.size;\n    }\n    return foundMeal;\n  },\n\n  /**\n   * @description Finds a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  getAMeal(id) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n    return foundMeal || {};\n  },\n\n  /**\n   * @description Delete a meal record from meal Dummy Data\n   * @param { int } id\n   * @returns {object} meal\n   */\n  deleteAMeal(id) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n    if (foundMeal) {\n      const index = dummyData.meals.indexOf(foundMeal);\n      if (index > -1) {\n        dummyData.meals.splice(index, 1);\n      }\n    }\n    return foundMeal;\n  },\n};\nexport default MealService;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550535729568
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/dummyData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
        "sourceFileName": "dummyData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  meals: [{\n    id: 1,\n    name: 'Jollof Rice',\n    size: 'Medium',\n    price: '500',\n    available: false\n  }, {\n    id: 2,\n    name: 'Fried Rice',\n    size: 'Medium',\n    price: '200',\n    available: false\n  }, {\n    id: 3,\n    name: 'Chicken & Chips',\n    size: 'Large',\n    price: '1500',\n    available: false\n  }, {\n    id: 4,\n    name: 'Eba',\n    size: 'Medium',\n    price: '300',\n    available: false\n  }, {\n    id: 5,\n    name: 'Semo',\n    size: 'Small',\n    price: '300',\n    available: false\n  }, {\n    id: 6,\n    name: 'Poridge',\n    size: 'Small',\n    price: '200',\n    available: false\n  }],\n  orders: [{\n    id: 1,\n    type: 'lunch',\n    meal: {\n      id: 5,\n      name: 'Eba',\n      size: 'Medium',\n      price: '400'\n    }\n  }, {\n    id: 2,\n    type: 'dinner',\n    meal: {\n      id: 2,\n      name: 'Semo',\n      size: 'Small',\n      price: '300'\n    }\n  }],\n  menu: [{\n    id: 1,\n    name: 'Jollof Rice',\n    size: 'Medium',\n    price: '500',\n    available: true\n  }, {\n    id: 5,\n    name: 'Semo',\n    size: 'Small',\n    price: '300',\n    available: true\n  }, {\n    id: 4,\n    name: 'Eba',\n    size: 'Medium',\n    price: '300',\n    available: true\n  }]\n};\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImR1bW15RGF0YS5qcyJdLCJuYW1lcyI6WyJtZWFscyIsImlkIiwibmFtZSIsInNpemUiLCJwcmljZSIsImF2YWlsYWJsZSIsIm9yZGVycyIsInR5cGUiLCJtZWFsIiwibWVudSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQWU7QUFDYkEsRUFBQUEsS0FBSyxFQUFFLENBQ0w7QUFDRUMsSUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsSUFBQUEsSUFBSSxFQUFFLGFBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLFFBSFI7QUFJRUMsSUFBQUEsS0FBSyxFQUFFLEtBSlQ7QUFLRUMsSUFBQUEsU0FBUyxFQUFFO0FBTGIsR0FESyxFQVFMO0FBQ0VKLElBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLElBQUFBLElBQUksRUFBRSxZQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRSxRQUhSO0FBSUVDLElBQUFBLEtBQUssRUFBRSxLQUpUO0FBS0VDLElBQUFBLFNBQVMsRUFBRTtBQUxiLEdBUkssRUFlTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsaUJBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLE9BSFI7QUFJRUMsSUFBQUEsS0FBSyxFQUFFLE1BSlQ7QUFLRUMsSUFBQUEsU0FBUyxFQUFFO0FBTGIsR0FmSyxFQXNCTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsS0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsUUFIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQXRCSyxFQTZCTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsTUFGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsT0FIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQTdCSyxFQXFDTDtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsU0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsT0FIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQXJDSyxDQURNO0FBK0NiQyxFQUFBQSxNQUFNLEVBQUUsQ0FDTjtBQUNFTCxJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFTSxJQUFBQSxJQUFJLEVBQUUsT0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUU7QUFDSlAsTUFBQUEsRUFBRSxFQUFFLENBREE7QUFFSkMsTUFBQUEsSUFBSSxFQUFFLEtBRkY7QUFHSkMsTUFBQUEsSUFBSSxFQUFFLFFBSEY7QUFJSkMsTUFBQUEsS0FBSyxFQUFFO0FBSkg7QUFIUixHQURNLEVBV047QUFDRUgsSUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRU0sSUFBQUEsSUFBSSxFQUFFLFFBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFO0FBQ0pQLE1BQUFBLEVBQUUsRUFBRSxDQURBO0FBRUpDLE1BQUFBLElBQUksRUFBRSxNQUZGO0FBR0pDLE1BQUFBLElBQUksRUFBRSxPQUhGO0FBSUpDLE1BQUFBLEtBQUssRUFBRTtBQUpIO0FBSFIsR0FYTSxDQS9DSztBQXNFYkssRUFBQUEsSUFBSSxFQUFFLENBQ0o7QUFDRVIsSUFBQUEsRUFBRSxFQUFFLENBRE47QUFFRUMsSUFBQUEsSUFBSSxFQUFFLGFBRlI7QUFHRUMsSUFBQUEsSUFBSSxFQUFFLFFBSFI7QUFJRUMsSUFBQUEsS0FBSyxFQUFFLEtBSlQ7QUFLRUMsSUFBQUEsU0FBUyxFQUFFO0FBTGIsR0FESSxFQVFKO0FBQ0VKLElBQUFBLEVBQUUsRUFBRSxDQUROO0FBRUVDLElBQUFBLElBQUksRUFBRSxNQUZSO0FBR0VDLElBQUFBLElBQUksRUFBRSxPQUhSO0FBSUVDLElBQUFBLEtBQUssRUFBRSxLQUpUO0FBS0VDLElBQUFBLFNBQVMsRUFBRTtBQUxiLEdBUkksRUFlSjtBQUNFSixJQUFBQSxFQUFFLEVBQUUsQ0FETjtBQUVFQyxJQUFBQSxJQUFJLEVBQUUsS0FGUjtBQUdFQyxJQUFBQSxJQUFJLEVBQUUsUUFIUjtBQUlFQyxJQUFBQSxLQUFLLEVBQUUsS0FKVDtBQUtFQyxJQUFBQSxTQUFTLEVBQUU7QUFMYixHQWZJO0FBdEVPLEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NvZGVwcmVuZXVyL1dlYnN0b3JtUHJvamVjdHMvQmV0YUNob3AvQVBJL3YxL3V0aWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xuICBtZWFsczogW1xuICAgIHtcbiAgICAgIGlkOiAxLFxuICAgICAgbmFtZTogJ0pvbGxvZiBSaWNlJyxcbiAgICAgIHNpemU6ICdNZWRpdW0nLFxuICAgICAgcHJpY2U6ICc1MDAnLFxuICAgICAgYXZhaWxhYmxlOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiAyLFxuICAgICAgbmFtZTogJ0ZyaWVkIFJpY2UnLFxuICAgICAgc2l6ZTogJ01lZGl1bScsXG4gICAgICBwcmljZTogJzIwMCcsXG4gICAgICBhdmFpbGFibGU6IGZhbHNlLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6IDMsXG4gICAgICBuYW1lOiAnQ2hpY2tlbiAmIENoaXBzJyxcbiAgICAgIHNpemU6ICdMYXJnZScsXG4gICAgICBwcmljZTogJzE1MDAnLFxuICAgICAgYXZhaWxhYmxlOiBmYWxzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiA0LFxuICAgICAgbmFtZTogJ0ViYScsXG4gICAgICBzaXplOiAnTWVkaXVtJyxcbiAgICAgIHByaWNlOiAnMzAwJyxcbiAgICAgIGF2YWlsYWJsZTogZmFsc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogNSxcbiAgICAgIG5hbWU6ICdTZW1vJyxcbiAgICAgIHNpemU6ICdTbWFsbCcsXG4gICAgICBwcmljZTogJzMwMCcsXG4gICAgICBhdmFpbGFibGU6IGZhbHNlLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICBpZDogNixcbiAgICAgIG5hbWU6ICdQb3JpZGdlJyxcbiAgICAgIHNpemU6ICdTbWFsbCcsXG4gICAgICBwcmljZTogJzIwMCcsXG4gICAgICBhdmFpbGFibGU6IGZhbHNlLFxuICAgIH0sXG4gIF0sXG5cbiAgb3JkZXJzOiBbXG4gICAge1xuICAgICAgaWQ6IDEsXG4gICAgICB0eXBlOiAnbHVuY2gnLFxuICAgICAgbWVhbDoge1xuICAgICAgICBpZDogNSxcbiAgICAgICAgbmFtZTogJ0ViYScsXG4gICAgICAgIHNpemU6ICdNZWRpdW0nLFxuICAgICAgICBwcmljZTogJzQwMCcsXG4gICAgICB9LFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6IDIsXG4gICAgICB0eXBlOiAnZGlubmVyJyxcbiAgICAgIG1lYWw6IHtcbiAgICAgICAgaWQ6IDIsXG4gICAgICAgIG5hbWU6ICdTZW1vJyxcbiAgICAgICAgc2l6ZTogJ1NtYWxsJyxcbiAgICAgICAgcHJpY2U6ICczMDAnLFxuICAgICAgfSxcbiAgICB9LFxuICBdLFxuXG4gIG1lbnU6IFtcbiAgICB7XG4gICAgICBpZDogMSxcbiAgICAgIG5hbWU6ICdKb2xsb2YgUmljZScsXG4gICAgICBzaXplOiAnTWVkaXVtJyxcbiAgICAgIHByaWNlOiAnNTAwJyxcbiAgICAgIGF2YWlsYWJsZTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiA1LFxuICAgICAgbmFtZTogJ1NlbW8nLFxuICAgICAgc2l6ZTogJ1NtYWxsJyxcbiAgICAgIHByaWNlOiAnMzAwJyxcbiAgICAgIGF2YWlsYWJsZTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiA0LFxuICAgICAgbmFtZTogJ0ViYScsXG4gICAgICBzaXplOiAnTWVkaXVtJyxcbiAgICAgIHByaWNlOiAnMzAwJyxcbiAgICAgIGF2YWlsYWJsZTogdHJ1ZSxcbiAgICB9LFxuICBdLFxufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "dummyData.js"
      ],
      "names": [
        "meals",
        "id",
        "name",
        "size",
        "price",
        "available",
        "orders",
        "type",
        "meal",
        "menu"
      ],
      "mappings": ";;;;;;eAAe;AACbA,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GADK,EAQL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,YAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GARK,EAeL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,MAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GAfK,EAsBL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GAtBK,EA6BL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GA7BK,EAqCL;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GArCK,CADM;AA+CbC,EAAAA,MAAM,EAAE,CACN;AACEL,IAAAA,EAAE,EAAE,CADN;AAEEM,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,IAAI,EAAE;AACJP,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,IAAI,EAAE,QAHF;AAIJC,MAAAA,KAAK,EAAE;AAJH;AAHR,GADM,EAWN;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEM,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,IAAI,EAAE;AACJP,MAAAA,EAAE,EAAE,CADA;AAEJC,MAAAA,IAAI,EAAE,MAFF;AAGJC,MAAAA,IAAI,EAAE,OAHF;AAIJC,MAAAA,KAAK,EAAE;AAJH;AAHR,GAXM,CA/CK;AAsEbK,EAAAA,IAAI,EAAE,CACJ;AACER,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GADI,EAQJ;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,IAAI,EAAE,OAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GARI,EAeJ;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,IAAI,EAAE,QAHR;AAIEC,IAAAA,KAAK,EAAE,KAJT;AAKEC,IAAAA,SAAS,EAAE;AALb,GAfI;AAtEO,C",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
      "sourcesContent": [
        "export default {\n  meals: [\n    {\n      id: 1,\n      name: 'Jollof Rice',\n      size: 'Medium',\n      price: '500',\n      available: false,\n    },\n    {\n      id: 2,\n      name: 'Fried Rice',\n      size: 'Medium',\n      price: '200',\n      available: false,\n    },\n    {\n      id: 3,\n      name: 'Chicken & Chips',\n      size: 'Large',\n      price: '1500',\n      available: false,\n    },\n    {\n      id: 4,\n      name: 'Eba',\n      size: 'Medium',\n      price: '300',\n      available: false,\n    },\n    {\n      id: 5,\n      name: 'Semo',\n      size: 'Small',\n      price: '300',\n      available: false,\n    },\n\n    {\n      id: 6,\n      name: 'Poridge',\n      size: 'Small',\n      price: '200',\n      available: false,\n    },\n  ],\n\n  orders: [\n    {\n      id: 1,\n      type: 'lunch',\n      meal: {\n        id: 5,\n        name: 'Eba',\n        size: 'Medium',\n        price: '400',\n      },\n    },\n    {\n      id: 2,\n      type: 'dinner',\n      meal: {\n        id: 2,\n        name: 'Semo',\n        size: 'Small',\n        price: '300',\n      },\n    },\n  ],\n\n  menu: [\n    {\n      id: 1,\n      name: 'Jollof Rice',\n      size: 'Medium',\n      price: '500',\n      available: true,\n    },\n    {\n      id: 5,\n      name: 'Semo',\n      size: 'Small',\n      price: '300',\n      available: true,\n    },\n    {\n      id: 4,\n      name: 'Eba',\n      size: 'Medium',\n      price: '300',\n      available: true,\n    },\n  ],\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550597326536
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/meal.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
        "sourceFileName": "meal.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Meal = function Meal() {\n  _classCallCheck(this, Meal);\n\n  this.id = null;\n  this.name = null;\n  this.size = null;\n  this.price = null;\n  this.available = null;\n};\n\nexports.default = Meal;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lYWwubW9kZWwuanMiXSwibmFtZXMiOlsiTWVhbCIsImlkIiwibmFtZSIsInNpemUiLCJwcmljZSIsImF2YWlsYWJsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQXFCQSxJLEdBQ25CLGdCQUFjO0FBQUE7O0FBQ1osT0FBS0MsRUFBTCxHQUFVLElBQVY7QUFDQSxPQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNBLE9BQUtDLElBQUwsR0FBWSxJQUFaO0FBQ0EsT0FBS0MsS0FBTCxHQUFhLElBQWI7QUFDQSxPQUFLQyxTQUFMLEdBQWlCLElBQWpCO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVhbCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuaWQgPSBudWxsO1xuICAgIHRoaXMubmFtZSA9IG51bGw7XG4gICAgdGhpcy5zaXplID0gbnVsbDtcbiAgICB0aGlzLnByaWNlID0gbnVsbDtcbiAgICB0aGlzLmF2YWlsYWJsZSA9IG51bGw7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "meal.model.js"
      ],
      "names": [
        "Meal",
        "id",
        "name",
        "size",
        "price",
        "available"
      ],
      "mappings": ";;;;;;;;;IAAqBA,I,GACnB,gBAAc;AAAA;;AACZ,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,KAAL,GAAa,IAAb;AACA,OAAKC,SAAL,GAAiB,IAAjB;AACD,C",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "sourcesContent": [
        "export default class Meal {\n  constructor() {\n    this.id = null;\n    this.name = null;\n    this.size = null;\n    this.price = null;\n    this.available = null;\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550491061936
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
        "sourceFileName": "order.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _order = _interopRequireDefault(require(\"../controllers/order.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _order.default.fetchAllOrders);\nrouter.post('/', _order.default.orderAMeal);\nrouter.put('/:id', _order.default.updateAnOrder);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsIk9yZGVyQ29udHJvbGxlciIsImZldGNoQWxsT3JkZXJzIiwicG9zdCIsIm9yZGVyQU1lYWwiLCJwdXQiLCJ1cGRhdGVBbk9yZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsZUFBZ0JDLGNBQWhDO0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJGLGVBQWdCRyxVQUFqQztBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSixlQUFnQkssYUFBbkM7ZUFFZVAsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgT3JkZXJDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL29yZGVyLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIE9yZGVyQ29udHJvbGxlci5mZXRjaEFsbE9yZGVycyk7XG5yb3V0ZXIucG9zdCgnLycsIE9yZGVyQ29udHJvbGxlci5vcmRlckFNZWFsKTtcbnJvdXRlci5wdXQoJy86aWQnLCBPcmRlckNvbnRyb2xsZXIudXBkYXRlQW5PcmRlcik7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.route.js"
      ],
      "names": [
        "router",
        "get",
        "OrderController",
        "fetchAllOrders",
        "post",
        "orderAMeal",
        "put",
        "updateAnOrder"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,eAAgBC,cAAhC;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBF,eAAgBG,UAAjC;AACAL,MAAM,CAACM,GAAP,CAAW,MAAX,EAAmBJ,eAAgBK,aAAnC;eAEeP,M",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "sourcesContent": [
        "import { Router } from 'express';\nimport OrderController from '../controllers/order.controller';\n\nconst router = Router();\n\nrouter.get('/', OrderController.fetchAllOrders);\nrouter.post('/', OrderController.orderAMeal);\nrouter.put('/:id', OrderController.updateAnOrder);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550487074899
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
        "sourceFileName": "order.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _order = _interopRequireDefault(require(\"../services/order.service\"));\n\nvar _ResponseGenerator = _interopRequireDefault(require(\"../utils/ResponseGenerator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar response = new _ResponseGenerator.default();\n/**\n * order controller performs controls  request and response -\n * order a meal,\n * modify a meal,\n * get all orders,\n */\n\nvar OrderController = {\n  /**\n   * @description retrieve and return all orders from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} order object array\n   */\n  fetchAllOrders: function fetchAllOrders(req, res) {\n    var allOrders = _order.default.fetchAllOrders();\n\n    response.setSuccess(200, null, allOrders);\n    return response.send(res);\n  },\n\n  /**\n   * @description order a meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  orderAMeal: function orderAMeal(req, res) {\n    if (!req.body.mealId || !req.body.type) {\n      response.setSuccess(400, 'All parameters are required', null);\n      return response.send(res);\n    }\n\n    var _req$body = req.body,\n        mealId = _req$body.mealId,\n        type = _req$body.type;\n\n    if (Number.isNaN(Number(mealId))) {\n      response.setError(400, 'Invalid mealId. mealId must be a number');\n      return response.send(res);\n    }\n\n    var orderedMeal = _order.default.orderAMeal(mealId, type);\n\n    if (orderedMeal == null) {\n      response.setError(404, 'This meal cannot be found');\n      return response.send(res);\n    }\n\n    response.setSuccess(200, 'Your order has been placed', orderedMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description update an order record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAnOrder: function updateAnOrder(req, res) {\n    var _req$body2 = req.body,\n        mealId = _req$body2.mealId,\n        type = _req$body2.type;\n    var id = req.params.id;\n\n    if (Number.isNaN(Number(id)) || Number.isNaN(Number(mealId))) {\n      response.setError(400, \"Invalid ID. ID's must be a number\");\n      return response.send(res);\n    }\n\n    var updateOrder = _order.default.updateAnOrder(id, mealId, type);\n\n    if (updateOrder == null) {\n      response.setError(400, \"Order with id \".concat(id, \" or Meal with id \").concat(mealId, \" cannot be found\"));\n      return response.send(res);\n    }\n\n    response.setSuccess(201, 'Order was successfully updated', updateOrder);\n    return response.send(res);\n  }\n};\nvar _default = OrderController;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsicmVzcG9uc2UiLCJSZXNwb25zZUdlbmVyYXRvciIsIk9yZGVyQ29udHJvbGxlciIsImZldGNoQWxsT3JkZXJzIiwicmVxIiwicmVzIiwiYWxsT3JkZXJzIiwiT3JkZXJTZXJ2aWNlIiwic2V0U3VjY2VzcyIsInNlbmQiLCJvcmRlckFNZWFsIiwiYm9keSIsIm1lYWxJZCIsInR5cGUiLCJOdW1iZXIiLCJpc05hTiIsInNldEVycm9yIiwib3JkZXJlZE1lYWwiLCJ1cGRhdGVBbk9yZGVyIiwiaWQiLCJwYXJhbXMiLCJ1cGRhdGVPcmRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsUUFBUSxHQUFHLElBQUlDLDBCQUFKLEVBQWpCO0FBQ0E7Ozs7Ozs7QUFNQSxJQUFNQyxlQUFlLEdBQUc7QUFDdEI7Ozs7OztBQU1BQyxFQUFBQSxjQVBzQiwwQkFPUEMsR0FQTyxFQU9GQyxHQVBFLEVBT0c7QUFDdkIsUUFBTUMsU0FBUyxHQUFHQyxlQUFhSixjQUFiLEVBQWxCOztBQUNBSCxJQUFBQSxRQUFRLENBQUNRLFVBQVQsQ0FBb0IsR0FBcEIsRUFBeUIsSUFBekIsRUFBK0JGLFNBQS9CO0FBQ0EsV0FBT04sUUFBUSxDQUFDUyxJQUFULENBQWNKLEdBQWQsQ0FBUDtBQUNELEdBWHFCOztBQWF0Qjs7Ozs7O0FBTUFLLEVBQUFBLFVBbkJzQixzQkFtQlhOLEdBbkJXLEVBbUJOQyxHQW5CTSxFQW1CRDtBQUNuQixRQUFJLENBQUNELEdBQUcsQ0FBQ08sSUFBSixDQUFTQyxNQUFWLElBQW9CLENBQUNSLEdBQUcsQ0FBQ08sSUFBSixDQUFTRSxJQUFsQyxFQUF3QztBQUN0Q2IsTUFBQUEsUUFBUSxDQUFDUSxVQUFULENBQW9CLEdBQXBCLEVBQXlCLDZCQUF6QixFQUF3RCxJQUF4RDtBQUNBLGFBQU9SLFFBQVEsQ0FBQ1MsSUFBVCxDQUFjSixHQUFkLENBQVA7QUFDRDs7QUFKa0Isb0JBTU1ELEdBQUcsQ0FBQ08sSUFOVjtBQUFBLFFBTVhDLE1BTlcsYUFNWEEsTUFOVztBQUFBLFFBTUhDLElBTkcsYUFNSEEsSUFORzs7QUFRbkIsUUFBSUMsTUFBTSxDQUFDQyxLQUFQLENBQWFELE1BQU0sQ0FBQ0YsTUFBRCxDQUFuQixDQUFKLEVBQWtDO0FBQ2hDWixNQUFBQSxRQUFRLENBQUNnQixRQUFULENBQWtCLEdBQWxCLEVBQXVCLHlDQUF2QjtBQUNBLGFBQU9oQixRQUFRLENBQUNTLElBQVQsQ0FBY0osR0FBZCxDQUFQO0FBQ0Q7O0FBRUQsUUFBTVksV0FBVyxHQUFHVixlQUFhRyxVQUFiLENBQXdCRSxNQUF4QixFQUFnQ0MsSUFBaEMsQ0FBcEI7O0FBRUEsUUFBSUksV0FBVyxJQUFJLElBQW5CLEVBQXlCO0FBQ3ZCakIsTUFBQUEsUUFBUSxDQUFDZ0IsUUFBVCxDQUFrQixHQUFsQixFQUF1QiwyQkFBdkI7QUFDQSxhQUFPaEIsUUFBUSxDQUFDUyxJQUFULENBQWNKLEdBQWQsQ0FBUDtBQUNEOztBQUVETCxJQUFBQSxRQUFRLENBQUNRLFVBQVQsQ0FBb0IsR0FBcEIsRUFBeUIsNEJBQXpCLEVBQXVEUyxXQUF2RDtBQUNBLFdBQU9qQixRQUFRLENBQUNTLElBQVQsQ0FBY0osR0FBZCxDQUFQO0FBQ0QsR0F6Q3FCOztBQTJDdEI7Ozs7OztBQU1BYSxFQUFBQSxhQWpEc0IseUJBaURSZCxHQWpEUSxFQWlESEMsR0FqREcsRUFpREU7QUFBQSxxQkFDR0QsR0FBRyxDQUFDTyxJQURQO0FBQUEsUUFDZEMsTUFEYyxjQUNkQSxNQURjO0FBQUEsUUFDTkMsSUFETSxjQUNOQSxJQURNO0FBQUEsUUFFZE0sRUFGYyxHQUVQZixHQUFHLENBQUNnQixNQUZHLENBRWRELEVBRmM7O0FBSXRCLFFBQUlMLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhRCxNQUFNLENBQUNLLEVBQUQsQ0FBbkIsS0FBNEJMLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhRCxNQUFNLENBQUNGLE1BQUQsQ0FBbkIsQ0FBaEMsRUFBOEQ7QUFDNURaLE1BQUFBLFFBQVEsQ0FBQ2dCLFFBQVQsQ0FBa0IsR0FBbEIsRUFBdUIsbUNBQXZCO0FBQ0EsYUFBT2hCLFFBQVEsQ0FBQ1MsSUFBVCxDQUFjSixHQUFkLENBQVA7QUFDRDs7QUFFRCxRQUFNZ0IsV0FBVyxHQUFHZCxlQUFhVyxhQUFiLENBQTJCQyxFQUEzQixFQUErQlAsTUFBL0IsRUFBdUNDLElBQXZDLENBQXBCOztBQUVBLFFBQUlRLFdBQVcsSUFBSSxJQUFuQixFQUF5QjtBQUN2QnJCLE1BQUFBLFFBQVEsQ0FBQ2dCLFFBQVQsQ0FBa0IsR0FBbEIsMEJBQXdDRyxFQUF4Qyw4QkFBOERQLE1BQTlEO0FBQ0EsYUFBT1osUUFBUSxDQUFDUyxJQUFULENBQWNKLEdBQWQsQ0FBUDtBQUNEOztBQUNETCxJQUFBQSxRQUFRLENBQUNRLFVBQVQsQ0FBb0IsR0FBcEIsRUFBeUIsZ0NBQXpCLEVBQTJEYSxXQUEzRDtBQUNBLFdBQU9yQixRQUFRLENBQUNTLElBQVQsQ0FBY0osR0FBZCxDQUFQO0FBQ0Q7QUFsRXFCLENBQXhCO2VBcUVlSCxlIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jb2RlcHJlbmV1ci9XZWJzdG9ybVByb2plY3RzL0JldGFDaG9wL0FQSS92MS9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPcmRlclNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvb3JkZXIuc2VydmljZSc7XG5pbXBvcnQgUmVzcG9uc2VHZW5lcmF0b3IgZnJvbSAnLi4vdXRpbHMvUmVzcG9uc2VHZW5lcmF0b3InO1xuXG5jb25zdCByZXNwb25zZSA9IG5ldyBSZXNwb25zZUdlbmVyYXRvcigpO1xuLyoqXG4gKiBvcmRlciBjb250cm9sbGVyIHBlcmZvcm1zIGNvbnRyb2xzICByZXF1ZXN0IGFuZCByZXNwb25zZSAtXG4gKiBvcmRlciBhIG1lYWwsXG4gKiBtb2RpZnkgYSBtZWFsLFxuICogZ2V0IGFsbCBvcmRlcnMsXG4gKi9cbmNvbnN0IE9yZGVyQ29udHJvbGxlciA9IHtcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiByZXRyaWV2ZSBhbmQgcmV0dXJuIGFsbCBvcmRlcnMgZnJvbSBvdXIgZGF0YVxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICogQHJldHVybnMge0FycmF5fSBvcmRlciBvYmplY3QgYXJyYXlcbiAgICovXG4gIGZldGNoQWxsT3JkZXJzKHJlcSwgcmVzKSB7XG4gICAgY29uc3QgYWxsT3JkZXJzID0gT3JkZXJTZXJ2aWNlLmZldGNoQWxsT3JkZXJzKCk7XG4gICAgcmVzcG9uc2Uuc2V0U3VjY2VzcygyMDAsIG51bGwsIGFsbE9yZGVycyk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLnNlbmQocmVzKTtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIG9yZGVyIGEgbWVhbFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICogQHJldHVybnMge29iamVjdH0gYXBpUmVzcG9uc2VcbiAgICovXG4gIG9yZGVyQU1lYWwocmVxLCByZXMpIHtcbiAgICBpZiAoIXJlcS5ib2R5Lm1lYWxJZCB8fCAhcmVxLmJvZHkudHlwZSkge1xuICAgICAgcmVzcG9uc2Uuc2V0U3VjY2Vzcyg0MDAsICdBbGwgcGFyYW1ldGVycyBhcmUgcmVxdWlyZWQnLCBudWxsKTtcbiAgICAgIHJldHVybiByZXNwb25zZS5zZW5kKHJlcyk7XG4gICAgfVxuXG4gICAgY29uc3QgeyBtZWFsSWQsIHR5cGUgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKE51bWJlci5pc05hTihOdW1iZXIobWVhbElkKSkpIHtcbiAgICAgIHJlc3BvbnNlLnNldEVycm9yKDQwMCwgJ0ludmFsaWQgbWVhbElkLiBtZWFsSWQgbXVzdCBiZSBhIG51bWJlcicpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLnNlbmQocmVzKTtcbiAgICB9XG5cbiAgICBjb25zdCBvcmRlcmVkTWVhbCA9IE9yZGVyU2VydmljZS5vcmRlckFNZWFsKG1lYWxJZCwgdHlwZSk7XG5cbiAgICBpZiAob3JkZXJlZE1lYWwgPT0gbnVsbCkge1xuICAgICAgcmVzcG9uc2Uuc2V0RXJyb3IoNDA0LCAnVGhpcyBtZWFsIGNhbm5vdCBiZSBmb3VuZCcpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLnNlbmQocmVzKTtcbiAgICB9XG5cbiAgICByZXNwb25zZS5zZXRTdWNjZXNzKDIwMCwgJ1lvdXIgb3JkZXIgaGFzIGJlZW4gcGxhY2VkJywgb3JkZXJlZE1lYWwpO1xuICAgIHJldHVybiByZXNwb25zZS5zZW5kKHJlcyk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiB1cGRhdGUgYW4gb3JkZXIgcmVjb3JkXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBhcGlSZXNwb25zZVxuICAgKi9cbiAgdXBkYXRlQW5PcmRlcihyZXEsIHJlcykge1xuICAgIGNvbnN0IHsgbWVhbElkLCB0eXBlIH0gPSByZXEuYm9keTtcbiAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xuXG4gICAgaWYgKE51bWJlci5pc05hTihOdW1iZXIoaWQpKSB8fCBOdW1iZXIuaXNOYU4oTnVtYmVyKG1lYWxJZCkpKSB7XG4gICAgICByZXNwb25zZS5zZXRFcnJvcig0MDAsIFwiSW52YWxpZCBJRC4gSUQncyBtdXN0IGJlIGEgbnVtYmVyXCIpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLnNlbmQocmVzKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVPcmRlciA9IE9yZGVyU2VydmljZS51cGRhdGVBbk9yZGVyKGlkLCBtZWFsSWQsIHR5cGUpO1xuXG4gICAgaWYgKHVwZGF0ZU9yZGVyID09IG51bGwpIHtcbiAgICAgIHJlc3BvbnNlLnNldEVycm9yKDQwMCwgYE9yZGVyIHdpdGggaWQgJHtpZH0gb3IgTWVhbCB3aXRoIGlkICR7bWVhbElkfSBjYW5ub3QgYmUgZm91bmRgKTtcbiAgICAgIHJldHVybiByZXNwb25zZS5zZW5kKHJlcyk7XG4gICAgfVxuICAgIHJlc3BvbnNlLnNldFN1Y2Nlc3MoMjAxLCAnT3JkZXIgd2FzIHN1Y2Nlc3NmdWxseSB1cGRhdGVkJywgdXBkYXRlT3JkZXIpO1xuICAgIHJldHVybiByZXNwb25zZS5zZW5kKHJlcyk7XG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBPcmRlckNvbnRyb2xsZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "order.controller.js"
      ],
      "names": [
        "response",
        "ResponseGenerator",
        "OrderController",
        "fetchAllOrders",
        "req",
        "res",
        "allOrders",
        "OrderService",
        "setSuccess",
        "send",
        "orderAMeal",
        "body",
        "mealId",
        "type",
        "Number",
        "isNaN",
        "setError",
        "orderedMeal",
        "updateAnOrder",
        "id",
        "params",
        "updateOrder"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAG,IAAIC,0BAAJ,EAAjB;AACA;;;;;;;AAMA,IAAMC,eAAe,GAAG;AACtB;;;;;;AAMAC,EAAAA,cAPsB,0BAOPC,GAPO,EAOFC,GAPE,EAOG;AACvB,QAAMC,SAAS,GAAGC,eAAaJ,cAAb,EAAlB;;AACAH,IAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,IAAzB,EAA+BF,SAA/B;AACA,WAAON,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD,GAXqB;;AAatB;;;;;;AAMAK,EAAAA,UAnBsB,sBAmBXN,GAnBW,EAmBNC,GAnBM,EAmBD;AACnB,QAAI,CAACD,GAAG,CAACO,IAAJ,CAASC,MAAV,IAAoB,CAACR,GAAG,CAACO,IAAJ,CAASE,IAAlC,EAAwC;AACtCb,MAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,6BAAzB,EAAwD,IAAxD;AACA,aAAOR,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAJkB,oBAMMD,GAAG,CAACO,IANV;AAAA,QAMXC,MANW,aAMXA,MANW;AAAA,QAMHC,IANG,aAMHA,IANG;;AAQnB,QAAIC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,MAAD,CAAnB,CAAJ,EAAkC;AAChCZ,MAAAA,QAAQ,CAACgB,QAAT,CAAkB,GAAlB,EAAuB,yCAAvB;AACA,aAAOhB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAED,QAAMY,WAAW,GAAGV,eAAaG,UAAb,CAAwBE,MAAxB,EAAgCC,IAAhC,CAApB;;AAEA,QAAII,WAAW,IAAI,IAAnB,EAAyB;AACvBjB,MAAAA,QAAQ,CAACgB,QAAT,CAAkB,GAAlB,EAAuB,2BAAvB;AACA,aAAOhB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAEDL,IAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,4BAAzB,EAAuDS,WAAvD;AACA,WAAOjB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD,GAzCqB;;AA2CtB;;;;;;AAMAa,EAAAA,aAjDsB,yBAiDRd,GAjDQ,EAiDHC,GAjDG,EAiDE;AAAA,qBACGD,GAAG,CAACO,IADP;AAAA,QACdC,MADc,cACdA,MADc;AAAA,QACNC,IADM,cACNA,IADM;AAAA,QAEdM,EAFc,GAEPf,GAAG,CAACgB,MAFG,CAEdD,EAFc;;AAItB,QAAIL,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACK,EAAD,CAAnB,KAA4BL,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACF,MAAD,CAAnB,CAAhC,EAA8D;AAC5DZ,MAAAA,QAAQ,CAACgB,QAAT,CAAkB,GAAlB,EAAuB,mCAAvB;AACA,aAAOhB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AAED,QAAMgB,WAAW,GAAGd,eAAaW,aAAb,CAA2BC,EAA3B,EAA+BP,MAA/B,EAAuCC,IAAvC,CAApB;;AAEA,QAAIQ,WAAW,IAAI,IAAnB,EAAyB;AACvBrB,MAAAA,QAAQ,CAACgB,QAAT,CAAkB,GAAlB,0BAAwCG,EAAxC,8BAA8DP,MAA9D;AACA,aAAOZ,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;;AACDL,IAAAA,QAAQ,CAACQ,UAAT,CAAoB,GAApB,EAAyB,gCAAzB,EAA2Da,WAA3D;AACA,WAAOrB,QAAQ,CAACS,IAAT,CAAcJ,GAAd,CAAP;AACD;AAlEqB,CAAxB;eAqEeH,e",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "sourcesContent": [
        "import OrderService from '../services/order.service';\nimport ResponseGenerator from '../utils/ResponseGenerator';\n\nconst response = new ResponseGenerator();\n/**\n * order controller performs controls  request and response -\n * order a meal,\n * modify a meal,\n * get all orders,\n */\nconst OrderController = {\n  /**\n   * @description retrieve and return all orders from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} order object array\n   */\n  fetchAllOrders(req, res) {\n    const allOrders = OrderService.fetchAllOrders();\n    response.setSuccess(200, null, allOrders);\n    return response.send(res);\n  },\n\n  /**\n   * @description order a meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  orderAMeal(req, res) {\n    if (!req.body.mealId || !req.body.type) {\n      response.setSuccess(400, 'All parameters are required', null);\n      return response.send(res);\n    }\n\n    const { mealId, type } = req.body;\n\n    if (Number.isNaN(Number(mealId))) {\n      response.setError(400, 'Invalid mealId. mealId must be a number');\n      return response.send(res);\n    }\n\n    const orderedMeal = OrderService.orderAMeal(mealId, type);\n\n    if (orderedMeal == null) {\n      response.setError(404, 'This meal cannot be found');\n      return response.send(res);\n    }\n\n    response.setSuccess(200, 'Your order has been placed', orderedMeal);\n    return response.send(res);\n  },\n\n  /**\n   * @description update an order record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAnOrder(req, res) {\n    const { mealId, type } = req.body;\n    const { id } = req.params;\n\n    if (Number.isNaN(Number(id)) || Number.isNaN(Number(mealId))) {\n      response.setError(400, \"Invalid ID. ID's must be a number\");\n      return response.send(res);\n    }\n\n    const updateOrder = OrderService.updateAnOrder(id, mealId, type);\n\n    if (updateOrder == null) {\n      response.setError(400, `Order with id ${id} or Meal with id ${mealId} cannot be found`);\n      return response.send(res);\n    }\n    response.setSuccess(201, 'Order was successfully updated', updateOrder);\n    return response.send(res);\n  },\n};\n\nexport default OrderController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550788137787
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
        "sourceFileName": "order.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dummyData = _interopRequireDefault(require(\"../utils/dummyData\"));\n\nvar _order = _interopRequireDefault(require(\"../models/order.model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * order services performs all action related to order-\n * order a meal, modify an order, get all orders\n */\nvar OrderService = {\n  /**\n   * @description Retrieve and return all orders from our dummyy data\n   * @returns {Array} order object array\n   */\n  fetchAllOrders: function fetchAllOrders() {\n    return _dummyData.default.orders.map(function (order) {\n      var newOrder = new _order.default();\n      newOrder.id = order.id;\n      newOrder.type = order.type;\n      newOrder.meal = order.meal;\n      return newOrder;\n    });\n  },\n\n  /**\n   * @description Order a meal\n   * @returns {Array} order object array\n   */\n  orderAMeal: function orderAMeal(id, type) {\n    var foundMeal = _dummyData.default.menu.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      var orderLength = _dummyData.default.orders.length;\n      var lastId = _dummyData.default.orders[orderLength - 1].id;\n      var newId = lastId + 1;\n      var newOrder = new _order.default();\n      newOrder.id = newId;\n      newOrder.type = type;\n      newOrder.meal = foundMeal;\n\n      _dummyData.default.orders.push(newOrder);\n\n      return newOrder;\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Updates an existing order with a new order object\n   * @param { int } id\n   * @param {object} updatedOrder\n   * @returns {object} updated order\n   */\n  updateAnOrder: function updateAnOrder(orderId, mealId, type) {\n    var foundOrder = _dummyData.default.orders.find(function (order) {\n      return order.id === Number(orderId);\n    });\n\n    var newMeal = _dummyData.default.menu.find(function (meal) {\n      return meal.id === Number(mealId);\n    });\n\n    if (foundOrder && newMeal) {\n      foundOrder.type = type;\n      foundOrder.meal = newMeal;\n      return foundOrder;\n    }\n\n    return null;\n  }\n};\nvar _default = OrderService;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnNlcnZpY2UuanMiXSwibmFtZXMiOlsiT3JkZXJTZXJ2aWNlIiwiZmV0Y2hBbGxPcmRlcnMiLCJkdW1teURhdGEiLCJvcmRlcnMiLCJtYXAiLCJvcmRlciIsIm5ld09yZGVyIiwiT3JkZXIiLCJpZCIsInR5cGUiLCJtZWFsIiwib3JkZXJBTWVhbCIsImZvdW5kTWVhbCIsIm1lbnUiLCJmaW5kIiwiTnVtYmVyIiwib3JkZXJMZW5ndGgiLCJsZW5ndGgiLCJsYXN0SWQiLCJuZXdJZCIsInB1c2giLCJ1cGRhdGVBbk9yZGVyIiwib3JkZXJJZCIsIm1lYWxJZCIsImZvdW5kT3JkZXIiLCJuZXdNZWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTs7OztBQUlBLElBQU1BLFlBQVksR0FBRztBQUNuQjs7OztBQUlBQyxFQUFBQSxjQUxtQiw0QkFLRjtBQUNmLFdBQU9DLG1CQUFVQyxNQUFWLENBQWlCQyxHQUFqQixDQUFxQixVQUFDQyxLQUFELEVBQVc7QUFDckMsVUFBTUMsUUFBUSxHQUFHLElBQUlDLGNBQUosRUFBakI7QUFDQUQsTUFBQUEsUUFBUSxDQUFDRSxFQUFULEdBQWNILEtBQUssQ0FBQ0csRUFBcEI7QUFDQUYsTUFBQUEsUUFBUSxDQUFDRyxJQUFULEdBQWdCSixLQUFLLENBQUNJLElBQXRCO0FBQ0FILE1BQUFBLFFBQVEsQ0FBQ0ksSUFBVCxHQUFnQkwsS0FBSyxDQUFDSyxJQUF0QjtBQUNBLGFBQU9KLFFBQVA7QUFDRCxLQU5NLENBQVA7QUFPRCxHQWJrQjs7QUFlbkI7Ozs7QUFJQUssRUFBQUEsVUFuQm1CLHNCQW1CUkgsRUFuQlEsRUFtQkpDLElBbkJJLEVBbUJFO0FBQ25CLFFBQU1HLFNBQVMsR0FBR1YsbUJBQVVXLElBQVYsQ0FBZUMsSUFBZixDQUFvQixVQUFBSixJQUFJO0FBQUEsYUFBSUEsSUFBSSxDQUFDRixFQUFMLEtBQVlPLE1BQU0sQ0FBQ1AsRUFBRCxDQUF0QjtBQUFBLEtBQXhCLENBQWxCOztBQUVBLFFBQUlJLFNBQUosRUFBZTtBQUNiLFVBQU1JLFdBQVcsR0FBR2QsbUJBQVVDLE1BQVYsQ0FBaUJjLE1BQXJDO0FBQ0EsVUFBTUMsTUFBTSxHQUFHaEIsbUJBQVVDLE1BQVYsQ0FBaUJhLFdBQVcsR0FBRyxDQUEvQixFQUFrQ1IsRUFBakQ7QUFDQSxVQUFNVyxLQUFLLEdBQUdELE1BQU0sR0FBRyxDQUF2QjtBQUVBLFVBQU1aLFFBQVEsR0FBRyxJQUFJQyxjQUFKLEVBQWpCO0FBQ0FELE1BQUFBLFFBQVEsQ0FBQ0UsRUFBVCxHQUFjVyxLQUFkO0FBQ0FiLE1BQUFBLFFBQVEsQ0FBQ0csSUFBVCxHQUFnQkEsSUFBaEI7QUFDQUgsTUFBQUEsUUFBUSxDQUFDSSxJQUFULEdBQWdCRSxTQUFoQjs7QUFDQVYseUJBQVVDLE1BQVYsQ0FBaUJpQixJQUFqQixDQUFzQmQsUUFBdEI7O0FBRUEsYUFBT0EsUUFBUDtBQUNEOztBQUVELFdBQU9NLFNBQVA7QUFDRCxHQXJDa0I7O0FBdUNuQjs7Ozs7O0FBTUFTLEVBQUFBLGFBN0NtQix5QkE2Q0xDLE9BN0NLLEVBNkNJQyxNQTdDSixFQTZDWWQsSUE3Q1osRUE2Q2tCO0FBQ25DLFFBQU1lLFVBQVUsR0FBR3RCLG1CQUFVQyxNQUFWLENBQWlCVyxJQUFqQixDQUFzQixVQUFBVCxLQUFLO0FBQUEsYUFBSUEsS0FBSyxDQUFDRyxFQUFOLEtBQWFPLE1BQU0sQ0FBQ08sT0FBRCxDQUF2QjtBQUFBLEtBQTNCLENBQW5COztBQUNBLFFBQU1HLE9BQU8sR0FBR3ZCLG1CQUFVVyxJQUFWLENBQWVDLElBQWYsQ0FBb0IsVUFBQUosSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0YsRUFBTCxLQUFZTyxNQUFNLENBQUNRLE1BQUQsQ0FBdEI7QUFBQSxLQUF4QixDQUFoQjs7QUFFQSxRQUFJQyxVQUFVLElBQUlDLE9BQWxCLEVBQTJCO0FBQ3pCRCxNQUFBQSxVQUFVLENBQUNmLElBQVgsR0FBa0JBLElBQWxCO0FBQ0FlLE1BQUFBLFVBQVUsQ0FBQ2QsSUFBWCxHQUFrQmUsT0FBbEI7QUFDQSxhQUFPRCxVQUFQO0FBQ0Q7O0FBQ0QsV0FBTyxJQUFQO0FBQ0Q7QUF2RGtCLENBQXJCO2VBMERleEIsWSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZHVtbXlEYXRhIGZyb20gJy4uL3V0aWxzL2R1bW15RGF0YSc7XG5pbXBvcnQgT3JkZXIgZnJvbSAnLi4vbW9kZWxzL29yZGVyLm1vZGVsJztcblxuLyoqXG4gKiBvcmRlciBzZXJ2aWNlcyBwZXJmb3JtcyBhbGwgYWN0aW9uIHJlbGF0ZWQgdG8gb3JkZXItXG4gKiBvcmRlciBhIG1lYWwsIG1vZGlmeSBhbiBvcmRlciwgZ2V0IGFsbCBvcmRlcnNcbiAqL1xuY29uc3QgT3JkZXJTZXJ2aWNlID0ge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFJldHJpZXZlIGFuZCByZXR1cm4gYWxsIG9yZGVycyBmcm9tIG91ciBkdW1teXkgZGF0YVxuICAgKiBAcmV0dXJucyB7QXJyYXl9IG9yZGVyIG9iamVjdCBhcnJheVxuICAgKi9cbiAgZmV0Y2hBbGxPcmRlcnMoKSB7XG4gICAgcmV0dXJuIGR1bW15RGF0YS5vcmRlcnMubWFwKChvcmRlcikgPT4ge1xuICAgICAgY29uc3QgbmV3T3JkZXIgPSBuZXcgT3JkZXIoKTtcbiAgICAgIG5ld09yZGVyLmlkID0gb3JkZXIuaWQ7XG4gICAgICBuZXdPcmRlci50eXBlID0gb3JkZXIudHlwZTtcbiAgICAgIG5ld09yZGVyLm1lYWwgPSBvcmRlci5tZWFsO1xuICAgICAgcmV0dXJuIG5ld09yZGVyO1xuICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gT3JkZXIgYSBtZWFsXG4gICAqIEByZXR1cm5zIHtBcnJheX0gb3JkZXIgb2JqZWN0IGFycmF5XG4gICAqL1xuICBvcmRlckFNZWFsKGlkLCB0eXBlKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lbnUuZmluZChtZWFsID0+IG1lYWwuaWQgPT09IE51bWJlcihpZCkpO1xuXG4gICAgaWYgKGZvdW5kTWVhbCkge1xuICAgICAgY29uc3Qgb3JkZXJMZW5ndGggPSBkdW1teURhdGEub3JkZXJzLmxlbmd0aDtcbiAgICAgIGNvbnN0IGxhc3RJZCA9IGR1bW15RGF0YS5vcmRlcnNbb3JkZXJMZW5ndGggLSAxXS5pZDtcbiAgICAgIGNvbnN0IG5ld0lkID0gbGFzdElkICsgMTtcblxuICAgICAgY29uc3QgbmV3T3JkZXIgPSBuZXcgT3JkZXIoKTtcbiAgICAgIG5ld09yZGVyLmlkID0gbmV3SWQ7XG4gICAgICBuZXdPcmRlci50eXBlID0gdHlwZTtcbiAgICAgIG5ld09yZGVyLm1lYWwgPSBmb3VuZE1lYWw7XG4gICAgICBkdW1teURhdGEub3JkZXJzLnB1c2gobmV3T3JkZXIpO1xuXG4gICAgICByZXR1cm4gbmV3T3JkZXI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZvdW5kTWVhbDtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFVwZGF0ZXMgYW4gZXhpc3Rpbmcgb3JkZXIgd2l0aCBhIG5ldyBvcmRlciBvYmplY3RcbiAgICogQHBhcmFtIHsgaW50IH0gaWRcbiAgICogQHBhcmFtIHtvYmplY3R9IHVwZGF0ZWRPcmRlclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSB1cGRhdGVkIG9yZGVyXG4gICAqL1xuICB1cGRhdGVBbk9yZGVyKG9yZGVySWQsIG1lYWxJZCwgdHlwZSkge1xuICAgIGNvbnN0IGZvdW5kT3JkZXIgPSBkdW1teURhdGEub3JkZXJzLmZpbmQob3JkZXIgPT4gb3JkZXIuaWQgPT09IE51bWJlcihvcmRlcklkKSk7XG4gICAgY29uc3QgbmV3TWVhbCA9IGR1bW15RGF0YS5tZW51LmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIobWVhbElkKSk7XG5cbiAgICBpZiAoZm91bmRPcmRlciAmJiBuZXdNZWFsKSB7XG4gICAgICBmb3VuZE9yZGVyLnR5cGUgPSB0eXBlO1xuICAgICAgZm91bmRPcmRlci5tZWFsID0gbmV3TWVhbDtcbiAgICAgIHJldHVybiBmb3VuZE9yZGVyO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9yZGVyU2VydmljZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.service.js"
      ],
      "names": [
        "OrderService",
        "fetchAllOrders",
        "dummyData",
        "orders",
        "map",
        "order",
        "newOrder",
        "Order",
        "id",
        "type",
        "meal",
        "orderAMeal",
        "foundMeal",
        "menu",
        "find",
        "Number",
        "orderLength",
        "length",
        "lastId",
        "newId",
        "push",
        "updateAnOrder",
        "orderId",
        "mealId",
        "foundOrder",
        "newMeal"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;;AAIA,IAAMA,YAAY,GAAG;AACnB;;;;AAIAC,EAAAA,cALmB,4BAKF;AACf,WAAOC,mBAAUC,MAAV,CAAiBC,GAAjB,CAAqB,UAACC,KAAD,EAAW;AACrC,UAAMC,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,EAAT,GAAcH,KAAK,CAACG,EAApB;AACAF,MAAAA,QAAQ,CAACG,IAAT,GAAgBJ,KAAK,CAACI,IAAtB;AACAH,MAAAA,QAAQ,CAACI,IAAT,GAAgBL,KAAK,CAACK,IAAtB;AACA,aAAOJ,QAAP;AACD,KANM,CAAP;AAOD,GAbkB;;AAenB;;;;AAIAK,EAAAA,UAnBmB,sBAmBRH,EAnBQ,EAmBJC,IAnBI,EAmBE;AACnB,QAAMG,SAAS,GAAGV,mBAAUW,IAAV,CAAeC,IAAf,CAAoB,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACF,EAAL,KAAYO,MAAM,CAACP,EAAD,CAAtB;AAAA,KAAxB,CAAlB;;AAEA,QAAII,SAAJ,EAAe;AACb,UAAMI,WAAW,GAAGd,mBAAUC,MAAV,CAAiBc,MAArC;AACA,UAAMC,MAAM,GAAGhB,mBAAUC,MAAV,CAAiBa,WAAW,GAAG,CAA/B,EAAkCR,EAAjD;AACA,UAAMW,KAAK,GAAGD,MAAM,GAAG,CAAvB;AAEA,UAAMZ,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,EAAT,GAAcW,KAAd;AACAb,MAAAA,QAAQ,CAACG,IAAT,GAAgBA,IAAhB;AACAH,MAAAA,QAAQ,CAACI,IAAT,GAAgBE,SAAhB;;AACAV,yBAAUC,MAAV,CAAiBiB,IAAjB,CAAsBd,QAAtB;;AAEA,aAAOA,QAAP;AACD;;AAED,WAAOM,SAAP;AACD,GArCkB;;AAuCnB;;;;;;AAMAS,EAAAA,aA7CmB,yBA6CLC,OA7CK,EA6CIC,MA7CJ,EA6CYd,IA7CZ,EA6CkB;AACnC,QAAMe,UAAU,GAAGtB,mBAAUC,MAAV,CAAiBW,IAAjB,CAAsB,UAAAT,KAAK;AAAA,aAAIA,KAAK,CAACG,EAAN,KAAaO,MAAM,CAACO,OAAD,CAAvB;AAAA,KAA3B,CAAnB;;AACA,QAAMG,OAAO,GAAGvB,mBAAUW,IAAV,CAAeC,IAAf,CAAoB,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACF,EAAL,KAAYO,MAAM,CAACQ,MAAD,CAAtB;AAAA,KAAxB,CAAhB;;AAEA,QAAIC,UAAU,IAAIC,OAAlB,EAA2B;AACzBD,MAAAA,UAAU,CAACf,IAAX,GAAkBA,IAAlB;AACAe,MAAAA,UAAU,CAACd,IAAX,GAAkBe,OAAlB;AACA,aAAOD,UAAP;AACD;;AACD,WAAO,IAAP;AACD;AAvDkB,CAArB;eA0DexB,Y",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "sourcesContent": [
        "import dummyData from '../utils/dummyData';\nimport Order from '../models/order.model';\n\n/**\n * order services performs all action related to order-\n * order a meal, modify an order, get all orders\n */\nconst OrderService = {\n  /**\n   * @description Retrieve and return all orders from our dummyy data\n   * @returns {Array} order object array\n   */\n  fetchAllOrders() {\n    return dummyData.orders.map((order) => {\n      const newOrder = new Order();\n      newOrder.id = order.id;\n      newOrder.type = order.type;\n      newOrder.meal = order.meal;\n      return newOrder;\n    });\n  },\n\n  /**\n   * @description Order a meal\n   * @returns {Array} order object array\n   */\n  orderAMeal(id, type) {\n    const foundMeal = dummyData.menu.find(meal => meal.id === Number(id));\n\n    if (foundMeal) {\n      const orderLength = dummyData.orders.length;\n      const lastId = dummyData.orders[orderLength - 1].id;\n      const newId = lastId + 1;\n\n      const newOrder = new Order();\n      newOrder.id = newId;\n      newOrder.type = type;\n      newOrder.meal = foundMeal;\n      dummyData.orders.push(newOrder);\n\n      return newOrder;\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Updates an existing order with a new order object\n   * @param { int } id\n   * @param {object} updatedOrder\n   * @returns {object} updated order\n   */\n  updateAnOrder(orderId, mealId, type) {\n    const foundOrder = dummyData.orders.find(order => order.id === Number(orderId));\n    const newMeal = dummyData.menu.find(meal => meal.id === Number(mealId));\n\n    if (foundOrder && newMeal) {\n      foundOrder.type = type;\n      foundOrder.meal = newMeal;\n      return foundOrder;\n    }\n    return null;\n  },\n};\n\nexport default OrderService;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550570550443
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
        "sourceFileName": "order.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Order = function Order() {\n  _classCallCheck(this, Order);\n\n  this.id = null;\n  this.type = null;\n  this.meal = null;\n};\n\nexports.default = Order;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk9yZGVyIiwiaWQiLCJ0eXBlIiwibWVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQXFCQSxLLEdBQ25CLGlCQUFjO0FBQUE7O0FBQ1osT0FBS0MsRUFBTCxHQUFVLElBQVY7QUFDQSxPQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNBLE9BQUtDLElBQUwsR0FBWSxJQUFaO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3JkZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmlkID0gbnVsbDtcbiAgICB0aGlzLnR5cGUgPSBudWxsO1xuICAgIHRoaXMubWVhbCA9IG51bGw7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.model.js"
      ],
      "names": [
        "Order",
        "id",
        "type",
        "meal"
      ],
      "mappings": ";;;;;;;;;IAAqBA,K,GACnB,iBAAc;AAAA;;AACZ,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACD,C",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "sourcesContent": [
        "export default class Order {\n  constructor() {\n    this.id = null;\n    this.type = null;\n    this.meal = null;\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550570550438
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
        "sourceFileName": "menu.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _menu = _interopRequireDefault(require(\"../controllers/menu.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _menu.default.fetchMenu);\nrouter.post('/', _menu.default.setUpMenu);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUucm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiTWVudUNvbnRyb2xsZXIiLCJmZXRjaE1lbnUiLCJwb3N0Iiwic2V0VXBNZW51Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsY0FBZUMsU0FBL0I7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQkYsY0FBZUcsU0FBaEM7ZUFFZUwsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgTWVudUNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvbWVudS5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBNZW51Q29udHJvbGxlci5mZXRjaE1lbnUpO1xucm91dGVyLnBvc3QoJy8nLCBNZW51Q29udHJvbGxlci5zZXRVcE1lbnUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "menu.route.js"
      ],
      "names": [
        "router",
        "get",
        "MenuController",
        "fetchMenu",
        "post",
        "setUpMenu"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,cAAeC,SAA/B;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBF,cAAeG,SAAhC;eAEeL,M",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "sourcesContent": [
        "import { Router } from 'express';\nimport MenuController from '../controllers/menu.controller';\n\nconst router = Router();\n\nrouter.get('/', MenuController.fetchMenu);\nrouter.post('/', MenuController.setUpMenu);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550491061937
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
        "sourceFileName": "menu.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _menu = _interopRequireDefault(require(\"../services/menu.service\"));\n\nvar _ResponseGenerator = _interopRequireDefault(require(\"../utils/ResponseGenerator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar response = new _ResponseGenerator.default();\n/**\n * menu controller performs controls  request and response -\n * fetching today's menu,\n * setup menu for today,\n */\n\nvar MenuController = {\n  /**\n   * @description retrieve and return menu for the day\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} menu object array\n   */\n  fetchMenu: function fetchMenu(req, res) {\n    var allMenu = _menu.default.fetchMenu();\n\n    var menuKeys = Object.keys(allMenu);\n\n    if (menuKeys.length === 0) {\n      response.setSuccess(200, 'Menu list for today is empty', null);\n    } else {\n      response.setSuccess(200, null, allMenu);\n    }\n\n    return response.send(res);\n  },\n\n  /**\n   * @description add a meal to today menu\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  setUpMenu: function setUpMenu(req, res) {\n    var id = req.body.id;\n\n    var addMeal = _menu.default.setUpMenu(id);\n\n    if (!id) {\n      response.setError(400, 'meal id is required');\n    } else if (Number.isNaN(Number(id))) {\n      response.setError(400, 'Invalid ID. ID must be a number');\n    } else if (addMeal == null) {\n      response.setError(404, \"Meal with id \".concat(id, \" cannot be found\"));\n    } else if (typeof addMeal === 'string') {\n      var msg = addMeal;\n      response.setSuccess(200, msg, null);\n    } else {\n      response.setSuccess(201, 'Meal successfully added to Menu List', addMeal);\n    }\n\n    return response.send(res);\n  }\n};\nvar _default = MenuController;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJyZXNwb25zZSIsIlJlc3BvbnNlR2VuZXJhdG9yIiwiTWVudUNvbnRyb2xsZXIiLCJmZXRjaE1lbnUiLCJyZXEiLCJyZXMiLCJhbGxNZW51IiwiTWVudVNlcnZpY2UiLCJtZW51S2V5cyIsIk9iamVjdCIsImtleXMiLCJsZW5ndGgiLCJzZXRTdWNjZXNzIiwic2VuZCIsInNldFVwTWVudSIsImlkIiwiYm9keSIsImFkZE1lYWwiLCJzZXRFcnJvciIsIk51bWJlciIsImlzTmFOIiwibXNnIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxRQUFRLEdBQUcsSUFBSUMsMEJBQUosRUFBakI7QUFFQTs7Ozs7O0FBS0EsSUFBTUMsY0FBYyxHQUFHO0FBQ3JCOzs7Ozs7QUFNQUMsRUFBQUEsU0FQcUIscUJBT1hDLEdBUFcsRUFPTkMsR0FQTSxFQU9EO0FBQ2xCLFFBQU1DLE9BQU8sR0FBR0MsY0FBWUosU0FBWixFQUFoQjs7QUFDQSxRQUFNSyxRQUFRLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixPQUFaLENBQWpCOztBQUVBLFFBQUlFLFFBQVEsQ0FBQ0csTUFBVCxLQUFvQixDQUF4QixFQUEyQjtBQUN6QlgsTUFBQUEsUUFBUSxDQUFDWSxVQUFULENBQW9CLEdBQXBCLEVBQXlCLDhCQUF6QixFQUF5RCxJQUF6RDtBQUNELEtBRkQsTUFFTztBQUNMWixNQUFBQSxRQUFRLENBQUNZLFVBQVQsQ0FBb0IsR0FBcEIsRUFBeUIsSUFBekIsRUFBK0JOLE9BQS9CO0FBQ0Q7O0FBQ0QsV0FBT04sUUFBUSxDQUFDYSxJQUFULENBQWNSLEdBQWQsQ0FBUDtBQUNELEdBakJvQjs7QUFtQnJCOzs7Ozs7QUFNQVMsRUFBQUEsU0F6QnFCLHFCQXlCWFYsR0F6QlcsRUF5Qk5DLEdBekJNLEVBeUJEO0FBQUEsUUFDVlUsRUFEVSxHQUNIWCxHQUFHLENBQUNZLElBREQsQ0FDVkQsRUFEVTs7QUFFbEIsUUFBTUUsT0FBTyxHQUFHVixjQUFZTyxTQUFaLENBQXNCQyxFQUF0QixDQUFoQjs7QUFFQSxRQUFJLENBQUNBLEVBQUwsRUFBUztBQUNQZixNQUFBQSxRQUFRLENBQUNrQixRQUFULENBQWtCLEdBQWxCLEVBQXVCLHFCQUF2QjtBQUNELEtBRkQsTUFFTyxJQUFJQyxNQUFNLENBQUNDLEtBQVAsQ0FBYUQsTUFBTSxDQUFDSixFQUFELENBQW5CLENBQUosRUFBOEI7QUFDbkNmLE1BQUFBLFFBQVEsQ0FBQ2tCLFFBQVQsQ0FBa0IsR0FBbEIsRUFBdUIsaUNBQXZCO0FBQ0QsS0FGTSxNQUVBLElBQUlELE9BQU8sSUFBSSxJQUFmLEVBQXFCO0FBQzFCakIsTUFBQUEsUUFBUSxDQUFDa0IsUUFBVCxDQUFrQixHQUFsQix5QkFBdUNILEVBQXZDO0FBQ0QsS0FGTSxNQUVBLElBQUksT0FBT0UsT0FBUCxLQUFtQixRQUF2QixFQUFpQztBQUN0QyxVQUFNSSxHQUFHLEdBQUdKLE9BQVo7QUFDQWpCLE1BQUFBLFFBQVEsQ0FBQ1ksVUFBVCxDQUFvQixHQUFwQixFQUF5QlMsR0FBekIsRUFBOEIsSUFBOUI7QUFDRCxLQUhNLE1BR0E7QUFDTHJCLE1BQUFBLFFBQVEsQ0FBQ1ksVUFBVCxDQUFvQixHQUFwQixFQUF5QixzQ0FBekIsRUFBaUVLLE9BQWpFO0FBQ0Q7O0FBQ0QsV0FBT2pCLFFBQVEsQ0FBQ2EsSUFBVCxDQUFjUixHQUFkLENBQVA7QUFDRDtBQTFDb0IsQ0FBdkI7ZUE2Q2VILGMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NvZGVwcmVuZXVyL1dlYnN0b3JtUHJvamVjdHMvQmV0YUNob3AvQVBJL3YxL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1lbnVTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL21lbnUuc2VydmljZSc7XG5pbXBvcnQgUmVzcG9uc2VHZW5lcmF0b3IgZnJvbSAnLi4vdXRpbHMvUmVzcG9uc2VHZW5lcmF0b3InO1xuXG5jb25zdCByZXNwb25zZSA9IG5ldyBSZXNwb25zZUdlbmVyYXRvcigpO1xuXG4vKipcbiAqIG1lbnUgY29udHJvbGxlciBwZXJmb3JtcyBjb250cm9scyAgcmVxdWVzdCBhbmQgcmVzcG9uc2UgLVxuICogZmV0Y2hpbmcgdG9kYXkncyBtZW51LFxuICogc2V0dXAgbWVudSBmb3IgdG9kYXksXG4gKi9cbmNvbnN0IE1lbnVDb250cm9sbGVyID0ge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIHJldHJpZXZlIGFuZCByZXR1cm4gbWVudSBmb3IgdGhlIGRheVxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICogQHJldHVybnMge0FycmF5fSBtZW51IG9iamVjdCBhcnJheVxuICAgKi9cbiAgZmV0Y2hNZW51KHJlcSwgcmVzKSB7XG4gICAgY29uc3QgYWxsTWVudSA9IE1lbnVTZXJ2aWNlLmZldGNoTWVudSgpO1xuICAgIGNvbnN0IG1lbnVLZXlzID0gT2JqZWN0LmtleXMoYWxsTWVudSk7XG5cbiAgICBpZiAobWVudUtleXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXNwb25zZS5zZXRTdWNjZXNzKDIwMCwgJ01lbnUgbGlzdCBmb3IgdG9kYXkgaXMgZW1wdHknLCBudWxsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzcG9uc2Uuc2V0U3VjY2VzcygyMDAsIG51bGwsIGFsbE1lbnUpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2Uuc2VuZChyZXMpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gYWRkIGEgbWVhbCB0byB0b2RheSBtZW51XG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBhcGlSZXNwb25zZVxuICAgKi9cbiAgc2V0VXBNZW51KHJlcSwgcmVzKSB7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLmJvZHk7XG4gICAgY29uc3QgYWRkTWVhbCA9IE1lbnVTZXJ2aWNlLnNldFVwTWVudShpZCk7XG5cbiAgICBpZiAoIWlkKSB7XG4gICAgICByZXNwb25zZS5zZXRFcnJvcig0MDAsICdtZWFsIGlkIGlzIHJlcXVpcmVkJyk7XG4gICAgfSBlbHNlIGlmIChOdW1iZXIuaXNOYU4oTnVtYmVyKGlkKSkpIHtcbiAgICAgIHJlc3BvbnNlLnNldEVycm9yKDQwMCwgJ0ludmFsaWQgSUQuIElEIG11c3QgYmUgYSBudW1iZXInKTtcbiAgICB9IGVsc2UgaWYgKGFkZE1lYWwgPT0gbnVsbCkge1xuICAgICAgcmVzcG9uc2Uuc2V0RXJyb3IoNDA0LCBgTWVhbCB3aXRoIGlkICR7aWR9IGNhbm5vdCBiZSBmb3VuZGApO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIGFkZE1lYWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb25zdCBtc2cgPSBhZGRNZWFsO1xuICAgICAgcmVzcG9uc2Uuc2V0U3VjY2VzcygyMDAsIG1zZywgbnVsbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3BvbnNlLnNldFN1Y2Nlc3MoMjAxLCAnTWVhbCBzdWNjZXNzZnVsbHkgYWRkZWQgdG8gTWVudSBMaXN0JywgYWRkTWVhbCk7XG4gICAgfVxuICAgIHJldHVybiByZXNwb25zZS5zZW5kKHJlcyk7XG4gIH0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBNZW51Q29udHJvbGxlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "menu.controller.js"
      ],
      "names": [
        "response",
        "ResponseGenerator",
        "MenuController",
        "fetchMenu",
        "req",
        "res",
        "allMenu",
        "MenuService",
        "menuKeys",
        "Object",
        "keys",
        "length",
        "setSuccess",
        "send",
        "setUpMenu",
        "id",
        "body",
        "addMeal",
        "setError",
        "Number",
        "isNaN",
        "msg"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAG,IAAIC,0BAAJ,EAAjB;AAEA;;;;;;AAKA,IAAMC,cAAc,GAAG;AACrB;;;;;;AAMAC,EAAAA,SAPqB,qBAOXC,GAPW,EAONC,GAPM,EAOD;AAClB,QAAMC,OAAO,GAAGC,cAAYJ,SAAZ,EAAhB;;AACA,QAAMK,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAjB;;AAEA,QAAIE,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzBX,MAAAA,QAAQ,CAACY,UAAT,CAAoB,GAApB,EAAyB,8BAAzB,EAAyD,IAAzD;AACD,KAFD,MAEO;AACLZ,MAAAA,QAAQ,CAACY,UAAT,CAAoB,GAApB,EAAyB,IAAzB,EAA+BN,OAA/B;AACD;;AACD,WAAON,QAAQ,CAACa,IAAT,CAAcR,GAAd,CAAP;AACD,GAjBoB;;AAmBrB;;;;;;AAMAS,EAAAA,SAzBqB,qBAyBXV,GAzBW,EAyBNC,GAzBM,EAyBD;AAAA,QACVU,EADU,GACHX,GAAG,CAACY,IADD,CACVD,EADU;;AAElB,QAAME,OAAO,GAAGV,cAAYO,SAAZ,CAAsBC,EAAtB,CAAhB;;AAEA,QAAI,CAACA,EAAL,EAAS;AACPf,MAAAA,QAAQ,CAACkB,QAAT,CAAkB,GAAlB,EAAuB,qBAAvB;AACD,KAFD,MAEO,IAAIC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACJ,EAAD,CAAnB,CAAJ,EAA8B;AACnCf,MAAAA,QAAQ,CAACkB,QAAT,CAAkB,GAAlB,EAAuB,iCAAvB;AACD,KAFM,MAEA,IAAID,OAAO,IAAI,IAAf,EAAqB;AAC1BjB,MAAAA,QAAQ,CAACkB,QAAT,CAAkB,GAAlB,yBAAuCH,EAAvC;AACD,KAFM,MAEA,IAAI,OAAOE,OAAP,KAAmB,QAAvB,EAAiC;AACtC,UAAMI,GAAG,GAAGJ,OAAZ;AACAjB,MAAAA,QAAQ,CAACY,UAAT,CAAoB,GAApB,EAAyBS,GAAzB,EAA8B,IAA9B;AACD,KAHM,MAGA;AACLrB,MAAAA,QAAQ,CAACY,UAAT,CAAoB,GAApB,EAAyB,sCAAzB,EAAiEK,OAAjE;AACD;;AACD,WAAOjB,QAAQ,CAACa,IAAT,CAAcR,GAAd,CAAP;AACD;AA1CoB,CAAvB;eA6CeH,c",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "sourcesContent": [
        "import MenuService from '../services/menu.service';\nimport ResponseGenerator from '../utils/ResponseGenerator';\n\nconst response = new ResponseGenerator();\n\n/**\n * menu controller performs controls  request and response -\n * fetching today's menu,\n * setup menu for today,\n */\nconst MenuController = {\n  /**\n   * @description retrieve and return menu for the day\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} menu object array\n   */\n  fetchMenu(req, res) {\n    const allMenu = MenuService.fetchMenu();\n    const menuKeys = Object.keys(allMenu);\n\n    if (menuKeys.length === 0) {\n      response.setSuccess(200, 'Menu list for today is empty', null);\n    } else {\n      response.setSuccess(200, null, allMenu);\n    }\n    return response.send(res);\n  },\n\n  /**\n   * @description add a meal to today menu\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  setUpMenu(req, res) {\n    const { id } = req.body;\n    const addMeal = MenuService.setUpMenu(id);\n\n    if (!id) {\n      response.setError(400, 'meal id is required');\n    } else if (Number.isNaN(Number(id))) {\n      response.setError(400, 'Invalid ID. ID must be a number');\n    } else if (addMeal == null) {\n      response.setError(404, `Meal with id ${id} cannot be found`);\n    } else if (typeof addMeal === 'string') {\n      const msg = addMeal;\n      response.setSuccess(200, msg, null);\n    } else {\n      response.setSuccess(201, 'Meal successfully added to Menu List', addMeal);\n    }\n    return response.send(res);\n  },\n};\n\nexport default MenuController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550788137784
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
        "sourceFileName": "menu.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dummyData = _interopRequireDefault(require(\"../utils/dummyData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * menu services performs all action related to menu-\n * fetch menu for the day and setup menu for the day\n */\nvar MenuService = {\n  /**\n   * @description Setup the meal for the day\n   * @returns {Array} menu object array\n   */\n  setUpMenu: function setUpMenu(id) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      foundMeal.available = true; // checks if meal has already been added to menulist\n\n      var isAdded = _dummyData.default.menu.find(function (meal) {\n        return meal.id === Number(id);\n      });\n\n      if (isAdded) {\n        return 'Meal has already been added to menu list';\n      }\n\n      _dummyData.default.menu.push(foundMeal);\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Retrieve and return all menu from our dummyy data\n   * @returns {Array} menu object array\n   */\n  fetchMenu: function fetchMenu() {\n    return _dummyData.default.menu.filter(function (meal) {\n      return meal.available === true;\n    });\n  }\n};\nvar _default = MenuService;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZW51U2VydmljZSIsInNldFVwTWVudSIsImlkIiwiZm91bmRNZWFsIiwiZHVtbXlEYXRhIiwibWVhbHMiLCJmaW5kIiwibWVhbCIsIk51bWJlciIsImF2YWlsYWJsZSIsImlzQWRkZWQiLCJtZW51IiwicHVzaCIsImZldGNoTWVudSIsImZpbHRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7QUFJQSxJQUFNQSxXQUFXLEdBQUc7QUFDbEI7Ozs7QUFJQUMsRUFBQUEsU0FMa0IscUJBS1JDLEVBTFEsRUFLSjtBQUNaLFFBQU1DLFNBQVMsR0FBR0MsbUJBQVVDLEtBQVYsQ0FBZ0JDLElBQWhCLENBQXFCLFVBQUFDLElBQUk7QUFBQSxhQUFJQSxJQUFJLENBQUNMLEVBQUwsS0FBWU0sTUFBTSxDQUFDTixFQUFELENBQXRCO0FBQUEsS0FBekIsQ0FBbEI7O0FBRUEsUUFBSUMsU0FBSixFQUFlO0FBQ2JBLE1BQUFBLFNBQVMsQ0FBQ00sU0FBVixHQUFzQixJQUF0QixDQURhLENBR2I7O0FBQ0EsVUFBTUMsT0FBTyxHQUFHTixtQkFBVU8sSUFBVixDQUFlTCxJQUFmLENBQW9CLFVBQUFDLElBQUk7QUFBQSxlQUFJQSxJQUFJLENBQUNMLEVBQUwsS0FBWU0sTUFBTSxDQUFDTixFQUFELENBQXRCO0FBQUEsT0FBeEIsQ0FBaEI7O0FBRUEsVUFBSVEsT0FBSixFQUFhO0FBQ1gsZUFBTywwQ0FBUDtBQUNEOztBQUNETix5QkFBVU8sSUFBVixDQUFlQyxJQUFmLENBQW9CVCxTQUFwQjtBQUNEOztBQUVELFdBQU9BLFNBQVA7QUFDRCxHQXJCaUI7O0FBdUJsQjs7OztBQUlBVSxFQUFBQSxTQTNCa0IsdUJBMkJOO0FBQ1YsV0FBT1QsbUJBQVVPLElBQVYsQ0FBZUcsTUFBZixDQUFzQixVQUFBUCxJQUFJO0FBQUEsYUFBSUEsSUFBSSxDQUFDRSxTQUFMLEtBQW1CLElBQXZCO0FBQUEsS0FBMUIsQ0FBUDtBQUNEO0FBN0JpQixDQUFwQjtlQWdDZVQsVyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZHVtbXlEYXRhIGZyb20gJy4uL3V0aWxzL2R1bW15RGF0YSc7XG5cbi8qKlxuICogbWVudSBzZXJ2aWNlcyBwZXJmb3JtcyBhbGwgYWN0aW9uIHJlbGF0ZWQgdG8gbWVudS1cbiAqIGZldGNoIG1lbnUgZm9yIHRoZSBkYXkgYW5kIHNldHVwIG1lbnUgZm9yIHRoZSBkYXlcbiAqL1xuY29uc3QgTWVudVNlcnZpY2UgPSB7XG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gU2V0dXAgdGhlIG1lYWwgZm9yIHRoZSBkYXlcbiAgICogQHJldHVybnMge0FycmF5fSBtZW51IG9iamVjdCBhcnJheVxuICAgKi9cbiAgc2V0VXBNZW51KGlkKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lYWxzLmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIoaWQpKTtcblxuICAgIGlmIChmb3VuZE1lYWwpIHtcbiAgICAgIGZvdW5kTWVhbC5hdmFpbGFibGUgPSB0cnVlO1xuXG4gICAgICAvLyBjaGVja3MgaWYgbWVhbCBoYXMgYWxyZWFkeSBiZWVuIGFkZGVkIHRvIG1lbnVsaXN0XG4gICAgICBjb25zdCBpc0FkZGVkID0gZHVtbXlEYXRhLm1lbnUuZmluZChtZWFsID0+IG1lYWwuaWQgPT09IE51bWJlcihpZCkpO1xuXG4gICAgICBpZiAoaXNBZGRlZCkge1xuICAgICAgICByZXR1cm4gJ01lYWwgaGFzIGFscmVhZHkgYmVlbiBhZGRlZCB0byBtZW51IGxpc3QnO1xuICAgICAgfVxuICAgICAgZHVtbXlEYXRhLm1lbnUucHVzaChmb3VuZE1lYWwpO1xuICAgIH1cblxuICAgIHJldHVybiBmb3VuZE1lYWw7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBSZXRyaWV2ZSBhbmQgcmV0dXJuIGFsbCBtZW51IGZyb20gb3VyIGR1bW15eSBkYXRhXG4gICAqIEByZXR1cm5zIHtBcnJheX0gbWVudSBvYmplY3QgYXJyYXlcbiAgICovXG4gIGZldGNoTWVudSgpIHtcbiAgICByZXR1cm4gZHVtbXlEYXRhLm1lbnUuZmlsdGVyKG1lYWwgPT4gbWVhbC5hdmFpbGFibGUgPT09IHRydWUpO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVudVNlcnZpY2U7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "menu.service.js"
      ],
      "names": [
        "MenuService",
        "setUpMenu",
        "id",
        "foundMeal",
        "dummyData",
        "meals",
        "find",
        "meal",
        "Number",
        "available",
        "isAdded",
        "menu",
        "push",
        "fetchMenu",
        "filter"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;AAIA,IAAMA,WAAW,GAAG;AAClB;;;;AAIAC,EAAAA,SALkB,qBAKRC,EALQ,EAKJ;AACZ,QAAMC,SAAS,GAAGC,mBAAUC,KAAV,CAAgBC,IAAhB,CAAqB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AAEA,QAAIC,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACM,SAAV,GAAsB,IAAtB,CADa,CAGb;;AACA,UAAMC,OAAO,GAAGN,mBAAUO,IAAV,CAAeL,IAAf,CAAoB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CAAtB;AAAA,OAAxB,CAAhB;;AAEA,UAAIQ,OAAJ,EAAa;AACX,eAAO,0CAAP;AACD;;AACDN,yBAAUO,IAAV,CAAeC,IAAf,CAAoBT,SAApB;AACD;;AAED,WAAOA,SAAP;AACD,GArBiB;;AAuBlB;;;;AAIAU,EAAAA,SA3BkB,uBA2BN;AACV,WAAOT,mBAAUO,IAAV,CAAeG,MAAf,CAAsB,UAAAP,IAAI;AAAA,aAAIA,IAAI,CAACE,SAAL,KAAmB,IAAvB;AAAA,KAA1B,CAAP;AACD;AA7BiB,CAApB;eAgCeT,W",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "sourcesContent": [
        "import dummyData from '../utils/dummyData';\n\n/**\n * menu services performs all action related to menu-\n * fetch menu for the day and setup menu for the day\n */\nconst MenuService = {\n  /**\n   * @description Setup the meal for the day\n   * @returns {Array} menu object array\n   */\n  setUpMenu(id) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n\n    if (foundMeal) {\n      foundMeal.available = true;\n\n      // checks if meal has already been added to menulist\n      const isAdded = dummyData.menu.find(meal => meal.id === Number(id));\n\n      if (isAdded) {\n        return 'Meal has already been added to menu list';\n      }\n      dummyData.menu.push(foundMeal);\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Retrieve and return all menu from our dummyy data\n   * @returns {Array} menu object array\n   */\n  fetchMenu() {\n    return dummyData.menu.filter(meal => meal.available === true);\n  },\n};\n\nexport default MenuService;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550570550441
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/menu.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/menu.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/menu.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/menu.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
        "sourceFileName": "menu.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Menu = function Menu() {\n  _classCallCheck(this, Menu);\n\n  this.id = null;\n  this.date = null;\n};\n\nexports.default = Menu;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUubW9kZWwuanMiXSwibmFtZXMiOlsiTWVudSIsImlkIiwiZGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQXFCQSxJLEdBQ25CLGdCQUFjO0FBQUE7O0FBQ1osT0FBS0MsRUFBTCxHQUFVLElBQVY7QUFDQSxPQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNELEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NvZGVwcmVuZXVyL1dlYnN0b3JtUHJvamVjdHMvQmV0YUNob3AvQVBJL3YxL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lbnUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmlkID0gbnVsbDtcbiAgICB0aGlzLmRhdGUgPSBudWxsO1xuICB9XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "menu.model.js"
      ],
      "names": [
        "Menu",
        "id",
        "date"
      ],
      "mappings": ";;;;;;;;;IAAqBA,I,GACnB,gBAAc;AAAA;;AACZ,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,IAAL,GAAY,IAAZ;AACD,C",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "sourcesContent": [
        "export default class Menu {\n  constructor() {\n    this.id = null;\n    this.date = null;\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550484582561
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/order.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
        "sourceFileName": "order.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _order = _interopRequireDefault(require(\"../controllers/order.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _order.default.fetchAllOrders);\nrouter.post('/', _order.default.orderAMeal);\nrouter.put('/:id', _order.default.updateAnOrder);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsIk9yZGVyQ29udHJvbGxlciIsImZldGNoQWxsT3JkZXJzIiwicG9zdCIsIm9yZGVyQU1lYWwiLCJwdXQiLCJ1cGRhdGVBbk9yZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsZUFBZ0JDLGNBQWhDO0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLEdBQVosRUFBaUJGLGVBQWdCRyxVQUFqQztBQUNBTCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxNQUFYLEVBQW1CSixlQUFnQkssYUFBbkM7ZUFFZVAsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgT3JkZXJDb250cm9sbGVyIGZyb20gJy4uL2NvbnRyb2xsZXJzL29yZGVyLmNvbnRyb2xsZXInO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIE9yZGVyQ29udHJvbGxlci5mZXRjaEFsbE9yZGVycyk7XG5yb3V0ZXIucG9zdCgnLycsIE9yZGVyQ29udHJvbGxlci5vcmRlckFNZWFsKTtcbnJvdXRlci5wdXQoJy86aWQnLCBPcmRlckNvbnRyb2xsZXIudXBkYXRlQW5PcmRlcik7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.route.js"
      ],
      "names": [
        "router",
        "get",
        "OrderController",
        "fetchAllOrders",
        "post",
        "orderAMeal",
        "put",
        "updateAnOrder"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,eAAgBC,cAAhC;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBF,eAAgBG,UAAjC;AACAL,MAAM,CAACM,GAAP,CAAW,MAAX,EAAmBJ,eAAgBK,aAAnC;eAEeP,M",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "sourcesContent": [
        "import { Router } from 'express';\nimport OrderController from '../controllers/order.controller';\n\nconst router = Router();\n\nrouter.get('/', OrderController.fetchAllOrders);\nrouter.post('/', OrderController.orderAMeal);\nrouter.put('/:id', OrderController.updateAnOrder);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550487074899
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/order.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
        "sourceFileName": "order.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _order = _interopRequireDefault(require(\"../services/order.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * order controller performs controls  request and response -\n * order a meal,\n * modify a meal,\n * get all orders,\n */\nvar OrderController = {\n  /**\n   * @description retrieve and return all orders from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} order object array\n   */\n  fetchAllOrders: function fetchAllOrders(req, res) {\n    var allOrders = _order.default.fetchAllOrders();\n\n    return res.json({\n      status: 'success',\n      data: allOrders\n    }).status(200);\n  },\n\n  /**\n   * @description order a meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  orderAMeal: function orderAMeal(req, res) {\n    if (!req.body.mealId || !req.body.type) {\n      return res.status(400).send({\n        status: 'error',\n        message: 'All parameters are required'\n      });\n    }\n\n    var _req$body = req.body,\n        mealId = _req$body.mealId,\n        type = _req$body.type;\n\n    if (Number.isNaN(Number(mealId))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid mealId. mealId must be a number'\n      });\n    }\n\n    var orderedMeal = _order.default.orderAMeal(mealId, type);\n\n    if (orderedMeal == null) {\n      return res.status(200).json({\n        status: 'error',\n        message: 'This meal cannot be found'\n      });\n    }\n\n    return res.status(200).json({\n      status: 'success',\n      message: 'Your order has been placed',\n      order: orderedMeal\n    });\n  },\n\n  /**\n   * @description update an order record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAnOrder: function updateAnOrder(req, res) {\n    var _req$body2 = req.body,\n        mealId = _req$body2.mealId,\n        type = _req$body2.type;\n    var id = req.params.id;\n\n    if (Number.isNaN(Number(id)) || Number.isNaN(Number(mealId))) {\n      return res.status(400).json({\n        status: 'error',\n        message: \"Invalid ID. ID's must be a number\"\n      });\n    }\n\n    var updateOrder = _order.default.updateAnOrder(id, mealId, type);\n\n    if (updateOrder == null) {\n      return res.status(400).json({\n        status: 'error',\n        message: \"Order with id \".concat(id, \" or Meal with id \").concat(mealId, \" cannot be found\")\n      });\n    }\n\n    return res.json({\n      status: 'success',\n      message: 'Order was successfully updated',\n      data: updateOrder\n    }).status(201);\n  }\n};\nvar _default = OrderController;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiT3JkZXJDb250cm9sbGVyIiwiZmV0Y2hBbGxPcmRlcnMiLCJyZXEiLCJyZXMiLCJhbGxPcmRlcnMiLCJPcmRlclNlcnZpY2UiLCJqc29uIiwic3RhdHVzIiwiZGF0YSIsIm9yZGVyQU1lYWwiLCJib2R5IiwibWVhbElkIiwidHlwZSIsInNlbmQiLCJtZXNzYWdlIiwiTnVtYmVyIiwiaXNOYU4iLCJvcmRlcmVkTWVhbCIsIm9yZGVyIiwidXBkYXRlQW5PcmRlciIsImlkIiwicGFyYW1zIiwidXBkYXRlT3JkZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7QUFNQSxJQUFNQSxlQUFlLEdBQUc7QUFDdEI7Ozs7OztBQU1BQyxFQUFBQSxjQVBzQiwwQkFPUEMsR0FQTyxFQU9GQyxHQVBFLEVBT0c7QUFDdkIsUUFBTUMsU0FBUyxHQUFHQyxlQUFhSixjQUFiLEVBQWxCOztBQUNBLFdBQU9FLEdBQUcsQ0FDUEcsSUFESSxDQUNDO0FBQ0pDLE1BQUFBLE1BQU0sRUFBRSxTQURKO0FBRUpDLE1BQUFBLElBQUksRUFBRUo7QUFGRixLQURELEVBS0pHLE1BTEksQ0FLRyxHQUxILENBQVA7QUFNRCxHQWZxQjs7QUFpQnRCOzs7Ozs7QUFNQUUsRUFBQUEsVUF2QnNCLHNCQXVCWFAsR0F2QlcsRUF1Qk5DLEdBdkJNLEVBdUJEO0FBQ25CLFFBQUksQ0FBQ0QsR0FBRyxDQUFDUSxJQUFKLENBQVNDLE1BQVYsSUFBb0IsQ0FBQ1QsR0FBRyxDQUFDUSxJQUFKLENBQVNFLElBQWxDLEVBQXdDO0FBQ3RDLGFBQU9ULEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JNLElBQWhCLENBQXFCO0FBQzFCTixRQUFBQSxNQUFNLEVBQUUsT0FEa0I7QUFFMUJPLFFBQUFBLE9BQU8sRUFBRTtBQUZpQixPQUFyQixDQUFQO0FBSUQ7O0FBTmtCLG9CQVFNWixHQUFHLENBQUNRLElBUlY7QUFBQSxRQVFYQyxNQVJXLGFBUVhBLE1BUlc7QUFBQSxRQVFIQyxJQVJHLGFBUUhBLElBUkc7O0FBVW5CLFFBQUlHLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhRCxNQUFNLENBQUNKLE1BQUQsQ0FBbkIsQ0FBSixFQUFrQztBQUNoQyxhQUFPUixHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUMxQkMsUUFBQUEsTUFBTSxFQUFFLE9BRGtCO0FBRTFCTyxRQUFBQSxPQUFPLEVBQUU7QUFGaUIsT0FBckIsQ0FBUDtBQUlEOztBQUVELFFBQU1HLFdBQVcsR0FBR1osZUFBYUksVUFBYixDQUF3QkUsTUFBeEIsRUFBZ0NDLElBQWhDLENBQXBCOztBQUVBLFFBQUlLLFdBQVcsSUFBSSxJQUFuQixFQUF5QjtBQUN2QixhQUFPZCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUMxQkMsUUFBQUEsTUFBTSxFQUFFLE9BRGtCO0FBRTFCTyxRQUFBQSxPQUFPLEVBQUU7QUFGaUIsT0FBckIsQ0FBUDtBQUlEOztBQUVELFdBQU9YLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JELElBQWhCLENBQXFCO0FBQzFCQyxNQUFBQSxNQUFNLEVBQUUsU0FEa0I7QUFFMUJPLE1BQUFBLE9BQU8sRUFBRSw0QkFGaUI7QUFHMUJJLE1BQUFBLEtBQUssRUFBRUQ7QUFIbUIsS0FBckIsQ0FBUDtBQUtELEdBdERxQjs7QUF3RHRCOzs7Ozs7QUFNQUUsRUFBQUEsYUE5RHNCLHlCQThEUmpCLEdBOURRLEVBOERIQyxHQTlERyxFQThERTtBQUFBLHFCQUNHRCxHQUFHLENBQUNRLElBRFA7QUFBQSxRQUNkQyxNQURjLGNBQ2RBLE1BRGM7QUFBQSxRQUNOQyxJQURNLGNBQ05BLElBRE07QUFBQSxRQUVkUSxFQUZjLEdBRVBsQixHQUFHLENBQUNtQixNQUZHLENBRWRELEVBRmM7O0FBSXRCLFFBQUlMLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhRCxNQUFNLENBQUNLLEVBQUQsQ0FBbkIsS0FBNEJMLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhRCxNQUFNLENBQUNKLE1BQUQsQ0FBbkIsQ0FBaEMsRUFBOEQ7QUFDNUQsYUFBT1IsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkQsSUFBaEIsQ0FBcUI7QUFDMUJDLFFBQUFBLE1BQU0sRUFBRSxPQURrQjtBQUUxQk8sUUFBQUEsT0FBTyxFQUFFO0FBRmlCLE9BQXJCLENBQVA7QUFJRDs7QUFFRCxRQUFNUSxXQUFXLEdBQUdqQixlQUFhYyxhQUFiLENBQTJCQyxFQUEzQixFQUErQlQsTUFBL0IsRUFBdUNDLElBQXZDLENBQXBCOztBQUVBLFFBQUlVLFdBQVcsSUFBSSxJQUFuQixFQUF5QjtBQUN2QixhQUFPbkIsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkQsSUFBaEIsQ0FBcUI7QUFDMUJDLFFBQUFBLE1BQU0sRUFBRSxPQURrQjtBQUUxQk8sUUFBQUEsT0FBTywwQkFBbUJNLEVBQW5CLDhCQUF5Q1QsTUFBekM7QUFGbUIsT0FBckIsQ0FBUDtBQUlEOztBQUNELFdBQU9SLEdBQUcsQ0FDUEcsSUFESSxDQUNDO0FBQ0pDLE1BQUFBLE1BQU0sRUFBRSxTQURKO0FBRUpPLE1BQUFBLE9BQU8sRUFBRSxnQ0FGTDtBQUdKTixNQUFBQSxJQUFJLEVBQUVjO0FBSEYsS0FERCxFQU1KZixNQU5JLENBTUcsR0FOSCxDQUFQO0FBT0Q7QUF4RnFCLENBQXhCO2VBMkZlUCxlIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9jb2RlcHJlbmV1ci9XZWJzdG9ybVByb2plY3RzL0JldGFDaG9wL0FQSS92MS9jb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPcmRlclNlcnZpY2UgZnJvbSAnLi4vc2VydmljZXMvb3JkZXIuc2VydmljZSc7XG4vKipcbiAqIG9yZGVyIGNvbnRyb2xsZXIgcGVyZm9ybXMgY29udHJvbHMgIHJlcXVlc3QgYW5kIHJlc3BvbnNlIC1cbiAqIG9yZGVyIGEgbWVhbCxcbiAqIG1vZGlmeSBhIG1lYWwsXG4gKiBnZXQgYWxsIG9yZGVycyxcbiAqL1xuY29uc3QgT3JkZXJDb250cm9sbGVyID0ge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIHJldHJpZXZlIGFuZCByZXR1cm4gYWxsIG9yZGVycyBmcm9tIG91ciBkYXRhXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7QXJyYXl9IG9yZGVyIG9iamVjdCBhcnJheVxuICAgKi9cbiAgZmV0Y2hBbGxPcmRlcnMocmVxLCByZXMpIHtcbiAgICBjb25zdCBhbGxPcmRlcnMgPSBPcmRlclNlcnZpY2UuZmV0Y2hBbGxPcmRlcnMoKTtcbiAgICByZXR1cm4gcmVzXG4gICAgICAuanNvbih7XG4gICAgICAgIHN0YXR1czogJ3N1Y2Nlc3MnLFxuICAgICAgICBkYXRhOiBhbGxPcmRlcnMsXG4gICAgICB9KVxuICAgICAgLnN0YXR1cygyMDApO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gb3JkZXIgYSBtZWFsXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBhcGlSZXNwb25zZVxuICAgKi9cbiAgb3JkZXJBTWVhbChyZXEsIHJlcykge1xuICAgIGlmICghcmVxLmJvZHkubWVhbElkIHx8ICFyZXEuYm9keS50eXBlKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLnNlbmQoe1xuICAgICAgICBzdGF0dXM6ICdlcnJvcicsXG4gICAgICAgIG1lc3NhZ2U6ICdBbGwgcGFyYW1ldGVycyBhcmUgcmVxdWlyZWQnLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgeyBtZWFsSWQsIHR5cGUgfSA9IHJlcS5ib2R5O1xuXG4gICAgaWYgKE51bWJlci5pc05hTihOdW1iZXIobWVhbElkKSkpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgICAgbWVzc2FnZTogJ0ludmFsaWQgbWVhbElkLiBtZWFsSWQgbXVzdCBiZSBhIG51bWJlcicsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBvcmRlcmVkTWVhbCA9IE9yZGVyU2VydmljZS5vcmRlckFNZWFsKG1lYWxJZCwgdHlwZSk7XG5cbiAgICBpZiAob3JkZXJlZE1lYWwgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgICBtZXNzYWdlOiAnVGhpcyBtZWFsIGNhbm5vdCBiZSBmb3VuZCcsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXG4gICAgICBtZXNzYWdlOiAnWW91ciBvcmRlciBoYXMgYmVlbiBwbGFjZWQnLFxuICAgICAgb3JkZXI6IG9yZGVyZWRNZWFsLFxuICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gdXBkYXRlIGFuIG9yZGVyIHJlY29yZFxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVxXG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXNcbiAgICogQHJldHVybnMge29iamVjdH0gYXBpUmVzcG9uc2VcbiAgICovXG4gIHVwZGF0ZUFuT3JkZXIocmVxLCByZXMpIHtcbiAgICBjb25zdCB7IG1lYWxJZCwgdHlwZSB9ID0gcmVxLmJvZHk7XG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnBhcmFtcztcblxuICAgIGlmIChOdW1iZXIuaXNOYU4oTnVtYmVyKGlkKSkgfHwgTnVtYmVyLmlzTmFOKE51bWJlcihtZWFsSWQpKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgICBtZXNzYWdlOiBcIkludmFsaWQgSUQuIElEJ3MgbXVzdCBiZSBhIG51bWJlclwiLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgdXBkYXRlT3JkZXIgPSBPcmRlclNlcnZpY2UudXBkYXRlQW5PcmRlcihpZCwgbWVhbElkLCB0eXBlKTtcblxuICAgIGlmICh1cGRhdGVPcmRlciA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdGF0dXM6ICdlcnJvcicsXG4gICAgICAgIG1lc3NhZ2U6IGBPcmRlciB3aXRoIGlkICR7aWR9IG9yIE1lYWwgd2l0aCBpZCAke21lYWxJZH0gY2Fubm90IGJlIGZvdW5kYCxcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzXG4gICAgICAuanNvbih7XG4gICAgICAgIHN0YXR1czogJ3N1Y2Nlc3MnLFxuICAgICAgICBtZXNzYWdlOiAnT3JkZXIgd2FzIHN1Y2Nlc3NmdWxseSB1cGRhdGVkJyxcbiAgICAgICAgZGF0YTogdXBkYXRlT3JkZXIsXG4gICAgICB9KVxuICAgICAgLnN0YXR1cygyMDEpO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgT3JkZXJDb250cm9sbGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "order.controller.js"
      ],
      "names": [
        "OrderController",
        "fetchAllOrders",
        "req",
        "res",
        "allOrders",
        "OrderService",
        "json",
        "status",
        "data",
        "orderAMeal",
        "body",
        "mealId",
        "type",
        "send",
        "message",
        "Number",
        "isNaN",
        "orderedMeal",
        "order",
        "updateAnOrder",
        "id",
        "params",
        "updateOrder"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA;;;;;;AAMA,IAAMA,eAAe,GAAG;AACtB;;;;;;AAMAC,EAAAA,cAPsB,0BAOPC,GAPO,EAOFC,GAPE,EAOG;AACvB,QAAMC,SAAS,GAAGC,eAAaJ,cAAb,EAAlB;;AACA,WAAOE,GAAG,CACPG,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJC,MAAAA,IAAI,EAAEJ;AAFF,KADD,EAKJG,MALI,CAKG,GALH,CAAP;AAMD,GAfqB;;AAiBtB;;;;;;AAMAE,EAAAA,UAvBsB,sBAuBXP,GAvBW,EAuBNC,GAvBM,EAuBD;AACnB,QAAI,CAACD,GAAG,CAACQ,IAAJ,CAASC,MAAV,IAAoB,CAACT,GAAG,CAACQ,IAAJ,CAASE,IAAlC,EAAwC;AACtC,aAAOT,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB;AAC1BN,QAAAA,MAAM,EAAE,OADkB;AAE1BO,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AANkB,oBAQMZ,GAAG,CAACQ,IARV;AAAA,QAQXC,MARW,aAQXA,MARW;AAAA,QAQHC,IARG,aAQHA,IARG;;AAUnB,QAAIG,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACJ,MAAD,CAAnB,CAAJ,EAAkC;AAChC,aAAOR,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BO,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAMG,WAAW,GAAGZ,eAAaI,UAAb,CAAwBE,MAAxB,EAAgCC,IAAhC,CAApB;;AAEA,QAAIK,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAOd,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BO,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,WAAOX,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,MAAAA,MAAM,EAAE,SADkB;AAE1BO,MAAAA,OAAO,EAAE,4BAFiB;AAG1BI,MAAAA,KAAK,EAAED;AAHmB,KAArB,CAAP;AAKD,GAtDqB;;AAwDtB;;;;;;AAMAE,EAAAA,aA9DsB,yBA8DRjB,GA9DQ,EA8DHC,GA9DG,EA8DE;AAAA,qBACGD,GAAG,CAACQ,IADP;AAAA,QACdC,MADc,cACdA,MADc;AAAA,QACNC,IADM,cACNA,IADM;AAAA,QAEdQ,EAFc,GAEPlB,GAAG,CAACmB,MAFG,CAEdD,EAFc;;AAItB,QAAIL,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACK,EAAD,CAAnB,KAA4BL,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACJ,MAAD,CAAnB,CAAhC,EAA8D;AAC5D,aAAOR,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BO,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAMQ,WAAW,GAAGjB,eAAac,aAAb,CAA2BC,EAA3B,EAA+BT,MAA/B,EAAuCC,IAAvC,CAApB;;AAEA,QAAIU,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAOnB,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAC1BC,QAAAA,MAAM,EAAE,OADkB;AAE1BO,QAAAA,OAAO,0BAAmBM,EAAnB,8BAAyCT,MAAzC;AAFmB,OAArB,CAAP;AAID;;AACD,WAAOR,GAAG,CACPG,IADI,CACC;AACJC,MAAAA,MAAM,EAAE,SADJ;AAEJO,MAAAA,OAAO,EAAE,gCAFL;AAGJN,MAAAA,IAAI,EAAEc;AAHF,KADD,EAMJf,MANI,CAMG,GANH,CAAP;AAOD;AAxFqB,CAAxB;eA2FeP,e",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "sourcesContent": [
        "import OrderService from '../services/order.service';\n/**\n * order controller performs controls  request and response -\n * order a meal,\n * modify a meal,\n * get all orders,\n */\nconst OrderController = {\n  /**\n   * @description retrieve and return all orders from our data\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} order object array\n   */\n  fetchAllOrders(req, res) {\n    const allOrders = OrderService.fetchAllOrders();\n    return res\n      .json({\n        status: 'success',\n        data: allOrders,\n      })\n      .status(200);\n  },\n\n  /**\n   * @description order a meal\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  orderAMeal(req, res) {\n    if (!req.body.mealId || !req.body.type) {\n      return res.status(400).send({\n        status: 'error',\n        message: 'All parameters are required',\n      });\n    }\n\n    const { mealId, type } = req.body;\n\n    if (Number.isNaN(Number(mealId))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid mealId. mealId must be a number',\n      });\n    }\n\n    const orderedMeal = OrderService.orderAMeal(mealId, type);\n\n    if (orderedMeal == null) {\n      return res.status(200).json({\n        status: 'error',\n        message: 'This meal cannot be found',\n      });\n    }\n\n    return res.status(200).json({\n      status: 'success',\n      message: 'Your order has been placed',\n      order: orderedMeal,\n    });\n  },\n\n  /**\n   * @description update an order record\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  updateAnOrder(req, res) {\n    const { mealId, type } = req.body;\n    const { id } = req.params;\n\n    if (Number.isNaN(Number(id)) || Number.isNaN(Number(mealId))) {\n      return res.status(400).json({\n        status: 'error',\n        message: \"Invalid ID. ID's must be a number\",\n      });\n    }\n\n    const updateOrder = OrderService.updateAnOrder(id, mealId, type);\n\n    if (updateOrder == null) {\n      return res.status(400).json({\n        status: 'error',\n        message: `Order with id ${id} or Meal with id ${mealId} cannot be found`,\n      });\n    }\n    return res\n      .json({\n        status: 'success',\n        message: 'Order was successfully updated',\n        data: updateOrder,\n      })\n      .status(201);\n  },\n};\n\nexport default OrderController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550592846306
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/order.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
        "sourceFileName": "order.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dummyData = _interopRequireDefault(require(\"../utils/dummyData\"));\n\nvar _order = _interopRequireDefault(require(\"../models/order.model\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * order services performs all action related to order-\n * order a meal, modify an order, get all orders\n */\nvar OrderService = {\n  /**\n   * @description Retrieve and return all orders from our dummyy data\n   * @returns {Array} order object array\n   */\n  fetchAllOrders: function fetchAllOrders() {\n    return _dummyData.default.orders.map(function (order) {\n      var newOrder = new _order.default();\n      newOrder.id = order.id;\n      newOrder.type = order.type;\n      newOrder.meal = order.meal;\n      return newOrder;\n    });\n  },\n\n  /**\n   * @description Order a meal\n   * @returns {Array} order object array\n   */\n  orderAMeal: function orderAMeal(id, type) {\n    var foundMeal = _dummyData.default.menu.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      var orderLength = _dummyData.default.orders.length;\n      var lastId = _dummyData.default.orders[orderLength - 1].id;\n      var newId = lastId + 1;\n      var newOrder = new _order.default();\n      newOrder.id = newId;\n      newOrder.type = type;\n      newOrder.meal = foundMeal;\n\n      _dummyData.default.orders.push(newOrder);\n\n      return newOrder;\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Updates an existing order with a new order object\n   * @param { int } id\n   * @param {object} updatedOrder\n   * @returns {object} updated order\n   */\n  updateAnOrder: function updateAnOrder(orderId, mealId, type) {\n    var foundOrder = _dummyData.default.orders.find(function (order) {\n      return order.id === Number(orderId);\n    });\n\n    var newMeal = _dummyData.default.menu.find(function (meal) {\n      return meal.id === Number(mealId);\n    });\n\n    if (foundOrder && newMeal) {\n      foundOrder.type = type;\n      foundOrder.meal = newMeal;\n      return foundOrder;\n    }\n\n    return null;\n  }\n};\nvar _default = OrderService;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLnNlcnZpY2UuanMiXSwibmFtZXMiOlsiT3JkZXJTZXJ2aWNlIiwiZmV0Y2hBbGxPcmRlcnMiLCJkdW1teURhdGEiLCJvcmRlcnMiLCJtYXAiLCJvcmRlciIsIm5ld09yZGVyIiwiT3JkZXIiLCJpZCIsInR5cGUiLCJtZWFsIiwib3JkZXJBTWVhbCIsImZvdW5kTWVhbCIsIm1lbnUiLCJmaW5kIiwiTnVtYmVyIiwib3JkZXJMZW5ndGgiLCJsZW5ndGgiLCJsYXN0SWQiLCJuZXdJZCIsInB1c2giLCJ1cGRhdGVBbk9yZGVyIiwib3JkZXJJZCIsIm1lYWxJZCIsImZvdW5kT3JkZXIiLCJuZXdNZWFsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTs7OztBQUlBLElBQU1BLFlBQVksR0FBRztBQUNuQjs7OztBQUlBQyxFQUFBQSxjQUxtQiw0QkFLRjtBQUNmLFdBQU9DLG1CQUFVQyxNQUFWLENBQWlCQyxHQUFqQixDQUFxQixVQUFDQyxLQUFELEVBQVc7QUFDckMsVUFBTUMsUUFBUSxHQUFHLElBQUlDLGNBQUosRUFBakI7QUFDQUQsTUFBQUEsUUFBUSxDQUFDRSxFQUFULEdBQWNILEtBQUssQ0FBQ0csRUFBcEI7QUFDQUYsTUFBQUEsUUFBUSxDQUFDRyxJQUFULEdBQWdCSixLQUFLLENBQUNJLElBQXRCO0FBQ0FILE1BQUFBLFFBQVEsQ0FBQ0ksSUFBVCxHQUFnQkwsS0FBSyxDQUFDSyxJQUF0QjtBQUNBLGFBQU9KLFFBQVA7QUFDRCxLQU5NLENBQVA7QUFPRCxHQWJrQjs7QUFlbkI7Ozs7QUFJQUssRUFBQUEsVUFuQm1CLHNCQW1CUkgsRUFuQlEsRUFtQkpDLElBbkJJLEVBbUJFO0FBQ25CLFFBQU1HLFNBQVMsR0FBR1YsbUJBQVVXLElBQVYsQ0FBZUMsSUFBZixDQUFvQixVQUFBSixJQUFJO0FBQUEsYUFBSUEsSUFBSSxDQUFDRixFQUFMLEtBQVlPLE1BQU0sQ0FBQ1AsRUFBRCxDQUF0QjtBQUFBLEtBQXhCLENBQWxCOztBQUVBLFFBQUlJLFNBQUosRUFBZTtBQUNiLFVBQU1JLFdBQVcsR0FBR2QsbUJBQVVDLE1BQVYsQ0FBaUJjLE1BQXJDO0FBQ0EsVUFBTUMsTUFBTSxHQUFHaEIsbUJBQVVDLE1BQVYsQ0FBaUJhLFdBQVcsR0FBRyxDQUEvQixFQUFrQ1IsRUFBakQ7QUFDQSxVQUFNVyxLQUFLLEdBQUdELE1BQU0sR0FBRyxDQUF2QjtBQUVBLFVBQU1aLFFBQVEsR0FBRyxJQUFJQyxjQUFKLEVBQWpCO0FBQ0FELE1BQUFBLFFBQVEsQ0FBQ0UsRUFBVCxHQUFjVyxLQUFkO0FBQ0FiLE1BQUFBLFFBQVEsQ0FBQ0csSUFBVCxHQUFnQkEsSUFBaEI7QUFDQUgsTUFBQUEsUUFBUSxDQUFDSSxJQUFULEdBQWdCRSxTQUFoQjs7QUFDQVYseUJBQVVDLE1BQVYsQ0FBaUJpQixJQUFqQixDQUFzQmQsUUFBdEI7O0FBRUEsYUFBT0EsUUFBUDtBQUNEOztBQUVELFdBQU9NLFNBQVA7QUFDRCxHQXJDa0I7O0FBdUNuQjs7Ozs7O0FBTUFTLEVBQUFBLGFBN0NtQix5QkE2Q0xDLE9BN0NLLEVBNkNJQyxNQTdDSixFQTZDWWQsSUE3Q1osRUE2Q2tCO0FBQ25DLFFBQU1lLFVBQVUsR0FBR3RCLG1CQUFVQyxNQUFWLENBQWlCVyxJQUFqQixDQUFzQixVQUFBVCxLQUFLO0FBQUEsYUFBSUEsS0FBSyxDQUFDRyxFQUFOLEtBQWFPLE1BQU0sQ0FBQ08sT0FBRCxDQUF2QjtBQUFBLEtBQTNCLENBQW5COztBQUNBLFFBQU1HLE9BQU8sR0FBR3ZCLG1CQUFVVyxJQUFWLENBQWVDLElBQWYsQ0FBb0IsVUFBQUosSUFBSTtBQUFBLGFBQUlBLElBQUksQ0FBQ0YsRUFBTCxLQUFZTyxNQUFNLENBQUNRLE1BQUQsQ0FBdEI7QUFBQSxLQUF4QixDQUFoQjs7QUFFQSxRQUFJQyxVQUFVLElBQUlDLE9BQWxCLEVBQTJCO0FBQ3pCRCxNQUFBQSxVQUFVLENBQUNmLElBQVgsR0FBa0JBLElBQWxCO0FBQ0FlLE1BQUFBLFVBQVUsQ0FBQ2QsSUFBWCxHQUFrQmUsT0FBbEI7QUFDQSxhQUFPRCxVQUFQO0FBQ0Q7O0FBQ0QsV0FBTyxJQUFQO0FBQ0Q7QUF2RGtCLENBQXJCO2VBMERleEIsWSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZHVtbXlEYXRhIGZyb20gJy4uL3V0aWxzL2R1bW15RGF0YSc7XG5pbXBvcnQgT3JkZXIgZnJvbSAnLi4vbW9kZWxzL29yZGVyLm1vZGVsJztcblxuLyoqXG4gKiBvcmRlciBzZXJ2aWNlcyBwZXJmb3JtcyBhbGwgYWN0aW9uIHJlbGF0ZWQgdG8gb3JkZXItXG4gKiBvcmRlciBhIG1lYWwsIG1vZGlmeSBhbiBvcmRlciwgZ2V0IGFsbCBvcmRlcnNcbiAqL1xuY29uc3QgT3JkZXJTZXJ2aWNlID0ge1xuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFJldHJpZXZlIGFuZCByZXR1cm4gYWxsIG9yZGVycyBmcm9tIG91ciBkdW1teXkgZGF0YVxuICAgKiBAcmV0dXJucyB7QXJyYXl9IG9yZGVyIG9iamVjdCBhcnJheVxuICAgKi9cbiAgZmV0Y2hBbGxPcmRlcnMoKSB7XG4gICAgcmV0dXJuIGR1bW15RGF0YS5vcmRlcnMubWFwKChvcmRlcikgPT4ge1xuICAgICAgY29uc3QgbmV3T3JkZXIgPSBuZXcgT3JkZXIoKTtcbiAgICAgIG5ld09yZGVyLmlkID0gb3JkZXIuaWQ7XG4gICAgICBuZXdPcmRlci50eXBlID0gb3JkZXIudHlwZTtcbiAgICAgIG5ld09yZGVyLm1lYWwgPSBvcmRlci5tZWFsO1xuICAgICAgcmV0dXJuIG5ld09yZGVyO1xuICAgIH0pO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gT3JkZXIgYSBtZWFsXG4gICAqIEByZXR1cm5zIHtBcnJheX0gb3JkZXIgb2JqZWN0IGFycmF5XG4gICAqL1xuICBvcmRlckFNZWFsKGlkLCB0eXBlKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lbnUuZmluZChtZWFsID0+IG1lYWwuaWQgPT09IE51bWJlcihpZCkpO1xuXG4gICAgaWYgKGZvdW5kTWVhbCkge1xuICAgICAgY29uc3Qgb3JkZXJMZW5ndGggPSBkdW1teURhdGEub3JkZXJzLmxlbmd0aDtcbiAgICAgIGNvbnN0IGxhc3RJZCA9IGR1bW15RGF0YS5vcmRlcnNbb3JkZXJMZW5ndGggLSAxXS5pZDtcbiAgICAgIGNvbnN0IG5ld0lkID0gbGFzdElkICsgMTtcblxuICAgICAgY29uc3QgbmV3T3JkZXIgPSBuZXcgT3JkZXIoKTtcbiAgICAgIG5ld09yZGVyLmlkID0gbmV3SWQ7XG4gICAgICBuZXdPcmRlci50eXBlID0gdHlwZTtcbiAgICAgIG5ld09yZGVyLm1lYWwgPSBmb3VuZE1lYWw7XG4gICAgICBkdW1teURhdGEub3JkZXJzLnB1c2gobmV3T3JkZXIpO1xuXG4gICAgICByZXR1cm4gbmV3T3JkZXI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZvdW5kTWVhbDtcbiAgfSxcblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFVwZGF0ZXMgYW4gZXhpc3Rpbmcgb3JkZXIgd2l0aCBhIG5ldyBvcmRlciBvYmplY3RcbiAgICogQHBhcmFtIHsgaW50IH0gaWRcbiAgICogQHBhcmFtIHtvYmplY3R9IHVwZGF0ZWRPcmRlclxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSB1cGRhdGVkIG9yZGVyXG4gICAqL1xuICB1cGRhdGVBbk9yZGVyKG9yZGVySWQsIG1lYWxJZCwgdHlwZSkge1xuICAgIGNvbnN0IGZvdW5kT3JkZXIgPSBkdW1teURhdGEub3JkZXJzLmZpbmQob3JkZXIgPT4gb3JkZXIuaWQgPT09IE51bWJlcihvcmRlcklkKSk7XG4gICAgY29uc3QgbmV3TWVhbCA9IGR1bW15RGF0YS5tZW51LmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIobWVhbElkKSk7XG5cbiAgICBpZiAoZm91bmRPcmRlciAmJiBuZXdNZWFsKSB7XG4gICAgICBmb3VuZE9yZGVyLnR5cGUgPSB0eXBlO1xuICAgICAgZm91bmRPcmRlci5tZWFsID0gbmV3TWVhbDtcbiAgICAgIHJldHVybiBmb3VuZE9yZGVyO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE9yZGVyU2VydmljZTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.service.js"
      ],
      "names": [
        "OrderService",
        "fetchAllOrders",
        "dummyData",
        "orders",
        "map",
        "order",
        "newOrder",
        "Order",
        "id",
        "type",
        "meal",
        "orderAMeal",
        "foundMeal",
        "menu",
        "find",
        "Number",
        "orderLength",
        "length",
        "lastId",
        "newId",
        "push",
        "updateAnOrder",
        "orderId",
        "mealId",
        "foundOrder",
        "newMeal"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;;;;AAIA,IAAMA,YAAY,GAAG;AACnB;;;;AAIAC,EAAAA,cALmB,4BAKF;AACf,WAAOC,mBAAUC,MAAV,CAAiBC,GAAjB,CAAqB,UAACC,KAAD,EAAW;AACrC,UAAMC,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,EAAT,GAAcH,KAAK,CAACG,EAApB;AACAF,MAAAA,QAAQ,CAACG,IAAT,GAAgBJ,KAAK,CAACI,IAAtB;AACAH,MAAAA,QAAQ,CAACI,IAAT,GAAgBL,KAAK,CAACK,IAAtB;AACA,aAAOJ,QAAP;AACD,KANM,CAAP;AAOD,GAbkB;;AAenB;;;;AAIAK,EAAAA,UAnBmB,sBAmBRH,EAnBQ,EAmBJC,IAnBI,EAmBE;AACnB,QAAMG,SAAS,GAAGV,mBAAUW,IAAV,CAAeC,IAAf,CAAoB,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACF,EAAL,KAAYO,MAAM,CAACP,EAAD,CAAtB;AAAA,KAAxB,CAAlB;;AAEA,QAAII,SAAJ,EAAe;AACb,UAAMI,WAAW,GAAGd,mBAAUC,MAAV,CAAiBc,MAArC;AACA,UAAMC,MAAM,GAAGhB,mBAAUC,MAAV,CAAiBa,WAAW,GAAG,CAA/B,EAAkCR,EAAjD;AACA,UAAMW,KAAK,GAAGD,MAAM,GAAG,CAAvB;AAEA,UAAMZ,QAAQ,GAAG,IAAIC,cAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,EAAT,GAAcW,KAAd;AACAb,MAAAA,QAAQ,CAACG,IAAT,GAAgBA,IAAhB;AACAH,MAAAA,QAAQ,CAACI,IAAT,GAAgBE,SAAhB;;AACAV,yBAAUC,MAAV,CAAiBiB,IAAjB,CAAsBd,QAAtB;;AAEA,aAAOA,QAAP;AACD;;AAED,WAAOM,SAAP;AACD,GArCkB;;AAuCnB;;;;;;AAMAS,EAAAA,aA7CmB,yBA6CLC,OA7CK,EA6CIC,MA7CJ,EA6CYd,IA7CZ,EA6CkB;AACnC,QAAMe,UAAU,GAAGtB,mBAAUC,MAAV,CAAiBW,IAAjB,CAAsB,UAAAT,KAAK;AAAA,aAAIA,KAAK,CAACG,EAAN,KAAaO,MAAM,CAACO,OAAD,CAAvB;AAAA,KAA3B,CAAnB;;AACA,QAAMG,OAAO,GAAGvB,mBAAUW,IAAV,CAAeC,IAAf,CAAoB,UAAAJ,IAAI;AAAA,aAAIA,IAAI,CAACF,EAAL,KAAYO,MAAM,CAACQ,MAAD,CAAtB;AAAA,KAAxB,CAAhB;;AAEA,QAAIC,UAAU,IAAIC,OAAlB,EAA2B;AACzBD,MAAAA,UAAU,CAACf,IAAX,GAAkBA,IAAlB;AACAe,MAAAA,UAAU,CAACd,IAAX,GAAkBe,OAAlB;AACA,aAAOD,UAAP;AACD;;AACD,WAAO,IAAP;AACD;AAvDkB,CAArB;eA0DexB,Y",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "sourcesContent": [
        "import dummyData from '../utils/dummyData';\nimport Order from '../models/order.model';\n\n/**\n * order services performs all action related to order-\n * order a meal, modify an order, get all orders\n */\nconst OrderService = {\n  /**\n   * @description Retrieve and return all orders from our dummyy data\n   * @returns {Array} order object array\n   */\n  fetchAllOrders() {\n    return dummyData.orders.map((order) => {\n      const newOrder = new Order();\n      newOrder.id = order.id;\n      newOrder.type = order.type;\n      newOrder.meal = order.meal;\n      return newOrder;\n    });\n  },\n\n  /**\n   * @description Order a meal\n   * @returns {Array} order object array\n   */\n  orderAMeal(id, type) {\n    const foundMeal = dummyData.menu.find(meal => meal.id === Number(id));\n\n    if (foundMeal) {\n      const orderLength = dummyData.orders.length;\n      const lastId = dummyData.orders[orderLength - 1].id;\n      const newId = lastId + 1;\n\n      const newOrder = new Order();\n      newOrder.id = newId;\n      newOrder.type = type;\n      newOrder.meal = foundMeal;\n      dummyData.orders.push(newOrder);\n\n      return newOrder;\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Updates an existing order with a new order object\n   * @param { int } id\n   * @param {object} updatedOrder\n   * @returns {object} updated order\n   */\n  updateAnOrder(orderId, mealId, type) {\n    const foundOrder = dummyData.orders.find(order => order.id === Number(orderId));\n    const newMeal = dummyData.menu.find(meal => meal.id === Number(mealId));\n\n    if (foundOrder && newMeal) {\n      foundOrder.type = type;\n      foundOrder.meal = newMeal;\n      return foundOrder;\n    }\n    return null;\n  },\n};\n\nexport default OrderService;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550570550443
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models/order.model.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
        "sourceFileName": "order.model.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Order = function Order() {\n  _classCallCheck(this, Order);\n\n  this.id = null;\n  this.type = null;\n  this.meal = null;\n};\n\nexports.default = Order;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLm1vZGVsLmpzIl0sIm5hbWVzIjpbIk9yZGVyIiwiaWQiLCJ0eXBlIiwibWVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQXFCQSxLLEdBQ25CLGlCQUFjO0FBQUE7O0FBQ1osT0FBS0MsRUFBTCxHQUFVLElBQVY7QUFDQSxPQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNBLE9BQUtDLElBQUwsR0FBWSxJQUFaO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3JkZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmlkID0gbnVsbDtcbiAgICB0aGlzLnR5cGUgPSBudWxsO1xuICAgIHRoaXMubWVhbCA9IG51bGw7XG4gIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order.model.js"
      ],
      "names": [
        "Order",
        "id",
        "type",
        "meal"
      ],
      "mappings": ";;;;;;;;;IAAqBA,K,GACnB,iBAAc;AAAA;;AACZ,OAAKC,EAAL,GAAU,IAAV;AACA,OAAKC,IAAL,GAAY,IAAZ;AACA,OAAKC,IAAL,GAAY,IAAZ;AACD,C",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/models",
      "sourcesContent": [
        "export default class Order {\n  constructor() {\n    this.id = null;\n    this.type = null;\n    this.meal = null;\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550570550438
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes/menu.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
        "sourceFileName": "menu.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _menu = _interopRequireDefault(require(\"../controllers/menu.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = (0, _express.Router)();\nrouter.get('/', _menu.default.fetchMenu);\nrouter.post('/', _menu.default.setUpMenu);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUucm91dGUuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiTWVudUNvbnRyb2xsZXIiLCJmZXRjaE1lbnUiLCJwb3N0Iiwic2V0VXBNZW51Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsY0FBZUMsU0FBL0I7QUFDQUgsTUFBTSxDQUFDSSxJQUFQLENBQVksR0FBWixFQUFpQkYsY0FBZUcsU0FBaEM7ZUFFZUwsTSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgTWVudUNvbnRyb2xsZXIgZnJvbSAnLi4vY29udHJvbGxlcnMvbWVudS5jb250cm9sbGVyJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbnJvdXRlci5nZXQoJy8nLCBNZW51Q29udHJvbGxlci5mZXRjaE1lbnUpO1xucm91dGVyLnBvc3QoJy8nLCBNZW51Q29udHJvbGxlci5zZXRVcE1lbnUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "menu.route.js"
      ],
      "names": [
        "router",
        "get",
        "MenuController",
        "fetchMenu",
        "post",
        "setUpMenu"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,cAAeC,SAA/B;AACAH,MAAM,CAACI,IAAP,CAAY,GAAZ,EAAiBF,cAAeG,SAAhC;eAEeL,M",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/routes",
      "sourcesContent": [
        "import { Router } from 'express';\nimport MenuController from '../controllers/menu.controller';\n\nconst router = Router();\n\nrouter.get('/', MenuController.fetchMenu);\nrouter.post('/', MenuController.setUpMenu);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550491061937
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers/menu.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
        "sourceFileName": "menu.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _menu = _interopRequireDefault(require(\"../services/menu.service\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * menu controller performs controls  request and response -\n * fetching today's menu,\n * setup menu for today,\n */\nvar MenuController = {\n  /**\n   * @description retrieve and return menu for the day\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} menu object array\n   */\n  fetchMenu: function fetchMenu(req, res) {\n    var allMenu = _menu.default.fetchMenu();\n\n    var foundMealKeys = Object.keys(allMenu);\n\n    if (foundMealKeys.length === 0) {\n      return res.status(200).json({\n        status: 'success',\n        message: 'Menu list for today is empty'\n      });\n    }\n\n    return res.status(200).json({\n      status: 'success',\n      data: allMenu\n    });\n  },\n\n  /**\n   * @description add a meal to today menu\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  setUpMenu: function setUpMenu(req, res) {\n    var id = req.body.id;\n\n    if (!id) {\n      return res.status(400).send({\n        status: 'error',\n        message: 'meal id is required'\n      });\n    }\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number'\n      });\n    }\n\n    var addMeal = _menu.default.setUpMenu(id);\n\n    if (addMeal == null) {\n      return res.status(404).json({\n        status: 'error',\n        message: \"Meal with id \".concat(id, \" cannot be found\")\n      });\n    }\n\n    if (typeof addMeal === 'string') {\n      var msg = addMeal;\n      return res.status(200).json({\n        status: 'status',\n        message: msg\n      });\n    }\n\n    return res.json({\n      status: 'success',\n      message: 'Meal successfully added to Menu List',\n      data: addMeal\n    }).status(201);\n  }\n};\nvar _default = MenuController;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJNZW51Q29udHJvbGxlciIsImZldGNoTWVudSIsInJlcSIsInJlcyIsImFsbE1lbnUiLCJNZW51U2VydmljZSIsImZvdW5kTWVhbEtleXMiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJkYXRhIiwic2V0VXBNZW51IiwiaWQiLCJib2R5Iiwic2VuZCIsIk51bWJlciIsImlzTmFOIiwiYWRkTWVhbCIsIm1zZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7O0FBS0EsSUFBTUEsY0FBYyxHQUFHO0FBQ3JCOzs7Ozs7QUFNQUMsRUFBQUEsU0FQcUIscUJBT1hDLEdBUFcsRUFPTkMsR0FQTSxFQU9EO0FBQ2xCLFFBQU1DLE9BQU8sR0FBR0MsY0FBWUosU0FBWixFQUFoQjs7QUFDQSxRQUFNSyxhQUFhLEdBQUdDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZSixPQUFaLENBQXRCOztBQUVBLFFBQUlFLGFBQWEsQ0FBQ0csTUFBZCxLQUF5QixDQUE3QixFQUFnQztBQUM5QixhQUFPTixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsUUFBQUEsTUFBTSxFQUFFLFNBRGtCO0FBRTFCRSxRQUFBQSxPQUFPLEVBQUU7QUFGaUIsT0FBckIsQ0FBUDtBQUlEOztBQUNELFdBQU9ULEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCRCxNQUFBQSxNQUFNLEVBQUUsU0FEa0I7QUFFMUJHLE1BQUFBLElBQUksRUFBRVQ7QUFGb0IsS0FBckIsQ0FBUDtBQUlELEdBckJvQjs7QUF1QnJCOzs7Ozs7QUFNQVUsRUFBQUEsU0E3QnFCLHFCQTZCWFosR0E3QlcsRUE2Qk5DLEdBN0JNLEVBNkJEO0FBQUEsUUFDVlksRUFEVSxHQUNIYixHQUFHLENBQUNjLElBREQsQ0FDVkQsRUFEVTs7QUFHbEIsUUFBSSxDQUFDQSxFQUFMLEVBQVM7QUFDUCxhQUFPWixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCTyxJQUFoQixDQUFxQjtBQUMxQlAsUUFBQUEsTUFBTSxFQUFFLE9BRGtCO0FBRTFCRSxRQUFBQSxPQUFPLEVBQUU7QUFGaUIsT0FBckIsQ0FBUDtBQUlEOztBQUVELFFBQUlNLE1BQU0sQ0FBQ0MsS0FBUCxDQUFhRCxNQUFNLENBQUNILEVBQUQsQ0FBbkIsQ0FBSixFQUE4QjtBQUM1QixhQUFPWixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsUUFBQUEsTUFBTSxFQUFFLE9BRGtCO0FBRTFCRSxRQUFBQSxPQUFPLEVBQUU7QUFGaUIsT0FBckIsQ0FBUDtBQUlEOztBQUVELFFBQU1RLE9BQU8sR0FBR2YsY0FBWVMsU0FBWixDQUFzQkMsRUFBdEIsQ0FBaEI7O0FBRUEsUUFBSUssT0FBTyxJQUFJLElBQWYsRUFBcUI7QUFDbkIsYUFBT2pCLEdBQUcsQ0FBQ08sTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCRCxRQUFBQSxNQUFNLEVBQUUsT0FEa0I7QUFFMUJFLFFBQUFBLE9BQU8seUJBQWtCRyxFQUFsQjtBQUZtQixPQUFyQixDQUFQO0FBSUQ7O0FBRUQsUUFBSSxPQUFPSyxPQUFQLEtBQW1CLFFBQXZCLEVBQWlDO0FBQy9CLFVBQU1DLEdBQUcsR0FBR0QsT0FBWjtBQUNBLGFBQU9qQixHQUFHLENBQUNPLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUMxQkQsUUFBQUEsTUFBTSxFQUFFLFFBRGtCO0FBRTFCRSxRQUFBQSxPQUFPLEVBQUVTO0FBRmlCLE9BQXJCLENBQVA7QUFJRDs7QUFFRCxXQUFPbEIsR0FBRyxDQUNQUSxJQURJLENBQ0M7QUFDSkQsTUFBQUEsTUFBTSxFQUFFLFNBREo7QUFFSkUsTUFBQUEsT0FBTyxFQUFFLHNDQUZMO0FBR0pDLE1BQUFBLElBQUksRUFBRU87QUFIRixLQURELEVBTUpWLE1BTkksQ0FNRyxHQU5ILENBQVA7QUFPRDtBQXRFb0IsQ0FBdkI7ZUF5RWVWLGMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NvZGVwcmVuZXVyL1dlYnN0b3JtUHJvamVjdHMvQmV0YUNob3AvQVBJL3YxL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1lbnVTZXJ2aWNlIGZyb20gJy4uL3NlcnZpY2VzL21lbnUuc2VydmljZSc7XG5cbi8qKlxuICogbWVudSBjb250cm9sbGVyIHBlcmZvcm1zIGNvbnRyb2xzICByZXF1ZXN0IGFuZCByZXNwb25zZSAtXG4gKiBmZXRjaGluZyB0b2RheSdzIG1lbnUsXG4gKiBzZXR1cCBtZW51IGZvciB0b2RheSxcbiAqL1xuY29uc3QgTWVudUNvbnRyb2xsZXIgPSB7XG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gcmV0cmlldmUgYW5kIHJldHVybiBtZW51IGZvciB0aGUgZGF5XG4gICAqIEBwYXJhbSB7b2JqZWN0fSByZXFcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlc1xuICAgKiBAcmV0dXJucyB7QXJyYXl9IG1lbnUgb2JqZWN0IGFycmF5XG4gICAqL1xuICBmZXRjaE1lbnUocmVxLCByZXMpIHtcbiAgICBjb25zdCBhbGxNZW51ID0gTWVudVNlcnZpY2UuZmV0Y2hNZW51KCk7XG4gICAgY29uc3QgZm91bmRNZWFsS2V5cyA9IE9iamVjdC5rZXlzKGFsbE1lbnUpO1xuXG4gICAgaWYgKGZvdW5kTWVhbEtleXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICBzdGF0dXM6ICdzdWNjZXNzJyxcbiAgICAgICAgbWVzc2FnZTogJ01lbnUgbGlzdCBmb3IgdG9kYXkgaXMgZW1wdHknLFxuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICBzdGF0dXM6ICdzdWNjZXNzJyxcbiAgICAgIGRhdGE6IGFsbE1lbnUsXG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBhZGQgYSBtZWFsIHRvIHRvZGF5IG1lbnVcbiAgICogQHBhcmFtIHtvYmplY3R9IHJlcVxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IGFwaVJlc3BvbnNlXG4gICAqL1xuICBzZXRVcE1lbnUocmVxLCByZXMpIHtcbiAgICBjb25zdCB7IGlkIH0gPSByZXEuYm9keTtcblxuICAgIGlmICghaWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuc2VuZCh7XG4gICAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgICAgbWVzc2FnZTogJ21lYWwgaWQgaXMgcmVxdWlyZWQnLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKE51bWJlci5pc05hTihOdW1iZXIoaWQpKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgc3RhdHVzOiAnZXJyb3InLFxuICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCBJRC4gSUQgbXVzdCBiZSBhIG51bWJlcicsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBhZGRNZWFsID0gTWVudVNlcnZpY2Uuc2V0VXBNZW51KGlkKTtcblxuICAgIGlmIChhZGRNZWFsID09IG51bGwpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7XG4gICAgICAgIHN0YXR1czogJ2Vycm9yJyxcbiAgICAgICAgbWVzc2FnZTogYE1lYWwgd2l0aCBpZCAke2lkfSBjYW5ub3QgYmUgZm91bmRgLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBhZGRNZWFsID09PSAnc3RyaW5nJykge1xuICAgICAgY29uc3QgbXNnID0gYWRkTWVhbDtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgIHN0YXR1czogJ3N0YXR1cycsXG4gICAgICAgIG1lc3NhZ2U6IG1zZyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiByZXNcbiAgICAgIC5qc29uKHtcbiAgICAgICAgc3RhdHVzOiAnc3VjY2VzcycsXG4gICAgICAgIG1lc3NhZ2U6ICdNZWFsIHN1Y2Nlc3NmdWxseSBhZGRlZCB0byBNZW51IExpc3QnLFxuICAgICAgICBkYXRhOiBhZGRNZWFsLFxuICAgICAgfSlcbiAgICAgIC5zdGF0dXMoMjAxKTtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1lbnVDb250cm9sbGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "menu.controller.js"
      ],
      "names": [
        "MenuController",
        "fetchMenu",
        "req",
        "res",
        "allMenu",
        "MenuService",
        "foundMealKeys",
        "Object",
        "keys",
        "length",
        "status",
        "json",
        "message",
        "data",
        "setUpMenu",
        "id",
        "body",
        "send",
        "Number",
        "isNaN",
        "addMeal",
        "msg"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;;AAKA,IAAMA,cAAc,GAAG;AACrB;;;;;;AAMAC,EAAAA,SAPqB,qBAOXC,GAPW,EAONC,GAPM,EAOD;AAClB,QAAMC,OAAO,GAAGC,cAAYJ,SAAZ,EAAhB;;AACA,QAAMK,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,CAAtB;;AAEA,QAAIE,aAAa,CAACG,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,aAAON,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,SADkB;AAE1BE,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AACD,WAAOT,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,MAAAA,MAAM,EAAE,SADkB;AAE1BG,MAAAA,IAAI,EAAET;AAFoB,KAArB,CAAP;AAID,GArBoB;;AAuBrB;;;;;;AAMAU,EAAAA,SA7BqB,qBA6BXZ,GA7BW,EA6BNC,GA7BM,EA6BD;AAAA,QACVY,EADU,GACHb,GAAG,CAACc,IADD,CACVD,EADU;;AAGlB,QAAI,CAACA,EAAL,EAAS;AACP,aAAOZ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB;AAC1BP,QAAAA,MAAM,EAAE,OADkB;AAE1BE,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAIM,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACH,EAAD,CAAnB,CAAJ,EAA8B;AAC5B,aAAOZ,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BE,QAAAA,OAAO,EAAE;AAFiB,OAArB,CAAP;AAID;;AAED,QAAMQ,OAAO,GAAGf,cAAYS,SAAZ,CAAsBC,EAAtB,CAAhB;;AAEA,QAAIK,OAAO,IAAI,IAAf,EAAqB;AACnB,aAAOjB,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,OADkB;AAE1BE,QAAAA,OAAO,yBAAkBG,EAAlB;AAFmB,OAArB,CAAP;AAID;;AAED,QAAI,OAAOK,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAMC,GAAG,GAAGD,OAAZ;AACA,aAAOjB,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BD,QAAAA,MAAM,EAAE,QADkB;AAE1BE,QAAAA,OAAO,EAAES;AAFiB,OAArB,CAAP;AAID;;AAED,WAAOlB,GAAG,CACPQ,IADI,CACC;AACJD,MAAAA,MAAM,EAAE,SADJ;AAEJE,MAAAA,OAAO,EAAE,sCAFL;AAGJC,MAAAA,IAAI,EAAEO;AAHF,KADD,EAMJV,MANI,CAMG,GANH,CAAP;AAOD;AAtEoB,CAAvB;eAyEeV,c",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/controllers",
      "sourcesContent": [
        "import MenuService from '../services/menu.service';\n\n/**\n * menu controller performs controls  request and response -\n * fetching today's menu,\n * setup menu for today,\n */\nconst MenuController = {\n  /**\n   * @description retrieve and return menu for the day\n   * @param {object} req\n   * @param {object} res\n   * @returns {Array} menu object array\n   */\n  fetchMenu(req, res) {\n    const allMenu = MenuService.fetchMenu();\n    const foundMealKeys = Object.keys(allMenu);\n\n    if (foundMealKeys.length === 0) {\n      return res.status(200).json({\n        status: 'success',\n        message: 'Menu list for today is empty',\n      });\n    }\n    return res.status(200).json({\n      status: 'success',\n      data: allMenu,\n    });\n  },\n\n  /**\n   * @description add a meal to today menu\n   * @param {object} req\n   * @param {object} res\n   * @returns {object} apiResponse\n   */\n  setUpMenu(req, res) {\n    const { id } = req.body;\n\n    if (!id) {\n      return res.status(400).send({\n        status: 'error',\n        message: 'meal id is required',\n      });\n    }\n\n    if (Number.isNaN(Number(id))) {\n      return res.status(400).json({\n        status: 'error',\n        message: 'Invalid ID. ID must be a number',\n      });\n    }\n\n    const addMeal = MenuService.setUpMenu(id);\n\n    if (addMeal == null) {\n      return res.status(404).json({\n        status: 'error',\n        message: `Meal with id ${id} cannot be found`,\n      });\n    }\n\n    if (typeof addMeal === 'string') {\n      const msg = addMeal;\n      return res.status(200).json({\n        status: 'status',\n        message: msg,\n      });\n    }\n\n    return res\n      .json({\n        status: 'success',\n        message: 'Meal successfully added to Menu List',\n        data: addMeal,\n      })\n      .status(201);\n  },\n};\n\nexport default MenuController;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550597326536
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services/menu.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
        "sourceFileName": "menu.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _dummyData = _interopRequireDefault(require(\"../utils/dummyData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * menu services performs all action related to menu-\n * fetch menu for the day and setup menu for the day\n */\nvar MenuService = {\n  /**\n   * @description Setup the meal for the day\n   * @returns {Array} menu object array\n   */\n  setUpMenu: function setUpMenu(id) {\n    var foundMeal = _dummyData.default.meals.find(function (meal) {\n      return meal.id === Number(id);\n    });\n\n    if (foundMeal) {\n      foundMeal.available = true; // checks if meal has already been added to menulist\n\n      var isAdded = _dummyData.default.menu.find(function (meal) {\n        return meal.id === Number(id);\n      });\n\n      if (isAdded) {\n        return 'Meal has already been added to menu list';\n      }\n\n      _dummyData.default.menu.push(foundMeal);\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Retrieve and return all menu from our dummyy data\n   * @returns {Array} menu object array\n   */\n  fetchMenu: function fetchMenu() {\n    return _dummyData.default.menu.filter(function (meal) {\n      return meal.available === true;\n    });\n  }\n};\nvar _default = MenuService;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJNZW51U2VydmljZSIsInNldFVwTWVudSIsImlkIiwiZm91bmRNZWFsIiwiZHVtbXlEYXRhIiwibWVhbHMiLCJmaW5kIiwibWVhbCIsIk51bWJlciIsImF2YWlsYWJsZSIsImlzQWRkZWQiLCJtZW51IiwicHVzaCIsImZldGNoTWVudSIsImZpbHRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7Ozs7QUFJQSxJQUFNQSxXQUFXLEdBQUc7QUFDbEI7Ozs7QUFJQUMsRUFBQUEsU0FMa0IscUJBS1JDLEVBTFEsRUFLSjtBQUNaLFFBQU1DLFNBQVMsR0FBR0MsbUJBQVVDLEtBQVYsQ0FBZ0JDLElBQWhCLENBQXFCLFVBQUFDLElBQUk7QUFBQSxhQUFJQSxJQUFJLENBQUNMLEVBQUwsS0FBWU0sTUFBTSxDQUFDTixFQUFELENBQXRCO0FBQUEsS0FBekIsQ0FBbEI7O0FBRUEsUUFBSUMsU0FBSixFQUFlO0FBQ2JBLE1BQUFBLFNBQVMsQ0FBQ00sU0FBVixHQUFzQixJQUF0QixDQURhLENBR2I7O0FBQ0EsVUFBTUMsT0FBTyxHQUFHTixtQkFBVU8sSUFBVixDQUFlTCxJQUFmLENBQW9CLFVBQUFDLElBQUk7QUFBQSxlQUFJQSxJQUFJLENBQUNMLEVBQUwsS0FBWU0sTUFBTSxDQUFDTixFQUFELENBQXRCO0FBQUEsT0FBeEIsQ0FBaEI7O0FBRUEsVUFBSVEsT0FBSixFQUFhO0FBQ1gsZUFBTywwQ0FBUDtBQUNEOztBQUNETix5QkFBVU8sSUFBVixDQUFlQyxJQUFmLENBQW9CVCxTQUFwQjtBQUNEOztBQUVELFdBQU9BLFNBQVA7QUFDRCxHQXJCaUI7O0FBdUJsQjs7OztBQUlBVSxFQUFBQSxTQTNCa0IsdUJBMkJOO0FBQ1YsV0FBT1QsbUJBQVVPLElBQVYsQ0FBZUcsTUFBZixDQUFzQixVQUFBUCxJQUFJO0FBQUEsYUFBSUEsSUFBSSxDQUFDRSxTQUFMLEtBQW1CLElBQXZCO0FBQUEsS0FBMUIsQ0FBUDtBQUNEO0FBN0JpQixDQUFwQjtlQWdDZVQsVyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvc2VydmljZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZHVtbXlEYXRhIGZyb20gJy4uL3V0aWxzL2R1bW15RGF0YSc7XG5cbi8qKlxuICogbWVudSBzZXJ2aWNlcyBwZXJmb3JtcyBhbGwgYWN0aW9uIHJlbGF0ZWQgdG8gbWVudS1cbiAqIGZldGNoIG1lbnUgZm9yIHRoZSBkYXkgYW5kIHNldHVwIG1lbnUgZm9yIHRoZSBkYXlcbiAqL1xuY29uc3QgTWVudVNlcnZpY2UgPSB7XG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gU2V0dXAgdGhlIG1lYWwgZm9yIHRoZSBkYXlcbiAgICogQHJldHVybnMge0FycmF5fSBtZW51IG9iamVjdCBhcnJheVxuICAgKi9cbiAgc2V0VXBNZW51KGlkKSB7XG4gICAgY29uc3QgZm91bmRNZWFsID0gZHVtbXlEYXRhLm1lYWxzLmZpbmQobWVhbCA9PiBtZWFsLmlkID09PSBOdW1iZXIoaWQpKTtcblxuICAgIGlmIChmb3VuZE1lYWwpIHtcbiAgICAgIGZvdW5kTWVhbC5hdmFpbGFibGUgPSB0cnVlO1xuXG4gICAgICAvLyBjaGVja3MgaWYgbWVhbCBoYXMgYWxyZWFkeSBiZWVuIGFkZGVkIHRvIG1lbnVsaXN0XG4gICAgICBjb25zdCBpc0FkZGVkID0gZHVtbXlEYXRhLm1lbnUuZmluZChtZWFsID0+IG1lYWwuaWQgPT09IE51bWJlcihpZCkpO1xuXG4gICAgICBpZiAoaXNBZGRlZCkge1xuICAgICAgICByZXR1cm4gJ01lYWwgaGFzIGFscmVhZHkgYmVlbiBhZGRlZCB0byBtZW51IGxpc3QnO1xuICAgICAgfVxuICAgICAgZHVtbXlEYXRhLm1lbnUucHVzaChmb3VuZE1lYWwpO1xuICAgIH1cblxuICAgIHJldHVybiBmb3VuZE1lYWw7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBSZXRyaWV2ZSBhbmQgcmV0dXJuIGFsbCBtZW51IGZyb20gb3VyIGR1bW15eSBkYXRhXG4gICAqIEByZXR1cm5zIHtBcnJheX0gbWVudSBvYmplY3QgYXJyYXlcbiAgICovXG4gIGZldGNoTWVudSgpIHtcbiAgICByZXR1cm4gZHVtbXlEYXRhLm1lbnUuZmlsdGVyKG1lYWwgPT4gbWVhbC5hdmFpbGFibGUgPT09IHRydWUpO1xuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgTWVudVNlcnZpY2U7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "menu.service.js"
      ],
      "names": [
        "MenuService",
        "setUpMenu",
        "id",
        "foundMeal",
        "dummyData",
        "meals",
        "find",
        "meal",
        "Number",
        "available",
        "isAdded",
        "menu",
        "push",
        "fetchMenu",
        "filter"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;;;;AAIA,IAAMA,WAAW,GAAG;AAClB;;;;AAIAC,EAAAA,SALkB,qBAKRC,EALQ,EAKJ;AACZ,QAAMC,SAAS,GAAGC,mBAAUC,KAAV,CAAgBC,IAAhB,CAAqB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CAAtB;AAAA,KAAzB,CAAlB;;AAEA,QAAIC,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACM,SAAV,GAAsB,IAAtB,CADa,CAGb;;AACA,UAAMC,OAAO,GAAGN,mBAAUO,IAAV,CAAeL,IAAf,CAAoB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CAAtB;AAAA,OAAxB,CAAhB;;AAEA,UAAIQ,OAAJ,EAAa;AACX,eAAO,0CAAP;AACD;;AACDN,yBAAUO,IAAV,CAAeC,IAAf,CAAoBT,SAApB;AACD;;AAED,WAAOA,SAAP;AACD,GArBiB;;AAuBlB;;;;AAIAU,EAAAA,SA3BkB,uBA2BN;AACV,WAAOT,mBAAUO,IAAV,CAAeG,MAAf,CAAsB,UAAAP,IAAI;AAAA,aAAIA,IAAI,CAACE,SAAL,KAAmB,IAAvB;AAAA,KAA1B,CAAP;AACD;AA7BiB,CAApB;eAgCeT,W",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/services",
      "sourcesContent": [
        "import dummyData from '../utils/dummyData';\n\n/**\n * menu services performs all action related to menu-\n * fetch menu for the day and setup menu for the day\n */\nconst MenuService = {\n  /**\n   * @description Setup the meal for the day\n   * @returns {Array} menu object array\n   */\n  setUpMenu(id) {\n    const foundMeal = dummyData.meals.find(meal => meal.id === Number(id));\n\n    if (foundMeal) {\n      foundMeal.available = true;\n\n      // checks if meal has already been added to menulist\n      const isAdded = dummyData.menu.find(meal => meal.id === Number(id));\n\n      if (isAdded) {\n        return 'Meal has already been added to menu list';\n      }\n      dummyData.menu.push(foundMeal);\n    }\n\n    return foundMeal;\n  },\n\n  /**\n   * @description Retrieve and return all menu from our dummyy data\n   * @returns {Array} menu object array\n   */\n  fetchMenu() {\n    return dummyData.menu.filter(meal => meal.available === true);\n  },\n};\n\nexport default MenuService;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550570550441
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/test/order.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/order.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/order.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/order.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
        "sourceFileName": "order.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nrequire(\"chai/register-should\");\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _index = _interopRequireDefault(require(\"../v1/index\"));\n\nvar _dummyData = _interopRequireDefault(require(\"../v1/utils/dummyData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_chai.default.use(_chaiHttp.default); // This runs before each test\n\n\ndescribe('Order', function () {\n  beforeEach(function (done) {\n    done();\n  });\n  /**\n   * Test the POST /orders/ route\n   */\n\n  describe('POST /orders', function () {\n    it(\"it should place an order for a meal available in the today's menu\", function (done) {\n      var id = Number(_dummyData.default.menu[0].id);\n      var validMeal = {\n        mealId: id,\n        type: 'breakfast'\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/orders').send(validMeal).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Your order has been placed');\n        done();\n      });\n    });\n    it(\"it should not place an order for a meal that is not available in today's menu\", function (done) {\n      var id = 50;\n      var validMeal = {\n        mealId: id,\n        type: 'breakfast'\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/orders').send(validMeal).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('This meal cannot be found');\n        done();\n      });\n    });\n    it('it should not place an order for a meal without \"mealId\" parameter', function (done) {\n      var validMeal = {\n        type: 'breakfast'\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/orders').send(validMeal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('All parameters are required');\n        done();\n      });\n    });\n    it('it should not place an order for a meal without \"type\" parameter', function (done) {\n      var id = 50;\n      var validMeal = {\n        mealId: id\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/orders').send(validMeal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('All parameters are required');\n        done();\n      });\n    });\n    it('it should throw an error when a number is not passed as mealId', function (done) {\n      var id = '5c'; // Invalid mealId\n\n      var validMeal = {\n        mealId: id,\n        type: 'breakfast'\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/orders').send(validMeal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Invalid mealId. mealId must be a number');\n        done();\n      });\n    });\n  });\n  /**\n   * Test the PUT /orders/:orderId route\n   */\n\n  describe('PUT /orders/:orderId', function () {\n    it(\"it should update an ordered meal with another meal available in today's menu\", function (done) {\n      var orderId = Number(_dummyData.default.orders[0].id); // This meal is available for today's menu\n\n      var availableMealId = Number(_dummyData.default.menu[0].id);\n      var newOrder = {\n        mealId: availableMealId,\n        type: 'dinner'\n      };\n\n      _chai.default.request(_index.default).put(\"/api/v1/orders/\".concat(orderId)).send(newOrder).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Order was successfully updated');\n        res.body.data.should.have.property('type').eql('dinner');\n        res.body.data.meal.should.have.property('name').eql('Jollof Rice');\n        done();\n      });\n    });\n    it(\"it should throw an error when order is updated with a meal that is not available in today's menu\", function (done) {\n      var orderId = Number(_dummyData.default.orders[0].id); // This meal is not available in today's menu\n\n      var meal = _dummyData.default.meals[5];\n      var unAvailableMealId = Number(meal.id);\n      var newOrder = {\n        mealId: unAvailableMealId,\n        type: 'dinner'\n      };\n\n      _chai.default.request(_index.default).put(\"/api/v1/orders/\".concat(orderId)).send(newOrder).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql(\"Order with id \".concat(orderId, \" or Meal with id \").concat(unAvailableMealId, \" cannot be found\"));\n        done();\n      });\n    });\n    it('it should throw an error when wrong orderId is passed', function (done) {\n      // This meal is not available in today's menu\n      var orderId = 100;\n      var availableMealId = Number(_dummyData.default.menu[0].id);\n      var newOrder = {\n        mealId: availableMealId,\n        type: 'dinner'\n      };\n\n      _chai.default.request(_index.default).put(\"/api/v1/orders/\".concat(orderId)).send(newOrder).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql(\"Order with id \".concat(orderId, \" or Meal with id \").concat(availableMealId, \" cannot be found\"));\n        done();\n      });\n    });\n    it('it should throw an error when  orderId or mealId is not a number', function (done) {\n      // This meal is not available in today's menu\n      var orderId = '1c';\n      var availableMealId = Number(_dummyData.default.menu[0].id);\n      var newOrder = {\n        mealId: availableMealId,\n        type: 'dinner'\n      };\n\n      _chai.default.request(_index.default).put(\"/api/v1/orders/\".concat(orderId)).send(newOrder).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql(\"Invalid ID. ID's must be a number\");\n        done();\n      });\n    });\n  });\n  /**\n   * Test the GET /orders route\n   */\n\n  describe('GET /orders ', function () {\n    it('it should get all orders', function (done) {\n      _chai.default.request(_index.default).get('/api/v1/orders').end(function (err, res) {\n        res.should.have.status(200);\n        res.body.data.should.be.a('array');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "order.test.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHttp",
        "describe",
        "beforeEach",
        "done",
        "it",
        "id",
        "Number",
        "dummyData",
        "menu",
        "validMeal",
        "mealId",
        "type",
        "request",
        "app",
        "post",
        "send",
        "end",
        "err",
        "res",
        "should",
        "have",
        "status",
        "body",
        "be",
        "a",
        "property",
        "eql",
        "orderId",
        "orders",
        "availableMealId",
        "newOrder",
        "put",
        "data",
        "meal",
        "meals",
        "unAvailableMealId",
        "get"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,cAAKC,GAAL,CAASC,iBAAT,E,CAEA;;;AACAC,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBC,EAAAA,UAAU,CAAC,UAACC,IAAD,EAAU;AACnBA,IAAAA,IAAI;AACL,GAFS,CAAV;AAIA;;;;AAGAF,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BG,IAAAA,EAAE,CAAC,mEAAD,EAAsE,UAACD,IAAD,EAAU;AAChF,UAAME,EAAE,GAAGC,MAAM,CAACC,mBAAUC,IAAV,CAAe,CAAf,EAAkBH,EAAnB,CAAjB;AACA,UAAMI,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAEL,EADQ;AAEhBM,QAAAA,IAAI,EAAE;AAFU,OAAlB;;AAIAb,oBACGc,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQN,SAHR,EAIGO,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,4BAA7C;AACAvB,QAAAA,IAAI;AACL,OATH;AAUD,KAhBC,CAAF;AAkBAC,IAAAA,EAAE,CAAC,+EAAD,EAAkF,UAACD,IAAD,EAAU;AAC5F,UAAME,EAAE,GAAG,EAAX;AACA,UAAMI,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAEL,EADQ;AAEhBM,QAAAA,IAAI,EAAE;AAFU,OAAlB;;AAIAb,oBACGc,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQN,SAHR,EAIGO,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,2BAA7C;AACAvB,QAAAA,IAAI;AACL,OATH;AAUD,KAhBC,CAAF;AAkBAC,IAAAA,EAAE,CAAC,oEAAD,EAAuE,UAACD,IAAD,EAAU;AACjF,UAAMM,SAAS,GAAG;AAChBE,QAAAA,IAAI,EAAE;AADU,OAAlB;;AAGAb,oBACGc,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQN,SAHR,EAIGO,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,6BAA7C;AACAvB,QAAAA,IAAI;AACL,OATH;AAUD,KAdC,CAAF;AAgBAC,IAAAA,EAAE,CAAC,kEAAD,EAAqE,UAACD,IAAD,EAAU;AAC/E,UAAME,EAAE,GAAG,EAAX;AACA,UAAMI,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAEL;AADQ,OAAlB;;AAGAP,oBACGc,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQN,SAHR,EAIGO,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,6BAA7C;AACAvB,QAAAA,IAAI;AACL,OATH;AAUD,KAfC,CAAF;AAiBAC,IAAAA,EAAE,CAAC,gEAAD,EAAmE,UAACD,IAAD,EAAU;AAC7E,UAAME,EAAE,GAAG,IAAX,CAD6E,CAC5D;;AACjB,UAAMI,SAAS,GAAG;AAChBC,QAAAA,MAAM,EAAEL,EADQ;AAEhBM,QAAAA,IAAI,EAAE;AAFU,OAAlB;;AAIAb,oBACGc,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,gBAFR,EAGGC,IAHH,CAGQN,SAHR,EAIGO,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,yCAA7C;AACAvB,QAAAA,IAAI;AACL,OATH;AAUD,KAhBC,CAAF;AAiBD,GAvFO,CAAR;AAyFA;;;;AAGAF,EAAAA,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCG,IAAAA,EAAE,CAAC,8EAAD,EAAiF,UAACD,IAAD,EAAU;AAC3F,UAAMwB,OAAO,GAAGrB,MAAM,CAACC,mBAAUqB,MAAV,CAAiB,CAAjB,EAAoBvB,EAArB,CAAtB,CAD2F,CAE3F;;AACA,UAAMwB,eAAe,GAAGvB,MAAM,CAACC,mBAAUC,IAAV,CAAe,CAAf,EAAkBH,EAAnB,CAA9B;AAEA,UAAMyB,QAAQ,GAAG;AACfpB,QAAAA,MAAM,EAAEmB,eADO;AAEflB,QAAAA,IAAI,EAAE;AAFS,OAAjB;;AAKAb,oBACGc,OADH,CACWC,cADX,EAEGkB,GAFH,0BAEyBJ,OAFzB,GAGGZ,IAHH,CAGQe,QAHR,EAIGd,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,gCAA7C;AACAR,QAAAA,GAAG,CAACI,IAAJ,CAASU,IAAT,CAAcb,MAAd,CAAqBC,IAArB,CAA0BK,QAA1B,CAAmC,MAAnC,EAA2CC,GAA3C,CAA+C,QAA/C;AACAR,QAAAA,GAAG,CAACI,IAAJ,CAASU,IAAT,CAAcC,IAAd,CAAmBd,MAAnB,CAA0BC,IAA1B,CAA+BK,QAA/B,CAAwC,MAAxC,EAAgDC,GAAhD,CAAoD,aAApD;AAEAvB,QAAAA,IAAI;AACL,OAZH;AAaD,KAvBC,CAAF;AAyBAC,IAAAA,EAAE,CAAC,kGAAD,EAAqG,UAACD,IAAD,EAAU;AAC/G,UAAMwB,OAAO,GAAGrB,MAAM,CAACC,mBAAUqB,MAAV,CAAiB,CAAjB,EAAoBvB,EAArB,CAAtB,CAD+G,CAG/G;;AACA,UAAM4B,IAAI,GAAG1B,mBAAU2B,KAAV,CAAgB,CAAhB,CAAb;AACA,UAAMC,iBAAiB,GAAG7B,MAAM,CAAC2B,IAAI,CAAC5B,EAAN,CAAhC;AAEA,UAAMyB,QAAQ,GAAG;AACfpB,QAAAA,MAAM,EAAEyB,iBADO;AAEfxB,QAAAA,IAAI,EAAE;AAFS,OAAjB;;AAKAb,oBACGc,OADH,CACWC,cADX,EAEGkB,GAFH,0BAEyBJ,OAFzB,GAGGZ,IAHH,CAGQe,QAHR,EAIGd,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CACGK,QADH,CACY,SADZ,EAEGC,GAFH,yBAEwBC,OAFxB,8BAEmDQ,iBAFnD;AAGAhC,QAAAA,IAAI;AACL,OAXH;AAYD,KAxBC,CAAF;AA0BAC,IAAAA,EAAE,CAAC,uDAAD,EAA0D,UAACD,IAAD,EAAU;AACpE;AACA,UAAMwB,OAAO,GAAG,GAAhB;AACA,UAAME,eAAe,GAAGvB,MAAM,CAACC,mBAAUC,IAAV,CAAe,CAAf,EAAkBH,EAAnB,CAA9B;AAEA,UAAMyB,QAAQ,GAAG;AACfpB,QAAAA,MAAM,EAAEmB,eADO;AAEflB,QAAAA,IAAI,EAAE;AAFS,OAAjB;;AAKAb,oBACGc,OADH,CACWC,cADX,EAEGkB,GAFH,0BAEyBJ,OAFzB,GAGGZ,IAHH,CAGQe,QAHR,EAIGd,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CACGK,QADH,CACY,SADZ,EAEGC,GAFH,yBAEwBC,OAFxB,8BAEmDE,eAFnD;AAGA1B,QAAAA,IAAI;AACL,OAXH;AAYD,KAtBC,CAAF;AAwBAC,IAAAA,EAAE,CAAC,kEAAD,EAAqE,UAACD,IAAD,EAAU;AAC/E;AACA,UAAMwB,OAAO,GAAG,IAAhB;AACA,UAAME,eAAe,GAAGvB,MAAM,CAACC,mBAAUC,IAAV,CAAe,CAAf,EAAkBH,EAAnB,CAA9B;AAEA,UAAMyB,QAAQ,GAAG;AACfpB,QAAAA,MAAM,EAAEmB,eADO;AAEflB,QAAAA,IAAI,EAAE;AAFS,OAAjB;;AAKAb,oBACGc,OADH,CACWC,cADX,EAEGkB,GAFH,0BAEyBJ,OAFzB,GAGGZ,IAHH,CAGQe,QAHR,EAIGd,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBI,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBK,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,mCAA7C;AACAvB,QAAAA,IAAI;AACL,OATH;AAUD,KApBC,CAAF;AAqBD,GAjGO,CAAR;AAmGA;;;;AAGAF,EAAAA,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7BG,IAAAA,EAAE,CAAC,0BAAD,EAA6B,UAACD,IAAD,EAAU;AACvCL,oBACGc,OADH,CACWC,cADX,EAEGuB,GAFH,CAEO,gBAFP,EAGGpB,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASU,IAAT,CAAcb,MAAd,CAAqBI,EAArB,CAAwBC,CAAxB,CAA0B,OAA1B;AACArB,QAAAA,IAAI;AACL,OAPH;AAQD,KATC,CAAF;AAUD,GAXO,CAAR;AAYD,CAtNO,CAAR",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
      "sourcesContent": [
        "import chai from 'chai';\nimport 'chai/register-should';\nimport chaiHttp from 'chai-http';\nimport app from '../v1/index';\nimport dummyData from '../v1/utils/dummyData';\n\nchai.use(chaiHttp);\n\n// This runs before each test\ndescribe('Order', () => {\n  beforeEach((done) => {\n    done();\n  });\n\n  /**\n   * Test the POST /orders/ route\n   */\n  describe('POST /orders', () => {\n    it(\"it should place an order for a meal available in the today's menu\", (done) => {\n      const id = Number(dummyData.menu[0].id);\n      const validMeal = {\n        mealId: id,\n        type: 'breakfast',\n      };\n      chai\n        .request(app)\n        .post('/api/v1/orders')\n        .send(validMeal)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Your order has been placed');\n          done();\n        });\n    });\n\n    it(\"it should not place an order for a meal that is not available in today's menu\", (done) => {\n      const id = 50;\n      const validMeal = {\n        mealId: id,\n        type: 'breakfast',\n      };\n      chai\n        .request(app)\n        .post('/api/v1/orders')\n        .send(validMeal)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('This meal cannot be found');\n          done();\n        });\n    });\n\n    it('it should not place an order for a meal without \"mealId\" parameter', (done) => {\n      const validMeal = {\n        type: 'breakfast',\n      };\n      chai\n        .request(app)\n        .post('/api/v1/orders')\n        .send(validMeal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('All parameters are required');\n          done();\n        });\n    });\n\n    it('it should not place an order for a meal without \"type\" parameter', (done) => {\n      const id = 50;\n      const validMeal = {\n        mealId: id,\n      };\n      chai\n        .request(app)\n        .post('/api/v1/orders')\n        .send(validMeal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('All parameters are required');\n          done();\n        });\n    });\n\n    it('it should throw an error when a number is not passed as mealId', (done) => {\n      const id = '5c'; // Invalid mealId\n      const validMeal = {\n        mealId: id,\n        type: 'breakfast',\n      };\n      chai\n        .request(app)\n        .post('/api/v1/orders')\n        .send(validMeal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Invalid mealId. mealId must be a number');\n          done();\n        });\n    });\n  });\n\n  /**\n   * Test the PUT /orders/:orderId route\n   */\n  describe('PUT /orders/:orderId', () => {\n    it(\"it should update an ordered meal with another meal available in today's menu\", (done) => {\n      const orderId = Number(dummyData.orders[0].id);\n      // This meal is available for today's menu\n      const availableMealId = Number(dummyData.menu[0].id);\n\n      const newOrder = {\n        mealId: availableMealId,\n        type: 'dinner',\n      };\n\n      chai\n        .request(app)\n        .put(`/api/v1/orders/${orderId}`)\n        .send(newOrder)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Order was successfully updated');\n          res.body.data.should.have.property('type').eql('dinner');\n          res.body.data.meal.should.have.property('name').eql('Jollof Rice');\n\n          done();\n        });\n    });\n\n    it(\"it should throw an error when order is updated with a meal that is not available in today's menu\", (done) => {\n      const orderId = Number(dummyData.orders[0].id);\n\n      // This meal is not available in today's menu\n      const meal = dummyData.meals[5];\n      const unAvailableMealId = Number(meal.id);\n\n      const newOrder = {\n        mealId: unAvailableMealId,\n        type: 'dinner',\n      };\n\n      chai\n        .request(app)\n        .put(`/api/v1/orders/${orderId}`)\n        .send(newOrder)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have\n            .property('message')\n            .eql(`Order with id ${orderId} or Meal with id ${unAvailableMealId} cannot be found`);\n          done();\n        });\n    });\n\n    it('it should throw an error when wrong orderId is passed', (done) => {\n      // This meal is not available in today's menu\n      const orderId = 100;\n      const availableMealId = Number(dummyData.menu[0].id);\n\n      const newOrder = {\n        mealId: availableMealId,\n        type: 'dinner',\n      };\n\n      chai\n        .request(app)\n        .put(`/api/v1/orders/${orderId}`)\n        .send(newOrder)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have\n            .property('message')\n            .eql(`Order with id ${orderId} or Meal with id ${availableMealId} cannot be found`);\n          done();\n        });\n    });\n\n    it('it should throw an error when  orderId or mealId is not a number', (done) => {\n      // This meal is not available in today's menu\n      const orderId = '1c';\n      const availableMealId = Number(dummyData.menu[0].id);\n\n      const newOrder = {\n        mealId: availableMealId,\n        type: 'dinner',\n      };\n\n      chai\n        .request(app)\n        .put(`/api/v1/orders/${orderId}`)\n        .send(newOrder)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql(\"Invalid ID. ID's must be a number\");\n          done();\n        });\n    });\n  });\n\n  /**\n   * Test the GET /orders route\n   */\n  describe('GET /orders ', () => {\n    it('it should get all orders', (done) => {\n      chai\n        .request(app)\n        .get('/api/v1/orders')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.data.should.be.a('array');\n          done();\n        });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550597326535
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/test\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/test/menu.test.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/menu.test.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/menu.test.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/test/menu.test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
        "sourceFileName": "menu.test.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _chai = _interopRequireDefault(require(\"chai\"));\n\nrequire(\"chai/register-should\");\n\nvar _chaiHttp = _interopRequireDefault(require(\"chai-http\"));\n\nvar _index = _interopRequireDefault(require(\"../v1/index\"));\n\nvar _dummyData = _interopRequireDefault(require(\"../v1/utils/dummyData\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_chai.default.use(_chaiHttp.default);\n\ndescribe('Menu', function () {\n  beforeEach(function (done) {\n    done();\n  });\n  /**\n   * POST the /menu/ route\n   */\n\n  describe('POST /menu', function () {\n    it('it should add a meal given the id to the menu', function (done) {\n      var mealId = Number(_dummyData.default.meals[1].id);\n      var meal = {\n        id: mealId\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/menu').send(meal).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.have.property('message').eql('Meal successfully added to Menu List');\n        res.body.data.should.have.property('id').eql(mealId);\n        done();\n      });\n    });\n    it('it should send a message if meal has already been added', function (done) {\n      var mealId = Number(_dummyData.default.meals[1].id);\n      var meal = {\n        id: mealId\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/menu').send(meal).end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Meal has already been added to menu list');\n        done();\n      });\n    });\n    it('it should throw an error when the given meal id is not found', function (done) {\n      var meal = {\n        id: 100\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/menu').send(meal).end(function (err, res) {\n        res.should.have.status(404);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql(\"Meal with id \".concat(meal.id, \" cannot be found\"));\n        done();\n      });\n    });\n    it('it should throw an error when mealId parameter(body) is missing', function (done) {\n      var meal = {};\n\n      _chai.default.request(_index.default).post('/api/v1/menu').send(meal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('meal id is required');\n        done();\n      });\n    });\n    it('it should throw an error when a number is not passed as mealId', function (done) {\n      var meal = {\n        id: '1c'\n      };\n\n      _chai.default.request(_index.default).post('/api/v1/menu').send(meal).end(function (err, res) {\n        res.should.have.status(400);\n        res.body.should.be.a('object');\n        res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n        done();\n      });\n    });\n  });\n  /**\n   * GET the /menu/ route\n   */\n\n  describe('GET /menu', function () {\n    it('it should get all menu for today', function (done) {\n      _chai.default.request(_index.default).get('/api/v1/menu').end(function (err, res) {\n        res.should.have.status(200);\n        res.body.should.be.a('object');\n        res.body.data.should.be.a('array');\n        done();\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "menu.test.js"
      ],
      "names": [
        "chai",
        "use",
        "chaiHttp",
        "describe",
        "beforeEach",
        "done",
        "it",
        "mealId",
        "Number",
        "dummyData",
        "meals",
        "id",
        "meal",
        "request",
        "app",
        "post",
        "send",
        "end",
        "err",
        "res",
        "should",
        "have",
        "status",
        "body",
        "property",
        "eql",
        "data",
        "be",
        "a",
        "get"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,cAAKC,GAAL,CAASC,iBAAT;;AAEAC,QAAQ,CAAC,MAAD,EAAS,YAAM;AACrBC,EAAAA,UAAU,CAAC,UAACC,IAAD,EAAU;AACnBA,IAAAA,IAAI;AACL,GAFS,CAAV;AAIA;;;;AAGAF,EAAAA,QAAQ,CAAC,YAAD,EAAe,YAAM;AAC3BG,IAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACD,IAAD,EAAU;AAC5D,UAAME,MAAM,GAAGC,MAAM,CAACC,mBAAUC,KAAV,CAAgB,CAAhB,EAAmBC,EAApB,CAArB;AACA,UAAMC,IAAI,GAAG;AACXD,QAAAA,EAAE,EAAEJ;AADO,OAAb;;AAGAP,oBACGa,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,cAFR,EAGGC,IAHH,CAGQJ,IAHR,EAIGK,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBG,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,sCAA7C;AACAN,QAAAA,GAAG,CAACI,IAAJ,CAASG,IAAT,CAAcN,MAAd,CAAqBC,IAArB,CAA0BG,QAA1B,CAAmC,IAAnC,EAAyCC,GAAzC,CAA6ClB,MAA7C;AACAF,QAAAA,IAAI;AACL,OATH;AAUD,KAfC,CAAF;AAiBAC,IAAAA,EAAE,CAAC,yDAAD,EAA4D,UAACD,IAAD,EAAU;AACtE,UAAME,MAAM,GAAGC,MAAM,CAACC,mBAAUC,KAAV,CAAgB,CAAhB,EAAmBC,EAApB,CAArB;AACA,UAAMC,IAAI,GAAG;AACXD,QAAAA,EAAE,EAAEJ;AADO,OAAb;;AAGAP,oBACGa,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,cAFR,EAGGC,IAHH,CAGQJ,IAHR,EAIGK,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBO,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAT,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBG,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,0CAA7C;AACApB,QAAAA,IAAI;AACL,OATH;AAUD,KAfC,CAAF;AAiBAC,IAAAA,EAAE,CAAC,8DAAD,EAAiE,UAACD,IAAD,EAAU;AAC3E,UAAMO,IAAI,GAAG;AACXD,QAAAA,EAAE,EAAE;AADO,OAAb;;AAGAX,oBACGa,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,cAFR,EAGGC,IAHH,CAGQJ,IAHR,EAIGK,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBO,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAT,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBG,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,wBAA6Db,IAAI,CAACD,EAAlE;AACAN,QAAAA,IAAI;AACL,OATH;AAUD,KAdC,CAAF;AAgBAC,IAAAA,EAAE,CAAC,iEAAD,EAAoE,UAACD,IAAD,EAAU;AAC9E,UAAMO,IAAI,GAAG,EAAb;;AACAZ,oBACGa,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,cAFR,EAGGC,IAHH,CAGQJ,IAHR,EAIGK,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBO,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAT,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBG,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,qBAA7C;AACApB,QAAAA,IAAI;AACL,OATH;AAUD,KAZC,CAAF;AAcAC,IAAAA,EAAE,CAAC,gEAAD,EAAmE,UAACD,IAAD,EAAU;AAC7E,UAAMO,IAAI,GAAG;AACXD,QAAAA,EAAE,EAAE;AADO,OAAb;;AAGAX,oBACGa,OADH,CACWC,cADX,EAEGC,IAFH,CAEQ,cAFR,EAGGC,IAHH,CAGQJ,IAHR,EAIGK,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBO,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAT,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBC,IAAhB,CAAqBG,QAArB,CAA8B,SAA9B,EAAyCC,GAAzC,CAA6C,iCAA7C;AACApB,QAAAA,IAAI;AACL,OATH;AAUD,KAdC,CAAF;AAeD,GAhFO,CAAR;AAkFA;;;;AAGAF,EAAAA,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1BG,IAAAA,EAAE,CAAC,kCAAD,EAAqC,UAACD,IAAD,EAAU;AAC/CL,oBACGa,OADH,CACWC,cADX,EAEGe,GAFH,CAEO,cAFP,EAGGZ,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,GAAvB;AACAH,QAAAA,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAgBO,EAAhB,CAAmBC,CAAnB,CAAqB,QAArB;AACAT,QAAAA,GAAG,CAACI,IAAJ,CAASG,IAAT,CAAcN,MAAd,CAAqBO,EAArB,CAAwBC,CAAxB,CAA0B,OAA1B;AACAvB,QAAAA,IAAI;AACL,OARH;AASD,KAVC,CAAF;AAWD,GAZO,CAAR;AAaD,CA1GO,CAAR",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/test",
      "sourcesContent": [
        "import chai from 'chai';\nimport 'chai/register-should';\nimport chaiHttp from 'chai-http';\nimport app from '../v1/index';\nimport dummyData from '../v1/utils/dummyData';\n\nchai.use(chaiHttp);\n\ndescribe('Menu', () => {\n  beforeEach((done) => {\n    done();\n  });\n\n  /**\n   * POST the /menu/ route\n   */\n  describe('POST /menu', () => {\n    it('it should add a meal given the id to the menu', (done) => {\n      const mealId = Number(dummyData.meals[1].id);\n      const meal = {\n        id: mealId,\n      };\n      chai\n        .request(app)\n        .post('/api/v1/menu')\n        .send(meal)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message').eql('Meal successfully added to Menu List');\n          res.body.data.should.have.property('id').eql(mealId);\n          done();\n        });\n    });\n\n    it('it should send a message if meal has already been added', (done) => {\n      const mealId = Number(dummyData.meals[1].id);\n      const meal = {\n        id: mealId,\n      };\n      chai\n        .request(app)\n        .post('/api/v1/menu')\n        .send(meal)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Meal has already been added to menu list');\n          done();\n        });\n    });\n\n    it('it should throw an error when the given meal id is not found', (done) => {\n      const meal = {\n        id: 100,\n      };\n      chai\n        .request(app)\n        .post('/api/v1/menu')\n        .send(meal)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql(`Meal with id ${meal.id} cannot be found`);\n          done();\n        });\n    });\n\n    it('it should throw an error when mealId parameter(body) is missing', (done) => {\n      const meal = {};\n      chai\n        .request(app)\n        .post('/api/v1/menu')\n        .send(meal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('meal id is required');\n          done();\n        });\n    });\n\n    it('it should throw an error when a number is not passed as mealId', (done) => {\n      const meal = {\n        id: '1c',\n      };\n      chai\n        .request(app)\n        .post('/api/v1/menu')\n        .send(meal)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.a('object');\n          res.body.should.have.property('message').eql('Invalid ID. ID must be a number');\n          done();\n        });\n    });\n  });\n\n  /**\n   * GET the /menu/ route\n   */\n  describe('GET /menu', () => {\n    it('it should get all menu for today', (done) => {\n      chai\n        .request(app)\n        .get('/api/v1/menu')\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.a('object');\n          res.body.data.should.be.a('array');\n          done();\n        });\n    });\n  });\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550597326534
  },
  "{\"sourceRoot\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"filename\":\"/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/ResponseGenerator.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/codepreneur/WebstormProjects/BetaChop/API\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.2.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/ResponseGenerator.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/codepreneur/WebstormProjects/BetaChop/API",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/ResponseGenerator.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils/ResponseGenerator.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
        "sourceFileName": "ResponseGenerator.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * a class for api response\n */\nvar ResponseGenerator =\n/*#__PURE__*/\nfunction () {\n  function ResponseGenerator() {\n    _classCallCheck(this, ResponseGenerator);\n\n    this.statusCode = null;\n    this.type = null;\n    this.data = [] || {};\n    this.message = null;\n  }\n  /**\n   * @description set Api response for 200 & 201\n   *  @param{int} statusCode\n   * @param {object} data\n   */\n\n\n  _createClass(ResponseGenerator, [{\n    key: \"setSuccess\",\n    value: function setSuccess(statusCode, message, data) {\n      this.statusCode = statusCode;\n\n      if (message != null) {\n        this.message = message;\n      }\n\n      if (data != null) {\n        this.data = data;\n      }\n\n      this.type = 'success';\n    }\n    /**\n     * @description set Api response for 400, 401, 403, 404, 503\n     *  @param{int} statusCode\n     * @param {object} data\n     */\n\n  }, {\n    key: \"setError\",\n    value: function setError(statusCode, message) {\n      this.statusCode = statusCode;\n      this.message = message;\n      this.type = 'error';\n    }\n    /**\n     * Sends response\n     * @param {object} res\n     * @returns {object} responseObject\n     */\n\n  }, {\n    key: \"send\",\n    value: function send(res) {\n      if (this.type === 'success') {\n        return res.status(this.statusCode).json({\n          status: this.type,\n          message: this.message,\n          data: this.data\n        });\n      } // Here this.type === 'failure'\n\n\n      return res.status(this.statusCode).json({\n        status: this.type,\n        message: this.message\n      });\n    }\n  }]);\n\n  return ResponseGenerator;\n}();\n\nvar _default = ResponseGenerator;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlc3BvbnNlR2VuZXJhdG9yLmpzIl0sIm5hbWVzIjpbIlJlc3BvbnNlR2VuZXJhdG9yIiwic3RhdHVzQ29kZSIsInR5cGUiLCJkYXRhIiwibWVzc2FnZSIsInJlcyIsInN0YXR1cyIsImpzb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7O0lBR01BLGlCOzs7QUFDSiwrQkFBYztBQUFBOztBQUNaLFNBQUtDLFVBQUwsR0FBa0IsSUFBbEI7QUFDQSxTQUFLQyxJQUFMLEdBQVksSUFBWjtBQUNBLFNBQUtDLElBQUwsR0FBWSxNQUFNLEVBQWxCO0FBQ0EsU0FBS0MsT0FBTCxHQUFlLElBQWY7QUFDRDtBQUVEOzs7Ozs7Ozs7K0JBTVdILFUsRUFBWUcsTyxFQUFTRCxJLEVBQU07QUFDcEMsV0FBS0YsVUFBTCxHQUFrQkEsVUFBbEI7O0FBQ0EsVUFBSUcsT0FBTyxJQUFJLElBQWYsRUFBcUI7QUFDbkIsYUFBS0EsT0FBTCxHQUFlQSxPQUFmO0FBQ0Q7O0FBQ0QsVUFBSUQsSUFBSSxJQUFJLElBQVosRUFBa0I7QUFDaEIsYUFBS0EsSUFBTCxHQUFZQSxJQUFaO0FBQ0Q7O0FBQ0QsV0FBS0QsSUFBTCxHQUFZLFNBQVo7QUFDRDtBQUVEOzs7Ozs7Ozs2QkFNU0QsVSxFQUFZRyxPLEVBQVM7QUFDNUIsV0FBS0gsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxXQUFLRyxPQUFMLEdBQWVBLE9BQWY7QUFDQSxXQUFLRixJQUFMLEdBQVksT0FBWjtBQUNEO0FBRUQ7Ozs7Ozs7O3lCQUtLRyxHLEVBQUs7QUFDUixVQUFJLEtBQUtILElBQUwsS0FBYyxTQUFsQixFQUE2QjtBQUMzQixlQUFPRyxHQUFHLENBQUNDLE1BQUosQ0FBVyxLQUFLTCxVQUFoQixFQUE0Qk0sSUFBNUIsQ0FBaUM7QUFDdENELFVBQUFBLE1BQU0sRUFBRSxLQUFLSixJQUR5QjtBQUV0Q0UsVUFBQUEsT0FBTyxFQUFFLEtBQUtBLE9BRndCO0FBR3RDRCxVQUFBQSxJQUFJLEVBQUUsS0FBS0E7QUFIMkIsU0FBakMsQ0FBUDtBQUtELE9BUE8sQ0FRUjs7O0FBQ0EsYUFBT0UsR0FBRyxDQUFDQyxNQUFKLENBQVcsS0FBS0wsVUFBaEIsRUFBNEJNLElBQTVCLENBQWlDO0FBQ3RDRCxRQUFBQSxNQUFNLEVBQUUsS0FBS0osSUFEeUI7QUFFdENFLFFBQUFBLE9BQU8sRUFBRSxLQUFLQTtBQUZ3QixPQUFqQyxDQUFQO0FBSUQ7Ozs7OztlQUdZSixpQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvY29kZXByZW5ldXIvV2Vic3Rvcm1Qcm9qZWN0cy9CZXRhQ2hvcC9BUEkvdjEvdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIGEgY2xhc3MgZm9yIGFwaSByZXNwb25zZVxuICovXG5jbGFzcyBSZXNwb25zZUdlbmVyYXRvciB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc3RhdHVzQ29kZSA9IG51bGw7XG4gICAgdGhpcy50eXBlID0gbnVsbDtcbiAgICB0aGlzLmRhdGEgPSBbXSB8fCB7fTtcbiAgICB0aGlzLm1lc3NhZ2UgPSBudWxsO1xuICB9XG5cbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBzZXQgQXBpIHJlc3BvbnNlIGZvciAyMDAgJiAyMDFcbiAgICogIEBwYXJhbXtpbnR9IHN0YXR1c0NvZGVcbiAgICogQHBhcmFtIHtvYmplY3R9IGRhdGFcbiAgICovXG5cbiAgc2V0U3VjY2VzcyhzdGF0dXNDb2RlLCBtZXNzYWdlLCBkYXRhKSB7XG4gICAgdGhpcy5zdGF0dXNDb2RlID0gc3RhdHVzQ29kZTtcbiAgICBpZiAobWVzc2FnZSAhPSBudWxsKSB7XG4gICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIH1cbiAgICBpZiAoZGF0YSAhPSBudWxsKSB7XG4gICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgIH1cbiAgICB0aGlzLnR5cGUgPSAnc3VjY2Vzcyc7XG4gIH1cblxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIHNldCBBcGkgcmVzcG9uc2UgZm9yIDQwMCwgNDAxLCA0MDMsIDQwNCwgNTAzXG4gICAqICBAcGFyYW17aW50fSBzdGF0dXNDb2RlXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBkYXRhXG4gICAqL1xuXG4gIHNldEVycm9yKHN0YXR1c0NvZGUsIG1lc3NhZ2UpIHtcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy50eXBlID0gJ2Vycm9yJztcbiAgfVxuXG4gIC8qKlxuICAgKiBTZW5kcyByZXNwb25zZVxuICAgKiBAcGFyYW0ge29iamVjdH0gcmVzXG4gICAqIEByZXR1cm5zIHtvYmplY3R9IHJlc3BvbnNlT2JqZWN0XG4gICAqL1xuICBzZW5kKHJlcykge1xuICAgIGlmICh0aGlzLnR5cGUgPT09ICdzdWNjZXNzJykge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXModGhpcy5zdGF0dXNDb2RlKS5qc29uKHtcbiAgICAgICAgc3RhdHVzOiB0aGlzLnR5cGUsXG4gICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgZGF0YTogdGhpcy5kYXRhLFxuICAgICAgfSk7XG4gICAgfVxuICAgIC8vIEhlcmUgdGhpcy50eXBlID09PSAnZmFpbHVyZSdcbiAgICByZXR1cm4gcmVzLnN0YXR1cyh0aGlzLnN0YXR1c0NvZGUpLmpzb24oe1xuICAgICAgc3RhdHVzOiB0aGlzLnR5cGUsXG4gICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVzcG9uc2VHZW5lcmF0b3I7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "ResponseGenerator.js"
      ],
      "names": [
        "ResponseGenerator",
        "statusCode",
        "type",
        "data",
        "message",
        "res",
        "status",
        "json"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;;IAGMA,iB;;;AACJ,+BAAc;AAAA;;AACZ,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,IAAL,GAAY,MAAM,EAAlB;AACA,SAAKC,OAAL,GAAe,IAAf;AACD;AAED;;;;;;;;;+BAMWH,U,EAAYG,O,EAASD,I,EAAM;AACpC,WAAKF,UAAL,GAAkBA,UAAlB;;AACA,UAAIG,OAAO,IAAI,IAAf,EAAqB;AACnB,aAAKA,OAAL,GAAeA,OAAf;AACD;;AACD,UAAID,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAKA,IAAL,GAAYA,IAAZ;AACD;;AACD,WAAKD,IAAL,GAAY,SAAZ;AACD;AAED;;;;;;;;6BAMSD,U,EAAYG,O,EAAS;AAC5B,WAAKH,UAAL,GAAkBA,UAAlB;AACA,WAAKG,OAAL,GAAeA,OAAf;AACA,WAAKF,IAAL,GAAY,OAAZ;AACD;AAED;;;;;;;;yBAKKG,G,EAAK;AACR,UAAI,KAAKH,IAAL,KAAc,SAAlB,EAA6B;AAC3B,eAAOG,GAAG,CAACC,MAAJ,CAAW,KAAKL,UAAhB,EAA4BM,IAA5B,CAAiC;AACtCD,UAAAA,MAAM,EAAE,KAAKJ,IADyB;AAEtCE,UAAAA,OAAO,EAAE,KAAKA,OAFwB;AAGtCD,UAAAA,IAAI,EAAE,KAAKA;AAH2B,SAAjC,CAAP;AAKD,OAPO,CAQR;;;AACA,aAAOE,GAAG,CAACC,MAAJ,CAAW,KAAKL,UAAhB,EAA4BM,IAA5B,CAAiC;AACtCD,QAAAA,MAAM,EAAE,KAAKJ,IADyB;AAEtCE,QAAAA,OAAO,EAAE,KAAKA;AAFwB,OAAjC,CAAP;AAID;;;;;;eAGYJ,iB",
      "sourceRoot": "/Users/codepreneur/WebstormProjects/BetaChop/API/v1/utils",
      "sourcesContent": [
        "/**\n * a class for api response\n */\nclass ResponseGenerator {\n  constructor() {\n    this.statusCode = null;\n    this.type = null;\n    this.data = [] || {};\n    this.message = null;\n  }\n\n  /**\n   * @description set Api response for 200 & 201\n   *  @param{int} statusCode\n   * @param {object} data\n   */\n\n  setSuccess(statusCode, message, data) {\n    this.statusCode = statusCode;\n    if (message != null) {\n      this.message = message;\n    }\n    if (data != null) {\n      this.data = data;\n    }\n    this.type = 'success';\n  }\n\n  /**\n   * @description set Api response for 400, 401, 403, 404, 503\n   *  @param{int} statusCode\n   * @param {object} data\n   */\n\n  setError(statusCode, message) {\n    this.statusCode = statusCode;\n    this.message = message;\n    this.type = 'error';\n  }\n\n  /**\n   * Sends response\n   * @param {object} res\n   * @returns {object} responseObject\n   */\n  send(res) {\n    if (this.type === 'success') {\n      return res.status(this.statusCode).json({\n        status: this.type,\n        message: this.message,\n        data: this.data,\n      });\n    }\n    // Here this.type === 'failure'\n    return res.status(this.statusCode).json({\n      status: this.type,\n      message: this.message,\n    });\n  }\n}\n\nexport default ResponseGenerator;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1550788137794
  }
}